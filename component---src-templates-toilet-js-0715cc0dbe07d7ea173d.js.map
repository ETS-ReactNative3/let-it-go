{"version":3,"sources":["webpack:///./src/components/map.js","webpack:///./src/templates/toilet.js","webpack:///./src/components/layout.js"],"names":["MapComponent","compose","withProps","googleMapURL","loadingElement","react_default","a","createElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","props","lib","defaultZoom","defaultCenter","lat","lng","lon","position","center","myLat","myLon","radius","options","fillColor","fillOpacity","strokeOpacity","accuracy","MapView","_this","_React$Component","call","this","getGeoLocation","navigator","geolocation","getCurrentPosition","console","log","coords","setState","latitude","longitude","err","enableHighAccuracy","state","componentDidMount","_this2","timerID","setInterval","componentWillUnmount","clearInterval","render","React","Component","__webpack_exports__","_ref","data","name","toilets","layout","map","query","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","children","margin","maxWidth","padding"],"mappings":"uKAUMA,EAAeC,kBACnBC,oBAAU,CACRC,aAAY,iHAEZC,eAAgBC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAM,UACpCC,iBAAkBL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAM,WACtCE,WAAYN,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAM,YAElCG,eACAC,gBATmBZ,CAUnB,SAAAa,GAAK,OACLT,EAAAC,EAAAC,cAACQ,EAAA,UAAD,CAAWC,YAAa,GAAIC,cAAe,CAAEC,IAAKJ,EAAMI,IAAKC,IAAKL,EAAMM,MACrEf,EAAAC,EAAAC,cAACQ,EAAA,OAAD,CAAQM,SAAU,CAAEH,IAAKJ,EAAMI,IAAKC,IAAKL,EAAMM,OAE9Cf,EAAAC,EAAAC,cAACQ,EAAA,OAAD,CACEO,OAAQ,CAAEJ,IAAKJ,EAAMS,MAAOJ,IAAKL,EAAMU,OACvCC,OAAQ,EACRC,QAAS,CACPC,UAAW,OACXC,YAAa,EACbC,cAAe,KAKnBxB,EAAAC,EAAAC,cAACQ,EAAA,OAAD,CACEO,OAAQ,CAAEJ,IAAKJ,EAAMS,MAAOJ,IAAKL,EAAMU,OACvCC,OAAQX,EAAMgB,SACdJ,QAAS,CACPC,UAAW,OACXC,YAAa,GACbC,cAAe,QAqDVE,cA7Cb,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMrB,IAANqB,MAQFC,eAAiB,WACf,OAAOC,UAAUC,YAAYC,mBAC3B,SAAAlB,GACEmB,QAAQC,IAAIpB,EAASqB,QACrBV,EAAKW,SAAS,CACZpB,MAAOF,EAASqB,OAAOE,SACvBpB,MAAOH,EAASqB,OAAOG,UACvBf,SAAUT,EAASqB,OAAOZ,YAG9B,SAAAgB,GAAG,OAAIN,QAAQC,IAAIK,IACnB,CAAEC,oBAAoB,KAlBxBf,EAAKgB,MAAQ,CACXzB,MAAOT,EAAMI,IACbM,MAAOV,EAAMM,IACbU,SAAU,GALKE,sCAwBnBiB,kBAAA,WAAoB,IAAAC,EAAAf,KAClBA,KAAKgB,QAAUC,YAAY,kBAAMF,EAAKd,kBAAkB,QAG1DiB,qBAAA,WACEC,cAAcnB,KAAKgB,YAGrBI,OAAA,WACE,OACElD,EAAAC,EAAAC,cAACP,EAAD,CACEkB,IAAKiB,KAAKrB,MAAMI,IAChBE,IAAKe,KAAKrB,MAAMM,IAChBG,MAAOY,KAAKa,MAAMzB,MAClBC,MAAOW,KAAKa,MAAMxB,MAClBM,SAAUK,KAAKa,MAAMlB,eAxCP0B,IAAMC,+CC3CbC,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACVC,EAAOD,EAAKE,QAAQD,KACpB3C,EAAM0C,EAAKE,QAAQ5C,IACnBE,EAAMwC,EAAKE,QAAQ1C,IAEzB,OACEf,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KACE1D,EAAAC,EAAAC,cAAA,UAAKsD,GACLxD,EAAAC,EAAAC,cAACyD,EAAD,CAAK9C,IAAKA,EAAKE,IAAKA,IACpBf,EAAAC,EAAAC,cAAA,mBATS,IAcF0D,EAAK,+CCnBlB,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAEeR,EAAA,WAAAC,GAAA,IAAGW,EAAHX,EAAGW,SAAH,OACbF,EAAA9D,EAAAC,cAAA,OAAKC,MAAO,CAAE+D,OAAM,YAAeC,SAAU,IAAKC,QAAO,WACtDH","file":"component---src-templates-toilet-js-0715cc0dbe07d7ea173d.js","sourcesContent":["import React from \"react\"\nimport { compose, withProps } from \"recompose\"\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  Circle,\n} from \"react-google-maps\"\n\nconst MapComponent = compose(\n  withProps({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=\n        ${process.env.GATSBY_API}&callback=initMap`,\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props => (\n  <GoogleMap defaultZoom={17} defaultCenter={{ lat: props.lat, lng: props.lon }}>\n    {<Marker position={{ lat: props.lat, lng: props.lon }} />}\n    {\n      <Circle\n        center={{ lat: props.myLat, lng: props.myLon }}\n        radius={7}\n        options={{\n          fillColor: \"#00f\",\n          fillOpacity: 1.0,\n          strokeOpacity: 0.0,\n        }}\n      />\n    }\n    {\n      <Circle\n        center={{ lat: props.myLat, lng: props.myLon }}\n        radius={props.accuracy}\n        options={{\n          fillColor: \"#00f\",\n          fillOpacity: 0.2,\n          strokeOpacity: 0.0,\n        }}\n      />\n    }\n  </GoogleMap>\n))\n\nclass MapView extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      myLat: props.lat,\n      myLon: props.lon,\n      accuracy: 0,\n    }\n  }\n\n  getGeoLocation = () => {\n    return navigator.geolocation.getCurrentPosition(\n      position => {\n        console.log(position.coords)\n        this.setState({\n          myLat: position.coords.latitude,\n          myLon: position.coords.longitude,\n          accuracy: position.coords.accuracy,\n        })\n      },\n      err => console.log(err),\n      { enableHighAccuracy: true }\n    )\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.getGeoLocation(), 1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID)\n  }\n\n  render() {\n    return (\n      <MapComponent\n        lat={this.props.lat}\n        lon={this.props.lon}\n        myLat={this.state.myLat}\n        myLon={this.state.myLon}\n        accuracy={this.state.accuracy}\n      />\n    )\n  }\n}\n\nexport default MapView\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Map from \"../components/map\"\n\nexport default ({ data }) => {\n  const name = data.toilets.name\n  const lat = data.toilets.lat\n  const lon = data.toilets.lon\n\n  return (\n    <Layout>\n      <h1>{name}</h1>\n      <Map lat={lat} lon={lon} />\n      <p>Todo</p>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    toilets(fields: { slug: { eq: $slug } }) {\n      name\n      lat\n      lon\n    }\n  }\n`\n","import React from \"react\"\n\nexport default ({ children }) => (\n  <div style={{ margin: `3rem auto`, maxWidth: 650, padding: `0 1rem` }}>\n    {children}\n  </div>\n)\n"],"sourceRoot":""}