{"version":3,"sources":["webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/function-bind/index.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/mux.js/lib/mp4/transmuxer.js","webpack:///./node_modules/mux.js/lib/aac/utils.js","webpack:///./node_modules/pannellum-react/es/pannellum/js/libpannellum.js","webpack:///./node_modules/pannellum-react/es/pannellum/js/pannellum.js","webpack:///./node_modules/pannellum-react/es/pannellum/js/RequestAnimationFrame.js","webpack:///./node_modules/define-properties/index.js","webpack:///./node_modules/object-keys/isArguments.js","webpack:///./node_modules/string.prototype.trim/implementation.js","webpack:///./node_modules/es-abstract/GetIntrinsic.js","webpack:///./node_modules/has/src/index.js","webpack:///./node_modules/string.prototype.trim/polyfill.js","webpack:///./node_modules/mux.js/lib/mp4/mp4-generator.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/keycode/index.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/string.prototype.trim/index.js","webpack:///./node_modules/function-bind/implementation.js","webpack:///./node_modules/object-keys/index.js","webpack:///./node_modules/object-keys/implementation.js","webpack:///./node_modules/es-abstract/es5.js","webpack:///./node_modules/es-abstract/helpers/assertRecord.js","webpack:///./node_modules/es-abstract/helpers/isNaN.js","webpack:///./node_modules/es-abstract/helpers/isFinite.js","webpack:///./node_modules/es-abstract/helpers/sign.js","webpack:///./node_modules/es-abstract/helpers/mod.js","webpack:///./node_modules/es-to-primitive/es5.js","webpack:///./node_modules/es-to-primitive/helpers/isPrimitive.js","webpack:///./node_modules/string.prototype.trim/shim.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/mux.js/lib/mp4/index.js","webpack:///./node_modules/mux.js/lib/mp4/frame-utils.js","webpack:///./node_modules/mux.js/lib/mp4/audio-frame-utils.js","webpack:///./node_modules/mux.js/lib/data/silence.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/mux.js/lib/mp4/track-decode-info.js","webpack:///./node_modules/mux.js/lib/m2ts/m2ts.js","webpack:///./node_modules/mux.js/lib/m2ts/metadata-stream.js","webpack:///./node_modules/mux.js/lib/codecs/adts.js","webpack:///./node_modules/mux.js/lib/codecs/h264.js","webpack:///./node_modules/mux.js/lib/utils/exp-golomb.js","webpack:///./node_modules/mux.js/lib/aac/index.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/pannellum-react/es/elements/Pannellum.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/pannellum-react/es/elements/PannellumVideo.js","webpack:///./node_modules/pannellum-react/es/pannellum/js/videojs-pannellum-plugin.js","webpack:///./node_modules/pannellum-react/es/index.js"],"names":["Stream","this","init","listeners","on","type","listener","concat","off","index","indexOf","slice","splice","trigger","callbacks","i","length","args","arguments","call","push","apply","dispose","prototype","pipe","destination","data","flushSource","flush","module","exports","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","global","win","window","self","findBox","parseType","timescale","startTime","getVideoTrackIds","toUnsigned","__webpack_require__","path","size","end","subresults","results","byteLength","subarray","buffer","result","String","fromCharCode","reduce","trak","tkhd","version","id","mdhd","fragment","trafs","baseTimes","map","traf","tfhd","scale","tfdt","Math","pow","Infinity","min","isFinite","traks","videoTrackIds","forEach","hdlrs","tkhds","hdlr","view","trackId","handlerType","DataView","byteOffset","getUint8","getUint32","dP","f","FProto","Function","nameRE","configurable","get","match","e","implementation","bind","fnToStr","toString","constructorRegex","isES6ClassFn","value","fnStr","test","toStr","Object","hasToStringTag","Symbol","toStringTag","tryFunctionObject","strClass","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","mp4","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","AdtsStream","H264Stream","AacStream","isLikelyAacData","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","a","b","generateVideoSegmentTimingInfo","baseMediaDecodeTime","startDts","startPts","endDts","endPts","prependedContentDuration","start","dts","pts","track","options","adtsFrames","sequenceNumber","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","collectDtsInfo","prop","setEarliestDts","earliestDts","timelineStartInfo","setVideoBaseMediaDecodeTime","setAudioAppendStart","timestamp","frames","moof","mdat","boxes","trimAdtsFramesByEarliestDts","calculateTrackBaseMediaDecodeTime","keepOriginalTimestamps","prefixWithSilence","samples","generateSampleTable","concatenateFrameData","Uint8Array","set","clearDtsInfo","config","pps","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","nalUnitType","sps","gopForFusion","gops","firstGop","lastGop","shift","resetStream_","groupNalsIntoFrames","groupFramesIntoGops","keyFrame","getGopForFusion_","duration","unshift","nalCount","extendFirstKeyFrame","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","pop","concatenateNalData","undefined","dtsDistance","nearestGopObj","currentGop","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","metadata","total","alignGopsWith","newGopsToAlignWith","metadataStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","text","audioTrack","caption","id3","initSegment","offset","event","captions","captionStreams","info","timelineStartPts","endTime","stream","cueTime","dispatchType","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","MetadataStream","aacStream","audioTimestampRolloverStream","TimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","frame","setTimestamp","timeStamp","audioSegmentStream","codec","setupTsPipeline","packetStream","TransportPacketStream","parseStream","TransportParseStream","elementaryStream","ElementaryStream","videoTimestampRolloverStream","h264Stream","captionStream","CaptionStream","tracks","videoSegmentStream","setBaseMediaDecodeTime","discontinuity","reset","isAac","resetCaptions","ADTS_SAMPLING_FREQUENCIES","parseSyncSafeInteger","charCodeAt","parseId3TagSize","header","byteIndex","returnSize","parseAdtsSize","lowThree","middle","parseSampleRate","packet","parseAacTimestamp","frameStart","frameSize","unescape","bytes","percentEncode","d","libpannellum","document","Renderer","container","program","gl","vs","fs","fallbackImgSize","world","vtmps","pose","image","imageType","dynamic","texCoordBuffer","cubeVertBuf","cubeVertTexCoordBuf","cubeVertIndBuf","globalParams","canvas","createElement","multiresNodeSort","level","multiresNodeRenderSort","diff","MultiresNode","vertices","side","x","y","replace","testMultiresNode","rotPersp","node","pitch","yaw","hfov","m","v","check1","checkInView","check2","check3","check4","testX","testY","checkSquareInView","z","r","sqrt","theta","asin","ydiff","atan2","PI","abs","acos","sin","cos","inCurrent","k","nodeCache","nodeCacheTimestamp","currentNodes","cubeSize","cubeResolution","maxLevel","numTiles","ceil","invTileResolution","doubleTileSize","tileResolution","lastTileSize","ntmp","children","f1","f2","f3","i1","i2","i3","fullpath","j","rotateMatrix","angle","axis","s","c","transposeMatrix4","style","width","height","appendChild","_image","_imageType","_dynamic","haov","vaov","voffset","callback","params","console","log","detachShader","deleteShader","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","texture","deleteTexture","deleteProgram","cubeImgWidth","faceMissing","fillMissingFaces","imgSize","nbytes","imageArray","Uint8ClampedArray","rgb","backgroundColor","backgroundSquare","ImageData","navigator","userAgent","toLowerCase","getContext","alpha","depth","getError","handleWebGLError1286","hasOwnProperty","documentElement","appVersion","removeChild","className","basePath","fallbackPath","sides","loaded","onLoad","faceCanvas","faceContext","drawImage","imgData","getImageData","putImageData","incLoaded","faceImg","Image","crossOrigin","onload","onerror","src","encodeURI","extension","maxWidth","max","getParameter","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","horizonPitch","horizonRoll","glBindType","TEXTURE_2D","viewport","drawingBufferWidth","drawingBufferHeight","createShader","VERTEX_SHADER","vertexSrc","vMulti","shaderSource","compileShader","FRAGMENT_SHADER","fragmentSrc","fragEquirectangular","TEXTURE_CUBE_MAP","fragCube","fragMulti","createProgram","attachShader","linkProgram","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","drawInProgress","color","clearColor","clear","COLOR_BUFFER_BIT","texCoordLocation","getAttribLocation","enableVertexAttribArray","createBuffer","bufferData","Float32Array","STATIC_DRAW","vertexAttribPointer","FLOAT","aspectRatio","getUniformLocation","uniform1f","psi","h","vo","rot","uniform4fv","createTexture","bindTexture","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGB","UNSIGNED_BYTE","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","vertPosLocation","Uint16Array","perspUniform","cubeUniform","err","destroy","contains","getExtension","loseContext","resize","pixelRatio","devicePixelRatio","clientWidth","clientHeight","setPose","render","focal","roll","orig_pitch","orig_yaw","w","roll_adj","vfov","atan","tan","drawArrays","TRIANGLES","perspMatrix","aspect","znear","zfar","fovy","makePersp","newLevel","checkZoom","matrix","uniformMatrix4fv","p","sort","removed","pendingTextureRequests","textureLoad","setTimeout","processNextTile","textureLoaded","drawElements","UNSIGNED_SHORT","multiresDraw","returnImage","toDataURL","transforms","u","l","zoom","transform","faces","keys","face","querySelector","webkitTransform","isLoading","getCanvas","loadTexture","cacheTop","textureImageCache","TextureImageLoader","loadFn","img","tex","til","req","releaseTextureImageLoader","addEventListener","PendingTextureRequest","_crossOrigin","vpp","applyRotPerspToVec","winX","winY","winZ","ret","round","join","fragEquiCubeBase","renderer","imagetype","pannellum","Viewer","initialConfig","preview","panoImage","prevTime","autoRotateStart","origHfov","origPitch","_this","isUserInteracting","latestInteraction","Date","now","onPointerDownPointerX","onPointerDownPointerY","onPointerDownPointerDist","onPointerDownYaw","onPointerDownPitch","keysDown","Array","fullscreenActive","error","listenersAdded","speed","animating","orientation","orientationYawOffset","autoRotateSpeed","animatedMove","externalEventListeners","specifiedPhotoSphereExcludes","update","hotspotsCreated","defaultConfig","minHfov","maxHfov","minPitch","maxPitch","minYaw","maxYaw","vOffset","autoRotate","autoRotateInactivityDelay","autoRotateStopDelay","northOffset","showFullscreenCtrl","doubleClickZoom","keyboardZoom","mouseZoom","showZoomCtrl","autoLoad","showControls","orientationOnByDefault","hotSpotDebug","avoidShowingBackground","animationTimingFunction","t","draggable","disableKeyboardCtrl","touchPanSpeedCoeffFactor","capturedKeyNumbers","strings","loadButtonLabel","loadingLabel","bylineLabel","noPanoramaError","fileAccessError","malformedURLError","iOS8WebGLError","genericWebGLError","textureSizeError","unknownError","getElementById","classList","add","tabIndex","uiContainer","renderContainer","dragFix","aboutMsg","innerHTML","aboutMessage","pos","mousePosition","left","top","clearTimeout","t1","t2","display","opacity","preventDefault","infoDisplay","hotSpotDebugIndicator","title","author","load","box","boxp","lbox","lbar","lbarFill","msg","errorMsg","controls","processOptions","zoomIn","setHfov","animateInit","zoomOut","fullscreen","toggleFullscreen","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","stopOrientation","startOrientation","stopPropagation","orientationSupport","startOrientationIfSupported","DeviceOrientationEvent","deviceOrientationTest","removeEventListener","beta","gamma","compass","div","getElementsByTagName","JSON","parse","stringify","multiRes","panorama","anError","itemsToLoad","onImageLoad","onError","href","target","textContent","outerHTML","cubeMap","absoluteURL","sanitizeURL","URL","revokeObjectURL","xhr","XMLHttpRequest","onloadend","status","reader","response","FileReader","flagIndex","ignoreGPanoXMP","xmpData","substring","getTag","tag","Number","xmp","fullWidth","croppedWidth","fullHeight","croppedHeight","topPixels","heading","createObjectURL","readAsBinaryString","readAsText","onprogress","lengthComputable","unit","numerator","denominator","percent","toFixed","open","responseType","setRequestHeader","withCredentials","send","remove","url","RegExp","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseWheel","onDocumentDoubleClick","onFullScreenChange","onDocumentResize","onDocumentKeyPress","onDocumentKeyUp","clearKeys","pointerAction","touchAction","onDocumentPointerDown","onDocumentPointerMove","onDocumentPointerUp","onDocumentTouchStart","onDocumentTouchMove","onDocumentTouchEnd","pointerEnabled","renderInitCallback","renderInit","fireEvent","bounds","getBoundingClientRect","clientX","clientY","focus","coords","mouseEventToCoords","stopAnimation","lookAt","canvasWidth","canvasHeight","root","pos0","targetTouches","pos1","clientDist","touchmovePanSpeedCoeff","firstScene","mergeConfig","default","pointerIDs","pointerCoordinates","pointerType","pointerId","defined","wheelDeltaY","wheelDelta","detail","keynumber","which","keycode","changeKey","keyChanged","performance","animateMove","normTime","startPosition","endPosition","callbackArgs","animate","tmpyaw","hoffcut","hfov2","vfov2","transposed","yawRange","pitchRange","isNaN","renderHotSpots","onRender","requestAnimationFrame","newTime","isKeyDown","prevPitch","prevYaw","prevZoom","timeDiff","yawDiff","maxSpeed","keyRepeat","autoRotateStartTime","Quaternion","computeQuaternion","quaternion","taitBryanToQuaternion","multiply","orientationListener","q","toEulerAngles","sceneFadeDuration","fadeImg","hotSpots","createHotSpot","createHotSpots","hs","cssClass","escapeHTML","span","video","paddingTop","sceneId","onclick","ontouchend","clicked","loadScene","targetPitch","targetYaw","targetHfov","createTooltipFunc","createTooltipArgs","scrollWidth","marginLeft","offsetWidth","marginTop","scrollHeight","clickHandlerFunc","clickHandlerArgs","renderHotSpot","hsPitchSin","hsPitchCos","configPitchSin","configPitchCos","yawCos","visibility","yawSin","hfovTan","coord","rollSin","rollCos","offsetHeight","MozTransform","photoSphereExcludes","scenes","scene","isPreview","backgroundImage","key","previewTitle","previewAuthor","link","message","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","isFullScreen","innerWidth","screen","innerHeight","mozFullScreen","webkitIsFullScreen","msFullscreenElement","constrainHfov","newHfov","fadeDone","workingPitch","workingYaw","workingHfov","transition","current","parentNode","destroyHotSpots","split","trim","isLoaded","Boolean","getPitch","setPitch","animated","getPitchBounds","setPitchBounds","getYaw","setYaw","getYawBounds","setYawBounds","getHfov","getHfovBounds","setHfovBounds","getNorthOffset","setNorthOffset","getHorizonRoll","setHorizonRoll","getHorizonPitch","setHorizonPitch","startAutoRotate","stopAutoRotate","getRenderer","setUpdate","bool","getScene","addScene","removeScene","getConfig","getContainer","addHotSpot","removeHotSpot","hotSpotId","isOrientationSupported","isOrientationActive","viewer","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","element","hasSymbols","origDefineProperty","defineProperty","supportsDescriptors","obj","_","enumerable","arePropertyDescriptorsSupported","object","name","predicate","fn","writable","defineProperties","predicates","props","getOwnPropertySymbols","str","isArgs","callee","ES","leftWhitespace","rightWhitespace","S","ToString","CheckObjectCoercible","ThrowTypeError","getOwnPropertyDescriptor","TypeError","iterator","getProto","getPrototypeOf","__proto__","asyncGenIterator","TypedArray","INTRINSICS","$ %Array%","$ %ArrayBuffer%","ArrayBuffer","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","entries","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","values","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","$ %BooleanPrototype%","$ %DataView%","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","decodeURI","$ %decodeURIComponent%","decodeURIComponent","$ %encodeURI%","$ %encodeURIComponent%","encodeURIComponent","$ %Error%","Error","$ %ErrorPrototype%","$ %eval%","eval","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","Int32Array","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","Map","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","parseFloat","$ %parseInt%","parseInt","$ %Promise%","Promise","$ %PromisePrototype%","$ %PromiseProto_then%","then","$ %Promise_all%","all","$ %Promise_reject%","reject","$ %Promise_resolve%","resolve","$ %Proxy%","Proxy","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","ReferenceError","$ %ReferenceErrorPrototype%","$ %Reflect%","Reflect","$ %RegExp%","$ %RegExpPrototype%","$ %Set%","Set","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","SyntaxError","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","$ %Uint16ArrayPrototype%","$ %Uint32Array%","Uint32Array","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","dinf","esds","ftyp","mfhd","minf","moov","mvex","mvhd","mdia","sdtp","stbl","stsd","trex","trun","types","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","audio","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","trackFragments","flags","dependsOn","isDependedOn","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","floor","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","fileType","movie","cea708Parser","captionPackets_","ccStreams_","Cea608Stream","cc","sei","userData","newCaptionPackets","parseSei","escapedRBSP","payloadType","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","latestDts_","ignoreNextEqualDts_","numSameDts_","parseCaptionPackets","elem","idx","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","ccData","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","code","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","name_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","content","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","char","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","payloadSize","count","discardEmulationPreventionBytes","newLength","newData","emulationPreventionBytesPositions","sourceIndex","handleRollover","reference","direction","lastDTS","referenceDTS","type_","doccy","topLevel","minDoc","clean","sa","reviver","json","keyCode","searchInput","hasKeyCode","charCode","names","foundNamedKey","search","codes","aliases","isEventKey","nameOrCode","backspace","tab","enter","ctrl","alt","pause/break","caps lock","esc","space","page up","page down","home","up","right","down","insert","delete","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","del","cmd","alias","isFunction","parseHeaders","xtend","initParams","uri","createXHR","_createXHR","called","body","getBody","responseText","responseXML","firefoxBugTakenEffect","nodeName","getXml","isJson","errorFunc","evt","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","useXDR","method","headers","rawRequest","getAllResponseHeaders","cors","XDomainRequest","sync","onreadystatechange","readyState","onabort","ontimeout","username","password","timeout","abort","isEmpty","beforeSend","array","forEachArray","toUpperCase","string","alert","confirm","prompt","arg","define","getPolyfill","shim","boundTrim","that","bound","boundLength","boundArgs","Empty","origKeys","keysShim","o","originalKeys","has","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","constructor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isObject","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","GetIntrinsic","$Object","$TypeError","$String","assertRecord","$isNaN","$isFinite","sign","mod","IsCallable","toPrimitive","ES5","ToPrimitive","ToBoolean","ToNumber","ToInteger","number","ToInt32","ToUint32","ToUint16","posInt","ToObject","optMessage","SameValue","Type","IsPropertyDescriptor","Desc","allowed","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","isData","IsAccessor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","ToPropertyDescriptor","Obj","desc","getter","setter","$SyntaxError","Property Descriptor","recordType","argumentName","modulo","remain","isPrimitive","isCallable","ES5internalSlots","O","actualHint","methods","input","polyfill","list","thisArg","receiver","len","charAt","forEachString","forEachObject","source","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","restore","_objCreate","create","F","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","cue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","substr","settings","region","vals","vals0","integer","vertical","line","lineAlign","snapToLines","position","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","n","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","tagName","rootDiv","tagStack","createTextNode","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","currentRange","determineBidi","cueDiv","nodeStack","childNodes","pushNodes","nextTextNode","innerText","StyleBox","CueStyleBox","styleOptions","styles","bottom","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","trackList","mode","computeLinePos","step","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","val","toMove","overlaps","b2","getSimpleBoxPosition","StringDecoder","decode","convertCueToDOMTree","cuetext","processCues","cues","overlay","firstChild","paddedOverlay","margin","hasBeenReset","displayState","shouldCompute","Parser","decoder","state","TextDecoder","reportOrThrowError","onparsingerror","collectNextLine","parseHeader","ontimestampmap","MPEGTS","LOCAL","parseTimestampMap","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","oncue","onflush","autoKeyword","directionSetting","","lr","rl","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","setting","findDirectionSetting","getCueAsHTML","scrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","exec","builtParts","query","baseURLPath","newPath","lastIndexOf","parts","__webpack_exports__","parseUTCTiming","global_window__WEBPACK_IMPORTED_MODULE_0__","global_window__WEBPACK_IMPORTED_MODULE_0___default","merge","_len","objects","_key","isArray","flatten","lists","from","mergeDiscontiguousPlaylists","playlists","acc","playlist","_acc$name$segments","attributes","segments","contentProtection","discontinuityStarts","formatAudioPlaylist","_ref","_attributes","NAME","BANDWIDTH","bandwidth","CODECS","codecs","endList","timeline","periodIndex","resolvedUri","targetDuration","mediaSequence","formatVideoPlaylist","_ref3","_attributes3","AUDIO","SUBTITLES","RESOLUTION","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","sourceDuration","_dashPlaylists$0$attr2","minimumUpdatePeriod","videoPlaylists","filter","_ref4","mimeType","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","master","allowCache","mediaGroups","VIDEO","role","language","label","autoselect","subs","_ref2","_attributes2","baseUrl","organizeVttPlaylists","urlToolkit","createCommonjsModule","resolveUrl","relativeUrl","location","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","range","ranges","startRange","endRange","byterange","getLiveRValue","time","NOW","clientOffset","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","media","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","repeat","segmentTime","nextS","segmentRange","static","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","toSegments","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","parseTemplateInfo","segment","Time","errors","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentTimeInfo","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","base","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","DEFAULT","parseAttributes","el","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","attrs","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","UTCTimingNode","parseUTCTimingScheme","generator","probe","CaptionParser","sampleForFrame","dataOffset","currentNal","currentFrame","baseDataOffset","nalsByteLength","numberOfNals","coneOfSilence","clock","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","audioTsToVideoTs","ONE_SECOND_IN_TS","videoTsToAudioTs","minSegmentDts","minSegmentPts","sum","sumFrameByteLengths","metaTable","highPrefix","lowPrefix","zeroFill","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","arr","part","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","seconds","sampleRate","maxSegmentDts","maxSegmentPts","StreamTypes","m2tsStreamTypes","bytesInBuffer","everything","startIndex","endIndex","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","timed-metadata","streamType","pid","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","forceFlush","packetFlushable","packetData","pes","ptsDtsFlags","packetLength","dataAlignmentIndicator","PAT_PID","MP2T_PACKET_LENGTH","parseUtf8","tagParsers","TXXX","description","WXXX","PRIV","owner","privateData","debug","descriptor","tagSize","bufferSize","chunk","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","ExpGolomb","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","readExpGolomb","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","readUnsignedByte","skipUnsignedExpGolomb","readUnsignedExpGolomb","skipBits","readBoolean","skipExpGolomb","readBits","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBytes","bits","valu","skipLeadingZeros","leadingZeroCount","clz","aacUtils","bytesLeft","tempLength","inspect","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","parseTfhd","parseTfdt","truns","avcStream","seiNal","lastMatchedSample","avcView","matchingSample","findSeiNals","defaultSampleDuration","defaultSampleSize","allSamples","parseTrun","parseSamples","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","inspectMp4","textifyMp4","parseMp4Date","parseSampleFlags","nalParse","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","maxBitrate","avgBitrate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","creationTime","modificationTime","streamDescriptor","rate","volume","nextTrackId","pdin","initialDelay","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","balance","chunkOffsets","entryCount","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleDescriptions","sampleSize","timeToSamples","sampleDelta","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","url ","graphicsmode","opcolor","ab","inspectedMp4","indent","prefix","byte","textify","parseHdlr","parseSidx","aac","parseAudioPes_","pesType","pusi","parsed","endLoop","parsePesType","table","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","firstKeyFrame","videoPacketContainsKeyFrame","inspectTs_","parsePsi_","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","_class","_temp","Pannellum_Pannellum","_PureComponent","Pannellum","instance","Constructor","_classCallCheck","_possibleConstructorReturn","renderImage","hotspots","hotspotArray","hotspot","random","tooltip","hotspotTooltip","tooltipArg","handleClick","handleClickHotspot","handleClickArg","jsonConfig","hotspotDebug","onScenechange","onScenechangefadedone","onErrorcleared","onMousedown","onMouseup","onTouchstart","onTouchend","componentDidMount","hotSpotDiv","setAttribute","hDiv","outDiv","inDiv","getViewer","forceRender","subClass","superClass","setPrototypeOf","_inherits","componentDidUpdate","prevProps","prevState","snapshot","_this2","_props","divStyle","react_default","ref","imageNode","react","defaultProps","propTypes","Hotspot","elements_Pannellum","_extends","assign","_inheritsLoose","_assertThisInitialized","_proto","LineStream","_Stream","nextNewline","attr","ParseStream","customParsers","tagMappers","mapper","mappedLine","newLine","tagType","playlistType","URI","BYTERANGE","_attributes$BYTERANGE","resolution","dateTimeString","dateTimeObject","IV","PRECISE","addParser","_this3","expression","customType","dataParser","addTagMapper","lineStream","currentMap","uris","currentUri","defaultMediaGroups","CLOSED-CAPTIONS","currentTimeline","manifest","entry","mediaGroup","rendition","allow-cache","endlist","inf","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","mediaGroupType","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","program-date-time","targetduration","totalduration","totalDuration","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","comment","custom","classCallCheck","createClass","protoProps","staticProps","possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","aes_decrypter_es_Stream","_length","_i","AsyncStream","jobs","delay","timeout_","inherits","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","done","STEP","asyncStream_","decryptChunk_","padded","video_es_version","video_es_inheritsLoose","_setPrototypeOf","_construct","Parent","Class","construct","sham","isNativeReflectConstruct","video_es_assertThisInitialized","_taggedTemplateLiteralLoose","raw","video_es_history","video_es_LogByTypeFactory","lvl","levels","lvlRegExp","window_default","video_es_log","createLogger","logByType","subname","warn","history","fname","historyItem","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","video_es_toString","each","video_es_assign","sources","isPlain","video_es_computedStyle","getComputedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","isReal","document_default","isEl","nodeType","isInFrame","parent","createQuerier","selector","context","ctx","createEl","properties","getOwnPropertyNames","propName","tsml_default","attrName","appendContent","prependTo","child","insertBefore","hasClass","classToCheck","addClass","classToAdd","removeClass","classToRemove","toggleClass","classToToggle","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","getAttribute","attribute","blockTextSelection","onselectstart","unblockTextSelection","rect","findPosition","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","getPointerPosition","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","getTime","getData","hasData","removeData","_cleanUpEvents","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","doc","_supportsPassive","passiveEvents","guid","hash","handlersCopy","passive","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","func","videojs","Events","_windowLoaded","video_es_autoSetup","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","EVENT_MAP","video_es_createStyleElement","setTextContent","styleSheet","cssText","uid","throttle","last","video_es_debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","oldTimeout","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","toTitleCase","mergeOptions","video_es_Component","Component","ready","play","player_","parentComponent_","options_","id_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","computedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","apiMap","specApi","prefixedAPI","video_es_i","dist_video_es_i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","textTrackConverter","tech","trackEls","trackObjs","trackEl","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","video_es_ModalDialog","_Component","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","aria-describedby","aria-hidden","aria-label","previouslyActiveEl_","keycode_default","close","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","video_es_event","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","addToBody","host","protocol","details","video_es_getAbsoluteURL","getFileExtension","video_es_isCrossOrigin","winLoc","urlInfo","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","parser","groupCollapsed","groupEnd","video_es_loadTrack","xhr_default","responseBody","loaded_","tech_","loadHandler","errorHandler","video_es_TextTrack","_Track","TextTrack","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mov","m4v","mkv","mp3","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleFocus","handleBlur","PosterImage","_ClickableComponent","poster","setSrc","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","video_es_Button","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","video_es_PlayToggle","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","gm","gh","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","video_es_Slider","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","calculateDistance","stepBack","stepForward","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","video_es_SeekBar","_Slider","SeekBar","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","distance","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","isFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","video_es_MuteToggle","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","video_es_Menu","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","item","video_es_MenuButton","MenuButton","buttonClass","menu","handleSubmenuKeyPress","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuKeys","video_es_MenuItem","MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","video_es_LiveTracker","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","trackingInterval_","handleTimeupdate","seekableEnds","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","video_es_getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","video_es_getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","video_es_Player","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundHandleKeyPress_","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","catch","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","toggleFullscreenClass_","fsApi","fullscreenElement","matches","inactivityTimeout","defaultPlaybackRate","set$1","reduceRight","video_es_get","_this8","PromiseClass","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","hotkeys","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this10","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","_this11","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","toJSON","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","style$1","video_es_head","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","super_","_inherits$1","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","video_es_resolveUrl","url_toolkit_default","resolveManifestRedirect","handleManifestRedirect","responseURL","video_es_classCallCheck","video_es_createClass","video_es_inherits","video_es_possibleConstructorReturn","slicedToArray","_arr","_n","_d","_e","_s","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","updateMaster","mergedPlaylist","updateSegments","baseUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","xhr$$1","startingState","customParser","media_","mediaUpdateTimeout","stopRequest","oldRequest","mediaChange","started","isFinalRendition","intervalDuration","endSequence","expired","backward","forward","backwardDuration","forwardDuration","video_es_duration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","Blob","blob","getBlob","TransmuxWorker","document$$1","_findBox","mp4Generator","toUnsigned$1","silence","ONE_SECOND_IN_TS$1","captionPacketParser","streamTypes","_MetadataStream","timestampRolloverStream","_TransportPacketStream","_TransportParseStream","_ElementaryStream","TimestampRolloverStream$1","stream$$1","_AdtsStream","m2ts_1","_H264Stream","_NalByteStream","expGolomb","_AacStream","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","_textifyMp","transmuxer","parseType$2","parse$$1","mp4Inspector","discardEmulationPreventionBytes$1","CaptionStream$1","captionStream$$1","MessageHandlers","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","wireTransmuxerEvents","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","presentation","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","isTypeSupported","supportsNativeMediaSources","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","playlistUpdate","group","_playlistUpdate","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","mediaRequest_","mpd_parser_es","masterXml_","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","updatedMaster","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","segmentXhrHeaders","byterangeEnd","Range","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","doneFn","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","decryptSegment","handleProgress","progressFn","progressEvent","stats","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","finishProcessingFn","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","probe_default","video_es_handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","finite","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","segmentIndex","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","startOfSegment","loadSegment_","appendedLastSegment","detectEndOfStream","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","ts_inspector_default","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groupPlaylists","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","video_es_updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","video_es_simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","setupQualityLevels_","qualityLevels_","addQualityLevel","get$1","HlsSourceHandler","supportedType","PannellumVideo_class","PannellumVideo_temp","video_es","vid","pnlmContainer","pnlmViewer","PannellumVideo_PannellumVideo","PannellumVideo","PannellumVideo_classCallCheck","PannellumVideo_possibleConstructorReturn","renderVideo","videoNode","cuurentHS","PannellumVideo_inherits","componentWillUnmount","data-vjs-player"],"mappings":"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","file":"6-68ecb5d3d1d75a87b996.js","sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar audioFrameUtils = require('./audio-frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData;\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\nvar arrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar generateVideoSegmentTimingInfo = function(\n  baseMediaDecodeTime,\n  startDts,\n  startPts,\n  endDts,\n  endPts,\n  prependedContentDuration\n) {\n  var\n    ptsOffsetFromDts = startPts - startDts,\n    decodeDuration = endDts - startDts,\n    presentationDuration = endPts - startPts;\n\n  // The PTS and DTS values are based on the actual stream times from the segment,\n  // however, the player time values will reflect a start from the baseMediaDecodeTime.\n  // In order to provide relevant values for the player times, base timing info on the\n  // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n  return {\n    start: {\n      dts: baseMediaDecodeTime,\n      pts: baseMediaDecodeTime + ptsOffsetFromDts\n    },\n    end: {\n      dts: baseMediaDecodeTime + decodeDuration,\n      pts: baseMediaDecodeTime + presentationDuration\n    },\n    prependedContentDuration: prependedContentDuration,\n    baseMediaDecodeTime: baseMediaDecodeTime\n  };\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(\n      adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    audioFrameUtils.prefixWithSilence(\n      track, frames, audioAppendStartTs, videoBaseMediaDecodeTime);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = audioFrameUtils.generateSampleTable(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes,\n      prependedContentDuration = 0,\n      firstGop,\n      lastGop;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        // in order to provide more accurate timing information about the segment, save\n        // the number of seconds prepended to the original segment due to GOP fusion\n        prependedContentDuration = gopForFusion.duration;\n\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    firstGop = gops[0];\n    lastGop = gops[gops.length - 1];\n\n    this.trigger(\n      'segmentTimingInfo',\n      generateVideoSegmentTimingInfo(\n        track.baseMediaDecodeTime,\n        firstGop.dts,\n        firstGop.pts,\n        lastGop.dts + lastGop.duration,\n        lastGop.pts + lastGop.duration,\n        prependedContentDuration));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n\n    caption.startTime = caption.startPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n    caption.startTime /= 90e3;\n\n    caption.endTime = caption.endPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n    caption.endTime /= 90e3;\n\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n\n    id3.cueTime = id3.pts;\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n    id3.cueTime /= 90e3;\n\n    event.metadata.push(id3);\n  }\n\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('segmentTimingInfo',\n            self.trigger.bind(self, 'videoSegmentTimingInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n  // exported for testing\n  generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n","/*\n * libpannellum - A WebGL and CSS 3D transform based Panorama Renderer\n * Copyright (c) 2012-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.libpannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama renderer.\n * @constructor\n * @param {HTMLElement} container - The container element for the renderer.\n */\n  function Renderer(container) {\n    var canvas = document.createElement('canvas');\n    canvas.style.width = canvas.style.height = '100%';\n    container.appendChild(canvas);\n\n    var program, gl, vs, fs;\n    var fallbackImgSize;\n    var world;\n    var vtmps;\n    var pose;\n    var image, imageType, dynamic;\n    var texCoordBuffer, cubeVertBuf, cubeVertTexCoordBuf, cubeVertIndBuf;\n    var globalParams;\n\n    /**\n     * Initialize renderer.\n     * @memberof Renderer\n     * @instance\n     * @param {Image|Array|Object} image - Input image; format varies based on\n     *      `imageType`. For `equirectangular`, this is an image; for\n     *      `cubemap`, this is an array of images for the cube faces in the\n     *      order [+z, +x, -z, -x, +y, -y]; for `multires`, this is a\n     *      configuration object.\n     * @param {string} imageType - The type of the image: `equirectangular`,\n     *      `cubemap`, or `multires`.\n     * @param {boolean} dynamic - Whether or not the image is dynamic (e.g. video).\n     * @param {number} haov - Initial horizontal angle of view.\n     * @param {number} vaov - Initial vertical angle of view.\n     * @param {number} voffset - Initial vertical offset angle.\n     * @param {function} callback - Load callback function.\n     * @param {Object} [params] - Other configuration parameters (`horizonPitch`, `horizonRoll`, `backgroundColor`).\n     */\n    this.init = function(_image, _imageType, _dynamic, haov, vaov, voffset, callback, params) {\n      // Default argument for image type\n      if (_imageType === undefined)\n      {_imageType = 'equirectangular';}\n\n      if (_imageType != 'equirectangular' && _imageType != 'cubemap' &&\n            _imageType != 'multires') {\n        console.log('Error: invalid image type specified!');\n        throw { type: 'config error' };\n      }\n\n      imageType = _imageType;\n      image = _image;\n      dynamic = _dynamic;\n      globalParams = params || {};\n\n      // Clear old data\n      if (program) {\n        if (vs) {\n          gl.detachShader(program, vs);\n          gl.deleteShader(vs);\n        }\n        if (fs) {\n          gl.detachShader(program, fs);\n          gl.deleteShader(fs);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        if (program.texture)\n        {gl.deleteTexture(program.texture);}\n        if (program.nodeCache)\n        {for (var i = 0; i < program.nodeCache.length; i++)\n          {gl.deleteTexture(program.nodeCache[i].texture);}}\n        gl.deleteProgram(program);\n        program = undefined;\n      }\n      pose = undefined;\n\n      var s;\n      var faceMissing = false;\n      var cubeImgWidth;\n      if (imageType == 'cubemap') {\n        for (s = 0; s < 6; s++) {\n          if (image[s].width > 0) {\n            if (cubeImgWidth === undefined)\n            {cubeImgWidth = image[s].width;}\n            if (cubeImgWidth != image[s].width)\n            {console.log('Cube faces have inconsistent widths: ' + cubeImgWidth + ' vs. ' + image[s].width);}\n          } else\n          {faceMissing = true;}\n        }\n      }\n      function fillMissingFaces(imgSize) {\n        if (faceMissing) { // Fill any missing fallback/cubemap faces with background\n          var nbytes = imgSize * imgSize * 4; // RGB, plus non-functional alpha\n          var imageArray = new Uint8ClampedArray(nbytes);\n          var rgb = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n          rgb[0] *= 255;\n          rgb[1] *= 255;\n          rgb[2] *= 255;\n          // Maybe filling could be done faster, see e.g. https://stackoverflow.com/questions/1295584/most-efficient-way-to-create-a-zero-filled-javascript-array\n          for (var i = 0; i < nbytes; i++) {\n            imageArray[i++] = rgb[0];\n            imageArray[i++] = rgb[1];\n            imageArray[i++] = rgb[2];\n          }\n          var backgroundSquare = new ImageData(imageArray, imgSize, imgSize);\n          for (s = 0; s < 6; s++) {\n            if (image[s].width == 0)\n            {image[s] = backgroundSquare;}\n          }\n        }\n      }\n        \n      // This awful browser specific test exists because iOS 8/9 and IE 11\n      // don't display non-power-of-two cubemap textures but also don't\n      // throw an error (tested on an iPhone 5c / iOS 8.1.3 / iOS 9.2 /\n      // iOS 10.3.1).\n      // Therefore, the WebGL context is never created for these browsers for\n      // NPOT cubemaps, and the CSS 3D transform fallback renderer is used\n      // instead.\n      if (!(imageType == 'cubemap' &&\n            (cubeImgWidth & (cubeImgWidth - 1)) !== 0 &&\n            (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 9_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 10_/) ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./)))) {\n        // Enable WebGL on canvas\n        if (!gl)\n        {gl = canvas.getContext('experimental-webgl', { alpha: false, depth: false });}\n        if (gl && gl.getError() == 1286)\n        {handleWebGLError1286();}\n      }\n        \n      // If there is no WebGL, fall back to CSS 3D transform renderer.\n      // This will discard the image loaded so far and load the fallback image.\n      // While browser specific tests are usually frowned upon, the\n      // fallback viewer only really works with WebKit/Blink and IE 10/11\n      // (it doesn't work properly in Firefox).\n      if (!gl && ((imageType == 'multires' && image.hasOwnProperty('fallbackPath')) ||\n            imageType == 'cubemap') &&\n            ('WebkitAppearance' in document.documentElement.style ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./) ||\n            navigator.appVersion.indexOf('MSIE 10') !== -1)) {\n        // Remove old world if it exists\n        if (world) {\n          container.removeChild(world);\n        }\n            \n        // Initialize renderer\n        world = document.createElement('div');\n        world.className = 'pnlm-world';\n            \n        // Add images\n        var path;\n        if (image.basePath) {\n          path = image.basePath + image.fallbackPath;\n        } else {\n          path = image.fallbackPath;\n        }\n        var sides = ['f', 'r', 'b', 'l', 'u', 'd'];\n        var loaded = 0;\n        var onLoad = function() {\n          // Draw image on canvas\n          var faceCanvas = document.createElement('canvas');\n          faceCanvas.className = 'pnlm-face pnlm-' + sides[this.side] + 'face';\n          world.appendChild(faceCanvas);\n          var faceContext = faceCanvas.getContext('2d');\n          faceCanvas.style.width = this.width + 4 + 'px';\n          faceCanvas.style.height = this.height + 4 + 'px';\n          faceCanvas.width = this.width + 4;\n          faceCanvas.height = this.height + 4;\n          faceContext.drawImage(this, 2, 2);\n          var imgData = faceContext.getImageData(0, 0, faceCanvas.width, faceCanvas.height);\n          var data = imgData.data;\n                \n          // Duplicate edge pixels\n          var i;\n          var j;\n          for (i = 2; i < faceCanvas.width - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i + faceCanvas.width) * 4 + j] = data[(i + faceCanvas.width * 2) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 3)) * 4 + j];\n            }\n          }\n          for (i = 2; i < faceCanvas.height - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width + 1) * 4 + j] = data[(i * faceCanvas.width + 2) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 2) * 4 + j] = data[((i + 1) * faceCanvas.width - 3) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[(faceCanvas.width + 1) * 4 + j] = data[(faceCanvas.width * 2 + 2) * 4 + j];\n            data[(faceCanvas.width * 2 - 2) * 4 + j] = data[(faceCanvas.width * 3 - 3) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 3) + 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) - 3) * 4 + j];\n          }\n          for (i = 1; i < faceCanvas.width - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[i * 4 + j] = data[(i + faceCanvas.width) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j];\n            }\n          }\n          for (i = 1; i < faceCanvas.height - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width) * 4 + j] = data[(i * faceCanvas.width + 1) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 1) * 4 + j] = data[((i + 1) * faceCanvas.width - 2) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[j] = data[(faceCanvas.width + 1) * 4 + j];\n            data[(faceCanvas.width - 1) * 4 + j] = data[(faceCanvas.width * 2 - 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j];\n            data[(faceCanvas.width * faceCanvas.height - 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j];\n          }\n                \n          // Draw image width duplicated edge pixels on canvas\n          faceContext.putImageData(imgData, 0, 0);\n                \n          incLoaded.call(this);\n        };\n        var incLoaded = function() {\n          if (this.width > 0) {\n            if (fallbackImgSize === undefined)\n            {fallbackImgSize = this.width;}\n            if (fallbackImgSize != this.width)\n            {console.log('Fallback faces have inconsistent widths: ' + fallbackImgSize + ' vs. ' + this.width);}\n          } else\n          {faceMissing = true;}\n          loaded++;\n          if (loaded == 6) {\n            fallbackImgSize = this.width;\n            container.appendChild(world);\n            callback();\n          }\n        };\n        faceMissing = false;\n        for (s = 0; s < 6; s++) {\n          var faceImg = new Image();\n          faceImg.crossOrigin = globalParams.crossOrigin ? globalParams.crossOrigin : 'anonymous';\n          faceImg.side = s;\n          faceImg.onload = onLoad;\n          faceImg.onerror = incLoaded; // ignore missing face to support partial fallback image\n          if (imageType == 'multires') {\n            faceImg.src = encodeURI(path.replace('%s', sides[s]) + '.' + image.extension);\n          } else {\n            faceImg.src = encodeURI(image[s].src);\n          }\n        }\n        fillMissingFaces(fallbackImgSize);\n        return;\n      } else if (!gl) {\n        console.log('Error: no WebGL support detected!');\n        throw { type: 'no webgl' };\n      }\n      if (imageType == 'cubemap')\n      {fillMissingFaces(cubeImgWidth);}\n      if (image.basePath) {\n        image.fullpath = image.basePath + image.path;\n      } else {\n        image.fullpath = image.path;\n      }\n      image.invTileResolution = 1 / image.tileResolution;\n        \n      var vertices = createCube();\n      vtmps = [];\n      for (s = 0; s < 6; s++) {\n        vtmps[s] = vertices.slice(s * 12, s * 12 + 12);\n        vertices = createCube();\n      }\n        \n      // Make sure image isn't too big\n      var width = 0, maxWidth = 0;\n      if (imageType == 'equirectangular') {\n        width = Math.max(image.width, image.height);\n        maxWidth = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      } else if (imageType == 'cubemap') {\n        width = cubeImgWidth;\n        maxWidth = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n      }\n      if (width > maxWidth) {\n        console.log('Error: The image is too big; it\\'s ' + width + 'px wide, '+\n                        'but this device\\'s maximum supported size is ' + maxWidth + 'px.');\n        throw { type: 'webgl size error', width: width, maxWidth: maxWidth };\n      }\n\n      // Store horizon pitch and roll if applicable\n      if (params !== undefined && (params.horizonPitch !== undefined || params.horizonRoll !== undefined))\n      {pose = [params.horizonPitch == undefined ? 0 : params.horizonPitch,\n        params.horizonRoll == undefined ? 0 : params.horizonRoll];}\n\n      // Set 2d texture binding\n      var glBindType = gl.TEXTURE_2D;\n\n      // Create viewport for entire canvas\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n      // Create vertex shader\n      vs = gl.createShader(gl.VERTEX_SHADER);\n      var vertexSrc = v;\n      if (imageType == 'multires') {\n        vertexSrc = vMulti;\n      }\n      gl.shaderSource(vs, vertexSrc);\n      gl.compileShader(vs);\n\n      // Create fragment shader\n      fs = gl.createShader(gl.FRAGMENT_SHADER);\n      var fragmentSrc = fragEquirectangular;\n      if (imageType == 'cubemap') {\n        glBindType = gl.TEXTURE_CUBE_MAP;\n        fragmentSrc = fragCube;\n      } else if (imageType == 'multires') {\n        fragmentSrc = fragMulti;\n      }\n      gl.shaderSource(fs, fragmentSrc);\n      gl.compileShader(fs);\n\n      // Link WebGL program\n      program = gl.createProgram();\n      gl.attachShader(program, vs);\n      gl.attachShader(program, fs);\n      gl.linkProgram(program);\n\n      // Log errors\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(vs));}\n      if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(fs));}\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n      {console.log(gl.getProgramInfoLog(program));}\n\n      // Use WebGL program\n      gl.useProgram(program);\n\n      program.drawInProgress = false;\n\n      // Set background clear color (does not apply to cubemap/fallback image)\n      var color = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n      gl.clearColor(color[0], color[1], color[2], 1.0);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      // Look up texture coordinates location\n      program.texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n      gl.enableVertexAttribArray(program.texCoordLocation);\n\n      if (imageType != 'multires') {\n        // Provide texture coordinates for rectangle\n        if (!texCoordBuffer)\n        {texCoordBuffer = gl.createBuffer();}\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1,1,1,1,1,-1,-1,1,1,-1,-1,-1]), gl.STATIC_DRAW);\n        gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n        // Pass aspect ratio\n        program.aspectRatio = gl.getUniformLocation(program, 'u_aspectRatio');\n        gl.uniform1f(program.aspectRatio, gl.drawingBufferWidth / gl.drawingBufferHeight);\n\n        // Locate psi, theta, focal length, horizontal extent, vertical extent, and vertical offset\n        program.psi = gl.getUniformLocation(program, 'u_psi');\n        program.theta = gl.getUniformLocation(program, 'u_theta');\n        program.f = gl.getUniformLocation(program, 'u_f');\n        program.h = gl.getUniformLocation(program, 'u_h');\n        program.v = gl.getUniformLocation(program, 'u_v');\n        program.vo = gl.getUniformLocation(program, 'u_vo');\n        program.rot = gl.getUniformLocation(program, 'u_rot');\n\n        // Pass horizontal extent, vertical extent, and vertical offset\n        gl.uniform1f(program.h, haov / (Math.PI * 2.0));\n        gl.uniform1f(program.v, vaov / Math.PI);\n        gl.uniform1f(program.vo, voffset / Math.PI * 2);\n\n        // Set background color\n        if (imageType == 'equirectangular') {\n          program.backgroundColor = gl.getUniformLocation(program, 'u_backgroundColor');\n          gl.uniform4fv(program.backgroundColor, color.concat([1]));\n        }\n\n        // Create texture\n        program.texture = gl.createTexture();\n        gl.bindTexture(glBindType, program.texture);\n\n        // Upload images to texture depending on type\n        if (imageType == 'cubemap') {\n          // Load all six sides of the cube map\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[1]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[3]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[4]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[5]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[0]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[2]);\n        } else {\n          // Upload image to the texture\n          gl.texImage2D(glBindType, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n        }\n\n        // Set parameters for rendering any size\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(glBindType, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n      } else {\n        // Look up vertex coordinates location\n        program.vertPosLocation = gl.getAttribLocation(program, 'a_vertCoord');\n        gl.enableVertexAttribArray(program.vertPosLocation);\n\n        // Create buffers\n        if (!cubeVertBuf)\n        {cubeVertBuf = gl.createBuffer();}\n        if (!cubeVertTexCoordBuf)\n        {cubeVertTexCoordBuf = gl.createBuffer();}\n        if (!cubeVertIndBuf)\n        {cubeVertIndBuf = gl.createBuffer();}\n\n        // Bind texture coordinate buffer and pass coordinates to WebGL\n        gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0,0,1,0,1,1,0,1]), gl.STATIC_DRAW);\n\n        // Bind square index buffer and pass indicies to WebGL\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cubeVertIndBuf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0,1,2,0,2,3]), gl.STATIC_DRAW);\n\n        // Find uniforms\n        program.perspUniform = gl.getUniformLocation(program, 'u_perspMatrix');\n        program.cubeUniform = gl.getUniformLocation(program, 'u_cubeMatrix');\n        //program.colorUniform = gl.getUniformLocation(program, 'u_color');\n\n        program.level = -1;\n\n        program.currentNodes = [];\n        program.nodeCache = [];\n        program.nodeCacheTimestamp = 0;\n      }\n\n      // Check if there was an error\n      var err = gl.getError();\n      if (err !== 0) {\n        console.log('Error: Something went wrong with WebGL!', err);\n        throw { type: 'webgl error' };\n      }\n\n      callback();\n    };\n\n    /**\n     * Destroy renderer.\n     * @memberof Renderer\n     * @instance\n     */\n    this.destroy = function() {\n      if (container !== undefined) {\n        if (canvas !== undefined && container.contains(canvas)) {\n          container.removeChild(canvas);\n        }\n        if (world !== undefined && container.contains(world)) {\n          container.removeChild(world);\n        }\n      }\n      if (gl) {\n        // The spec says this is only supposed to simulate losing the WebGL\n        // context, but in practice it tends to actually free the memory.\n        var extension = gl.getExtension('WEBGL_lose_context');\n        if (extension)\n        {extension.loseContext();}\n      }\n    };\n\n    /**\n     * Resize renderer (call after resizing container).\n     * @memberof Renderer\n     * @instance\n     */\n    this.resize = function() {\n      var pixelRatio = window.devicePixelRatio || 1;\n      canvas.width = canvas.clientWidth * pixelRatio;\n      canvas.height = canvas.clientHeight * pixelRatio;\n      if (gl) {\n        if (gl.getError() == 1286)\n        {handleWebGLError1286();}\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        if (imageType != 'multires') {\n          gl.uniform1f(program.aspectRatio, canvas.clientWidth / canvas.clientHeight);\n        }\n      }\n    };\n    // Initialize canvas size\n    this.resize();\n\n    /**\n     * Set renderer horizon pitch and roll.\n     * @memberof Renderer\n     * @instance\n     */\n    this.setPose = function(horizonPitch, horizonRoll) {\n      pose = [horizonPitch, horizonRoll];\n    };\n\n    /**\n     * Render new view of panorama.\n     * @memberof Renderer\n     * @instance\n     * @param {number} pitch - Pitch to render at (in radians).\n     * @param {number} yaw - Yaw to render at (in radians).\n     * @param {number} hfov - Horizontal field of view to render with (in radians).\n     * @param {Object} [params] - Extra configuration parameters. \n     * @param {number} [params.roll] - Camera roll (in radians).\n     * @param {boolean} [params.returnImage] - Return rendered image?\n     */\n    this.render = function(pitch, yaw, hfov, params) {\n      var focal, i, s, roll = 0;\n      if (params === undefined)\n      {params = {};}\n      if (params.roll)\n      {roll = params.roll;}\n\n      // Apply pitch and roll transformation if applicable\n      if (pose !== undefined) {\n        var horizonPitch = pose[0],\n          horizonRoll = pose[1];\n\n        // Calculate new pitch and yaw\n        var orig_pitch = pitch,\n          orig_yaw = yaw,\n          x = Math.cos(horizonRoll) * Math.sin(pitch) * Math.sin(horizonPitch) +\n                    Math.cos(pitch) * (Math.cos(horizonPitch) * Math.cos(yaw) +\n                    Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.sin(yaw)),\n          y = -Math.sin(pitch) * Math.sin(horizonRoll) +\n                    Math.cos(pitch) * Math.cos(horizonRoll) * Math.sin(yaw),\n          z = Math.cos(horizonRoll) * Math.cos(horizonPitch) * Math.sin(pitch) +\n                    Math.cos(pitch) * (-Math.cos(yaw) * Math.sin(horizonPitch) +\n                    Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.sin(yaw));\n        pitch = Math.asin(Math.max(Math.min(z, 1), -1));\n        yaw = Math.atan2(y, x);\n\n        // Calculate roll\n        var v = [Math.cos(orig_pitch) * (Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.cos(orig_yaw) -\n                    Math.cos(horizonPitch) * Math.sin(orig_yaw)),\n          Math.cos(orig_pitch) * Math.cos(horizonRoll) * Math.cos(orig_yaw),\n          Math.cos(orig_pitch) * (Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.cos(orig_yaw) +\n                    Math.sin(orig_yaw) * Math.sin(horizonPitch))],\n          w = [-Math.cos(pitch) * Math.sin(yaw), Math.cos(pitch) * Math.cos(yaw)];\n        var roll_adj = Math.acos(Math.max(Math.min((v[0]*w[0] + v[1]*w[1]) /\n                (Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]) *\n                Math.sqrt(w[0]*w[0]+w[1]*w[1])), 1), -1));\n        if (v[2] < 0)\n        {roll_adj = 2 * Math.PI - roll_adj;}\n        roll += roll_adj;\n      }\n\n      // If no WebGL\n      if (!gl && (imageType == 'multires' || imageType == 'cubemap')) {\n        // Determine face transforms\n        s = fallbackImgSize / 2;\n            \n        var transforms = {\n          f: 'translate3d(-' + (s + 2) + 'px, -' + (s + 2) + 'px, -' + s + 'px)',\n          b: 'translate3d(' + (s + 2) + 'px, -' + (s + 2) + 'px, ' + s + 'px) rotateX(180deg) rotateZ(180deg)',\n          u: 'translate3d(-' + (s + 2) + 'px, -' + s + 'px, ' + (s + 2) + 'px) rotateX(270deg)',\n          d: 'translate3d(-' + (s + 2) + 'px, ' + s + 'px, -' + (s + 2) + 'px) rotateX(90deg)',\n          l: 'translate3d(-' + s + 'px, -' + (s + 2) + 'px, ' + (s + 2) + 'px) rotateX(180deg) rotateY(90deg) rotateZ(180deg)',\n          r: 'translate3d(' + s + 'px, -' + (s + 2) + 'px, -' + (s + 2) + 'px) rotateY(270deg)'\n        };\n        focal = 1 / Math.tan(hfov / 2);\n        var zoom = focal * canvas.clientWidth / 2 + 'px';\n        var transform = 'perspective(' + zoom + ') translateZ(' + zoom + ') rotateX(' + pitch + 'rad) rotateY(' + yaw + 'rad) ';\n            \n        // Apply face transforms\n        var faces = Object.keys(transforms);\n        for (i = 0; i < 6; i++) {\n          var face = world.querySelector('.pnlm-' + faces[i] + 'face');\n          if (!face)\n          {continue;} // ignore missing face to support partial cubemap/fallback image\n          face.style.webkitTransform = transform + transforms[faces[i]];\n          face.style.transform = transform + transforms[faces[i]];\n        }\n        return;\n      }\n        \n      if (imageType != 'multires') {\n        // Calculate focal length from vertical field of view\n        var vfov = 2 * Math.atan(Math.tan(hfov * 0.5) / (gl.drawingBufferWidth / gl.drawingBufferHeight));\n        focal = 1 / Math.tan(vfov * 0.5);\n\n        // Pass psi, theta, roll, and focal length\n        gl.uniform1f(program.psi, yaw);\n        gl.uniform1f(program.theta, pitch);\n        gl.uniform1f(program.rot, roll);\n        gl.uniform1f(program.f, focal);\n            \n        if (dynamic === true) {\n          // Update texture if dynamic\n          if (imageType == 'equirectangular') {\n            gl.bindTexture(gl.TEXTURE_2D, program.texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n          }\n        }\n            \n        // Draw using current buffer\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        \n      } else {\n        // Create perspective matrix\n        var perspMatrix = makePersp(hfov, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 100.0);\n            \n        // Find correct zoom level\n        checkZoom(hfov);\n            \n        // Create rotation matrix\n        var matrix = identityMatrix3();\n        matrix = rotateMatrix(matrix, -roll, 'z');\n        matrix = rotateMatrix(matrix, -pitch, 'x');\n        matrix = rotateMatrix(matrix, yaw, 'y');\n        matrix = makeMatrix4(matrix);\n            \n        // Set matrix uniforms\n        gl.uniformMatrix4fv(program.perspUniform, false, new Float32Array(transposeMatrix4(perspMatrix)));\n        gl.uniformMatrix4fv(program.cubeUniform, false, new Float32Array(transposeMatrix4(matrix)));\n            \n        // Find current nodes\n        var rotPersp = rotatePersp(perspMatrix, matrix);\n        program.nodeCache.sort(multiresNodeSort);\n        if (program.nodeCache.length > 200 &&\n                program.nodeCache.length > program.currentNodes.length + 50) {\n          // Remove older nodes from cache\n          var removed = program.nodeCache.splice(200, program.nodeCache.length - 200);\n          for (var i = 0; i < removed.length; i++) {\n            // Explicitly delete textures\n            gl.deleteTexture(removed[i].texture);\n          }\n        }\n        program.currentNodes = [];\n            \n        var sides = ['f', 'b', 'u', 'd', 'l', 'r'];\n        for (s = 0; s < 6; s++) {\n          var ntmp = new MultiresNode(vtmps[s], sides[s], 1, 0, 0, image.fullpath);\n          testMultiresNode(rotPersp, ntmp, pitch, yaw, hfov);\n        }\n            \n        program.currentNodes.sort(multiresNodeRenderSort);\n            \n        // Unqueue any pending requests for nodes that are no longer visible\n        for (i = pendingTextureRequests.length - 1; i >= 0; i--) {\n          if (program.currentNodes.indexOf(pendingTextureRequests[i].node) === -1) {\n            pendingTextureRequests[i].node.textureLoad = false;\n            pendingTextureRequests.splice(i, 1);\n          }\n        }\n            \n        // Allow one request to be pending, so that we can create a texture buffer for that in advance of loading actually beginning\n        if (pendingTextureRequests.length === 0) {\n          for (i = 0; i < program.currentNodes.length; i++) {\n            var node = program.currentNodes[i];\n            if (!node.texture && !node.textureLoad) {\n              node.textureLoad = true;\n            \n              setTimeout(processNextTile, 0, node);\n                        \n              // Only process one tile per frame to improve responsiveness\n              break;\n            }\n          }\n        }\n            \n        // Draw tiles\n        multiresDraw();\n      }\n        \n      if (params.returnImage !== undefined) {\n        return canvas.toDataURL('image/png');\n      }\n    };\n    \n    /**\n     * Check if images are loading.\n     * @memberof Renderer\n     * @instance\n     * @returns {boolean} Whether or not images are loading.\n     */\n    this.isLoading = function() {\n      if (gl && imageType == 'multires') {\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (!program.currentNodes[i].textureLoaded) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    \n    /**\n     * Retrieve renderer's canvas.\n     * @memberof Renderer\n     * @instance\n     * @returns {HTMLElement} Renderer's canvas.\n     */\n    this.getCanvas = function() {\n      return canvas;\n    };\n    \n    /**\n     * Sorting method for multires nodes.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Base tiles first, then higher timestamp first.\n     */\n    function multiresNodeSort(a, b) {\n      // Base tiles are always first\n      if (a.level == 1 && b.level != 1) {\n        return -1;\n      }\n      if (b.level == 1 && a.level != 1) {\n        return 1;\n      }\n        \n      // Higher timestamp first\n      return b.timestamp - a.timestamp;\n    }\n    \n    /**\n     * Sorting method for multires node rendering.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Lower zoom levels first, then closest to center first.\n     */\n    function multiresNodeRenderSort(a, b) {\n      // Lower zoom levels first\n      if (a.level != b.level) {\n        return a.level - b.level;\n      }\n        \n      // Lower distance from center first\n      return a.diff - b.diff;\n    }\n    \n    /**\n     * Draws multires nodes.\n     * @private\n     */\n    function multiresDraw() {\n      if (!program.drawInProgress) {\n        program.drawInProgress = true;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (program.currentNodes[i].textureLoaded > 1) {\n            //var color = program.currentNodes[i].color;\n            //gl.uniform4f(program.colorUniform, color[0], color[1], color[2], 1.0);\n                    \n            // Bind vertex buffer and pass vertices to WebGL\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertBuf);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(program.currentNodes[i].vertices), gl.STATIC_DRAW);\n            gl.vertexAttribPointer(program.vertPosLocation, 3, gl.FLOAT, false, 0, 0);\n                    \n            // Prep for texture\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n            gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n                    \n            // Bind texture and draw tile\n            gl.bindTexture(gl.TEXTURE_2D, program.currentNodes[i].texture); // Bind program.currentNodes[i].texture to TEXTURE0\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n        program.drawInProgress = false;\n      }\n    }\n\n    /**\n     * Creates new multires node.\n     * @constructor\n     * @private\n     * @param {number[]} vertices - Node's verticies.\n     * @param {string} side - Node's cube face.\n     * @param {number} level - Node's zoom level.\n     * @param {number} x - Node's x position.\n     * @param {number} y - Node's y position.\n     * @param {string} path - Node's path.\n     */\n    function MultiresNode(vertices, side, level, x, y, path) {\n      this.vertices = vertices;\n      this.side = side;\n      this.level = level;\n      this.x = x;\n      this.y = y;\n      this.path = path.replace('%s',side).replace('%l',level).replace('%x',x).replace('%y',y);\n    }\n\n    /**\n     * Test if multires node is visible. If it is, add it to current nodes,\n     * load its texture, and load appropriate child nodes.\n     * @private\n     * @param {number[]} rotPersp - Rotated perspective matrix.\n     * @param {MultiresNode} node - Multires node to check.\n     * @param {number} pitch - Pitch to check at.\n     * @param {number} yaw - Yaw to check at.\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function testMultiresNode(rotPersp, node, pitch, yaw, hfov) {\n      if (checkSquareInView(rotPersp, node.vertices)) {\n        // Calculate central angle between center of view and center of tile\n        var v = node.vertices;\n        var x = v[0] + v[3] + v[6] + v[ 9];\n        var y = v[1] + v[4] + v[7] + v[10];\n        var z = v[2] + v[5] + v[8] + v[11];\n        var r = Math.sqrt(x*x + y*y + z*z);\n        var theta = Math.asin(z / r);\n        var phi = Math.atan2(y, x);\n        var ydiff = phi - yaw;\n        ydiff += (ydiff > Math.PI) ? -2 * Math.PI : (ydiff < -Math.PI) ? 2 * Math.PI : 0;\n        ydiff = Math.abs(ydiff);\n        node.diff = Math.acos(Math.sin(pitch) * Math.sin(theta) + Math.cos(pitch) * Math.cos(theta) * Math.cos(ydiff));\n            \n        // Add node to current nodes and load texture if needed\n        var inCurrent = false;\n        for (var k = 0; k < program.nodeCache.length; k++) {\n          if (program.nodeCache[k].path == node.path) {\n            inCurrent = true;\n            program.nodeCache[k].timestamp = program.nodeCacheTimestamp++;\n            program.nodeCache[k].diff = node.diff;\n            program.currentNodes.push(program.nodeCache[k]);\n            break;\n          }\n        }\n        if (!inCurrent) {\n          //node.color = [Math.random(), Math.random(), Math.random()];\n          node.timestamp = program.nodeCacheTimestamp++;\n          program.currentNodes.push(node);\n          program.nodeCache.push(node);\n        }\n            \n        // TODO: Test error\n        // Create child nodes\n        if (node.level < program.level) {\n          var cubeSize = image.cubeResolution * Math.pow(2, node.level - image.maxLevel);\n          var numTiles = Math.ceil(cubeSize * image.invTileResolution) - 1;\n          var doubleTileSize = cubeSize % image.tileResolution * 2;\n          var lastTileSize = (cubeSize * 2) % image.tileResolution;\n          if (lastTileSize === 0) {\n            lastTileSize = image.tileResolution;\n          }\n          if (doubleTileSize === 0) {\n            doubleTileSize = image.tileResolution * 2;\n          }\n          var f = 0.5;\n          if (node.x == numTiles || node.y == numTiles) {\n            f = 1.0 - image.tileResolution / (image.tileResolution + lastTileSize);\n          }\n          var i = 1.0 - f;\n          var children = [];\n          var vtmp, ntmp;\n          var f1 = f, f2 = f, f3 = f, i1 = i, i2 = i, i3 = i;\n          // Handle non-symmetric tiles\n          if (lastTileSize < image.tileResolution) {\n            if (node.x == numTiles && node.y != numTiles) {\n              f2 = 0.5;\n              i2 = 0.5;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            } else if (node.x != numTiles && node.y == numTiles) {\n              f1 = 0.5;\n              i1 = 0.5;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            }\n          }\n          // Handle small tiles that have fewer than four children\n          if (doubleTileSize <= image.tileResolution) {\n            if (node.x == numTiles) {\n              f1 = 0;\n              i1 = 1;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n            if (node.y == numTiles) {\n              f2 = 0;\n              i2 = 1;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n          }\n                \n          vtmp = [           v[0],             v[1],             v[2],\n            v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n            v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n            v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3\n          ];\n          ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2, image.fullpath);\n          children.push(ntmp);\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n              v[3],             v[4],             v[5],\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution) &&\n                    !(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[6],             v[7],             v[8],\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [  v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3,\n              v[9],            v[10],            v[11]\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          for (var j = 0; j < children.length; j++) {\n            testMultiresNode(rotPersp, children[j], pitch, yaw, hfov);\n          }\n        }\n      }\n    }\n    \n    /**\n     * Creates cube vertex array.\n     * @private\n     * @returns {number[]} Cube vertex array.\n     */\n    function createCube() {\n      return [-1,  1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, // Front face\n        1,  1,  1, -1,  1,  1, -1, -1,  1,  1, -1,  1, // Back face\n        -1,  1,  1,  1,  1,  1,  1,  1, -1, -1,  1, -1, // Up face\n        -1, -1, -1,  1, -1, -1,  1, -1,  1, -1, -1,  1, // Down face\n        -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1,  1, // Left face\n        1,  1, -1,  1,  1,  1,  1, -1,  1,  1, -1, -1  // Right face\n      ];\n    }\n    \n    /**\n     * Creates 3x3 identity matrix.\n     * @private\n     * @returns {number[]} Identity matrix.\n     */\n    function identityMatrix3() {\n      return [\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n      ];\n    }\n    \n    /**\n     * Rotates a 3x3 matrix.\n     * @private\n     * @param {number[]} m - Matrix to rotate.\n     * @param {number[]} angle - Angle to rotate by in radians.\n     * @param {string} axis - Axis to rotate about (`x`, `y`, or `z`).\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotateMatrix(m, angle, axis) {\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      if (axis == 'x') {\n        return [\n          m[0], c*m[1] + s*m[2], c*m[2] - s*m[1],\n          m[3], c*m[4] + s*m[5], c*m[5] - s*m[4],\n          m[6], c*m[7] + s*m[8], c*m[8] - s*m[7]\n        ];\n      }\n      if (axis == 'y') {\n        return [\n          c*m[0] - s*m[2], m[1], c*m[2] + s*m[0],\n          c*m[3] - s*m[5], m[4], c*m[5] + s*m[3],\n          c*m[6] - s*m[8], m[7], c*m[8] + s*m[6]\n        ];\n      }\n      if (axis == 'z') {\n        return [\n          c*m[0] + s*m[1], c*m[1] - s*m[0], m[2],\n          c*m[3] + s*m[4], c*m[4] - s*m[3], m[5],\n          c*m[6] + s*m[7], c*m[7] - s*m[6], m[8]\n        ];\n      }\n    }\n    \n    /**\n     * Turns a 3x3 matrix into a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Expanded matrix.\n     */\n    function makeMatrix4(m) {\n      return [\n        m[0], m[1], m[2],    0,\n        m[3], m[4], m[5],    0,\n        m[6], m[7], m[8],    0,\n        0,    0,    0,    1\n      ];\n    }\n    \n    /**\n     * Transposes a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Transposed matrix.\n     */\n    function transposeMatrix4(m) {\n      return [\n        m[ 0], m[ 4], m[ 8], m[12],\n        m[ 1], m[ 5], m[ 9], m[13],\n        m[ 2], m[ 6], m[10], m[14],\n        m[ 3], m[ 7], m[11], m[15]\n      ];\n    }\n    \n    /**\n     * Creates a perspective matrix.\n     * @private\n     * @param {number} hfov - Desired horizontal field of view.\n     * @param {number} aspect - Desired aspect ratio.\n     * @param {number} znear - Near distance.\n     * @param {number} zfar - Far distance.\n     * @returns {number[]} Generated perspective matrix.\n     */\n    function makePersp(hfov, aspect, znear, zfar) {\n      var fovy = 2 * Math.atan(Math.tan(hfov/2) * gl.drawingBufferHeight / gl.drawingBufferWidth);\n      var f = 1 / Math.tan(fovy/2);\n      return [\n        f/aspect,   0,  0,  0,\n        0,   f,  0,  0,\n        0,   0,  (zfar+znear)/(znear-zfar), (2*zfar*znear)/(znear-zfar),\n        0,   0, -1,  0\n      ];\n    }\n    \n    /**\n     * Processes a loaded texture image into a WebGL texture.\n     * @private\n     * @param {Image} img - Input image.\n     * @param {WebGLTexture} tex - Texture to bind image to.\n     */\n    function processLoadedTexture(img, tex) {\n      gl.bindTexture(gl.TEXTURE_2D, tex);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, img);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    \n    var pendingTextureRequests = [];\n\n    // Based on http://blog.tojicode.com/2012/03/javascript-memory-optimization-and.html\n    var loadTexture = (function() {\n      var cacheTop = 4;   // Maximum number of concurrents loads\n      var textureImageCache = {};\n      var crossOrigin;\n\n      function TextureImageLoader() {\n        var self = this;\n        this.texture = this.callback = null;\n        this.image = new Image();\n        this.image.crossOrigin = crossOrigin ? crossOrigin : 'anonymous';\n        var loadFn = (function() {\n          if (self.image.width > 0 && self.image.height > 0) { // ignore missing tile to supporting partial image\n            processLoadedTexture(self.image, self.texture);\n            self.callback(self.texture, true);\n          } else {\n            self.callback(self.texture, false);\n          }\n          releaseTextureImageLoader(self);\n        });\n        this.image.addEventListener('load', loadFn);\n        this.image.addEventListener('error', loadFn); // ignore missing tile file to support partial image, otherwise retry loop causes high CPU load\n      };\n\n      TextureImageLoader.prototype.loadTexture = function(src, texture, callback) {\n        this.texture = texture;\n        this.callback = callback;\n        this.image.src = src;\n      };\n\n      function PendingTextureRequest(node, src, texture, callback) {\n        this.node = node;\n        this.src = src;\n        this.texture = texture;\n        this.callback = callback;\n      };\n\n      function releaseTextureImageLoader(til) {\n        if (pendingTextureRequests.length) {\n          var req = pendingTextureRequests.shift();\n          til.loadTexture(req.src, req.texture, req.callback);\n        } else\n        {textureImageCache[cacheTop++] = til;}\n      }\n\n      for (var i = 0; i < cacheTop; i++)\n      {textureImageCache[i] = new TextureImageLoader();}\n\n      return function(node, src, callback, _crossOrigin) {\n        crossOrigin = _crossOrigin;\n        var texture = gl.createTexture();\n        if (cacheTop)\n        {textureImageCache[--cacheTop].loadTexture(src, texture, callback);}\n        else\n        {pendingTextureRequests.push(new PendingTextureRequest(node, src, texture, callback));}\n        return texture;\n      };\n    })();\n\n    /**\n     * Loads image and creates texture for a multires node / tile.\n     * @private\n     * @param {MultiresNode} node - Input node.\n     */\n    function processNextTile(node) {\n      loadTexture(node, encodeURI(node.path + '.' + image.extension), function(texture, loaded) {\n        node.texture = texture;\n        node.textureLoaded = loaded ? 2 : 1;\n      }, globalParams.crossOrigin);\n    }\n    \n    /**\n     * Finds and applies optimal multires zoom level.\n     * @private\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function checkZoom(hfov) {\n      // Find optimal level\n      var newLevel = 1;\n      while ( newLevel < image.maxLevel &&\n            gl.drawingBufferWidth > image.tileResolution *\n            Math.pow(2, newLevel - 1) * Math.tan(hfov / 2) * 0.707 ) {\n        newLevel++;\n      }\n        \n      // Apply change\n      program.level = newLevel;\n    }\n    \n    /**\n     * Rotates perspective matrix.\n     * @private\n     * @param {number[]} p - Perspective matrix.\n     * @param {number[]} r - Rotation matrix.\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotatePersp(p, r) {\n      return [\n        p[ 0]*r[0], p[ 0]*r[1], p[ 0]*r[ 2],     0,\n        p[ 5]*r[4], p[ 5]*r[5], p[ 5]*r[ 6],     0,\n        p[10]*r[8], p[10]*r[9], p[10]*r[10], p[11],\n        -r[8],      -r[9],      -r[10],     0\n      ];\n    }\n    \n    /**\n     * Applies rotated perspective matrix to a 3-vector\n     * (last element is inverted).\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input 3-vector.\n     * @returns {number[]} Resulting 4-vector.\n     */\n    function applyRotPerspToVec(m, v) {\n      return [\n        m[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2],\n        m[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2],\n        m[11] + m[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2],\n        1/(m[12]*v[0] + m[13]*v[1] + m[14]*v[2])\n      ];\n    }\n    \n    /**\n     * Checks if a vertex is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input vertex.\n     * @returns {number} 1 or -1 if the vertex is or is not visible,\n     *      respectively.\n     */\n    function checkInView(m, v) {\n      var vpp = applyRotPerspToVec(m, v);\n      var winX = vpp[0]*vpp[3];\n      var winY = vpp[1]*vpp[3];\n      var winZ = vpp[2]*vpp[3];\n      var ret = [0, 0, 0];\n        \n      if ( winX < -1 )\n      {ret[0] = -1;}\n      if ( winX > 1 )\n      {ret[0] = 1;}\n      if ( winY < -1 )\n      {ret[1] = -1;}\n      if ( winY > 1 )\n      {ret[1] = 1;}\n      if ( winZ < -1 || winZ > 1 )\n      {ret[2] = 1;}\n      return ret;\n    }\n    \n    /**\n     * Checks if a square (tile) is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Square's vertex array.\n     * @returns {boolean} Whether or not the square is visible.\n     */\n    function checkSquareInView(m, v) {\n      var check1 = checkInView(m, v.slice(0, 3));\n      var check2 = checkInView(m, v.slice(3, 6));\n      var check3 = checkInView(m, v.slice(6, 9));\n      var check4 = checkInView(m, v.slice(9, 12));\n      var testX = check1[0] + check2[0] + check3[0] + check4[0];\n      if ( testX == -4 || testX == 4 )\n      {return false;}\n      var testY = check1[1] + check2[1] + check3[1] + check4[1];\n      if ( testY == -4 || testY == 4 )\n      {return false;}\n      var testZ = check1[2] + check2[2] + check3[2] + check4[2];\n      return testZ != 4;\n        \n\n    }\n\n    /**\n     * On iOS (iPhone 5c, iOS 10.3), this WebGL error occurs when the canvas is\n     * too big. Unfortuately, there's no way to test for this beforehand, so we\n     * reduce the canvas size if this error is thrown.\n     * @private\n     */\n    function handleWebGLError1286() {\n      console.log('Reducing canvas size due to error 1286!');\n      canvas.width = Math.round(canvas.width / 2);\n      canvas.height = Math.round(canvas.height / 2);\n    }\n  }\n\n  // Vertex shader for equirectangular and cube\n  var v = [\n    'attribute vec2 a_texCoord;',\n    'varying vec2 v_texCoord;',\n\n    'void main() {',\n    // Set position\n    'gl_Position = vec4(a_texCoord, 0.0, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Vertex shader for multires\n  var vMulti = [\n    'attribute vec3 a_vertCoord;',\n    'attribute vec2 a_texCoord;',\n\n    'uniform mat4 u_cubeMatrix;',\n    'uniform mat4 u_perspMatrix;',\n\n    'varying mediump vec2 v_texCoord;',\n\n    'void main(void) {',\n    // Set position\n    'gl_Position = u_perspMatrix * u_cubeMatrix * vec4(a_vertCoord, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Fragment shader\n  var fragEquiCubeBase = [\n    'precision mediump float;',\n\n    'uniform float u_aspectRatio;',\n    'uniform float u_psi;',\n    'uniform float u_theta;',\n    'uniform float u_f;',\n    'uniform float u_h;',\n    'uniform float u_v;',\n    'uniform float u_vo;',\n    'uniform float u_rot;',\n\n    'const float PI = 3.14159265358979323846264;',\n\n    // Texture\n    'uniform sampler2D u_image;',\n    'uniform samplerCube u_imageCube;',\n\n    // Coordinates passed in from vertex shader\n    'varying vec2 v_texCoord;',\n\n    // Background color (display for partial panoramas)\n    'uniform vec4 u_backgroundColor;',\n\n    'void main() {',\n    // Map canvas/camera to sphere\n    'float x = v_texCoord.x * u_aspectRatio;',\n    'float y = v_texCoord.y;',\n    'float sinrot = sin(u_rot);',\n    'float cosrot = cos(u_rot);',\n    'float rot_x = x * cosrot - y * sinrot;',\n    'float rot_y = x * sinrot + y * cosrot;',\n    'float sintheta = sin(u_theta);',\n    'float costheta = cos(u_theta);',\n    'float a = u_f * costheta - rot_y * sintheta;',\n    'float root = sqrt(rot_x * rot_x + a * a);',\n    'float lambda = atan(rot_x / root, a / root) + u_psi;',\n    'float phi = atan((rot_y * costheta + u_f * sintheta) / root);',\n  ].join('\\n');\n\n  // Fragment shader\n  var fragCube = fragEquiCubeBase + [\n    // Look up color from texture\n    'float cosphi = cos(phi);',\n    'gl_FragColor = textureCube(u_imageCube, vec3(cosphi*sin(lambda), sin(phi), cosphi*cos(lambda)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragEquirectangular = fragEquiCubeBase + [\n    // Wrap image\n    'lambda = mod(lambda + PI, PI * 2.0) - PI;',\n\n    // Map texture to sphere\n    'vec2 coord = vec2(lambda / PI, phi / (PI / 2.0));',\n\n    // Look up color from texture\n    // Map from [-1,1] to [0,1] and flip y-axis\n    'if(coord.x < -u_h || coord.x > u_h || coord.y < -u_v + u_vo || coord.y > u_v + u_vo)',\n    'gl_FragColor = u_backgroundColor;',\n    'else',\n    'gl_FragColor = texture2D(u_image, vec2((coord.x + u_h) / (u_h * 2.0), (-coord.y + u_v + u_vo) / (u_v * 2.0)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragMulti = [\n    'varying mediump vec2 v_texCoord;',\n    'uniform sampler2D u_sampler;',\n    //'uniform mediump vec4 u_color;',\n\n    'void main(void) {',\n    // Look up color from texture\n    'gl_FragColor = texture2D(u_sampler, v_texCoord);',\n    //    'gl_FragColor = u_color;',\n    '}'\n  ].join('');\n\n  return {\n    renderer: function(container, image, imagetype, dynamic) {\n      return new Renderer(container, image, imagetype, dynamic);\n    }\n  };\n\n})(window, document);\n","/*\n * Pannellum - An HTML5 based Panorama Viewer\n * Copyright (c) 2011-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.pannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama viewer.\n * @constructor\n * @param {HTMLElement|string} container - The container (div) element for the\n *      viewer, or its ID.\n * @param {Object} initialConfig - Inital configuration for viewer.\n */\n  function Viewer(container, initialConfig) {\n\n    var _this = this;\n\n    // Declare variables\n    var config,\n      renderer,\n      preview,\n      isUserInteracting = false,\n      latestInteraction = Date.now(),\n      onPointerDownPointerX = 0,\n      onPointerDownPointerY = 0,\n      onPointerDownPointerDist = -1,\n      onPointerDownYaw = 0,\n      onPointerDownPitch = 0,\n      keysDown = new Array(10),\n      fullscreenActive = false,\n      loaded,\n      error = false,\n      isTimedOut = false,\n      listenersAdded = false,\n      panoImage,\n      prevTime,\n      speed = { 'yaw': 0, 'pitch': 0, 'hfov': 0 },\n      animating = false,\n      orientation = false,\n      orientationYawOffset = 0,\n      autoRotateStart,\n      autoRotateSpeed = 0,\n      origHfov,\n      origPitch,\n      animatedMove = {},\n      externalEventListeners = {},\n      specifiedPhotoSphereExcludes = [],\n      update = false, // Should we update when still to render dynamic content\n      hotspotsCreated = false;\n\n    var defaultConfig = {\n      hfov: 100,\n      minHfov: 50,\n      maxHfov: 120,\n      pitch: 0,\n      minPitch: undefined,\n      maxPitch: undefined,\n      yaw: 0,\n      minYaw: -180,\n      maxYaw: 180,\n      roll: 0,\n      haov: 360,\n      vaov: 180,\n      vOffset: 0,\n      autoRotate: false,\n      autoRotateInactivityDelay: -1,\n      autoRotateStopDelay: undefined,\n      type: 'equirectangular',\n      northOffset: 0,\n      showFullscreenCtrl: true,\n      dynamic: false,\n      doubleClickZoom: true,\n      keyboardZoom: true,\n      mouseZoom: true,\n      showZoomCtrl: true,\n      autoLoad: false,\n      showControls: true,\n      orientationOnByDefault: false,\n      hotSpotDebug: false,\n      backgroundColor: [0, 0, 0],\n      avoidShowingBackground: false,\n      animationTimingFunction: timingFunction,\n      draggable: true,\n      disableKeyboardCtrl: false,\n      crossOrigin: 'anonymous',\n      touchPanSpeedCoeffFactor: 1,\n      capturedKeyNumbers: [16, 17, 27, 37, 38, 39, 40, 61, 65, 68, 83, 87, 107, 109, 173, 187, 189],\n    };\n\n    // Translatable / configurable strings\n    // Some strings contain '%s', which is a placeholder for inserted values\n    // When setting strings in external configuration, `\\n` should be used instead of `<br>` to insert line breaks\n    defaultConfig.strings = {\n    // Labels\n      loadButtonLabel: 'Click to<br>Load<br>Panorama',\n      loadingLabel: 'Loading...',\n      bylineLabel: 'by %s',    // One substitution: author\n\n      // Errors\n      noPanoramaError: 'No panorama image was specified.',\n      fileAccessError: 'The file %s could not be accessed.',  // One substitution: file URL\n      malformedURLError: 'There is something wrong with the panorama URL.',\n      iOS8WebGLError: \"Due to iOS 8's broken WebGL implementation, only \" +\n                    \"progressive encoded JPEGs work for your device (this \" +\n                    \"panorama uses standard encoding).\",\n      genericWebGLError: 'Your browser does not have the necessary WebGL support to display this panorama.',\n      textureSizeError: 'This panorama is too big for your device! It\\'s ' +\n                '%spx wide, but your device only supports images up to ' +\n                '%spx wide. Try another device.' +\n                ' (If you\\'re the author, try scaling down the image.)',    // Two substitutions: image width, max image width\n      unknownError: 'Unknown error. Check developer console.',\n    };\n\n    // Initialize container\n    container = typeof container === 'string' ? document.getElementById(container) : container;\n    container.classList.add('pnlm-container');\n    container.tabIndex = 0;\n\n    // Create container for ui\n    var uiContainer = document.createElement('div');\n    uiContainer.className = 'pnlm-ui';\n    container.appendChild(uiContainer);\n\n    // Create container for renderer\n    var renderContainer = document.createElement('div');\n    renderContainer.className = 'pnlm-render-container';\n    container.appendChild(renderContainer);\n    var dragFix = document.createElement('div');\n    dragFix.className = 'pnlm-dragfix';\n    uiContainer.appendChild(dragFix);\n\n    // Display about information on right click\n    var aboutMsg = document.createElement('span');\n    aboutMsg.className = 'pnlm-about-msg';\n    aboutMsg.innerHTML = '<a href=\"https://pannellum.org/\" target=\"_blank\">Pannellum</a>';\n    uiContainer.appendChild(aboutMsg);\n    dragFix.addEventListener('contextmenu', aboutMessage);\n\n    // Create info display\n    var infoDisplay = {};\n\n    // Hot spot debug indicator\n    var hotSpotDebugIndicator = document.createElement('div');\n    hotSpotDebugIndicator.className = 'pnlm-sprite pnlm-hot-spot-debug-indicator';\n    uiContainer.appendChild(hotSpotDebugIndicator);\n\n    // Panorama info\n    infoDisplay.container = document.createElement('div');\n    infoDisplay.container.className = 'pnlm-panorama-info';\n    infoDisplay.title = document.createElement('div');\n    infoDisplay.title.className = 'pnlm-title-box';\n    infoDisplay.container.appendChild(infoDisplay.title);\n    infoDisplay.author = document.createElement('div');\n    infoDisplay.author.className = 'pnlm-author-box';\n    infoDisplay.container.appendChild(infoDisplay.author);\n    uiContainer.appendChild(infoDisplay.container);\n\n    // Load box\n    infoDisplay.load = {};\n    infoDisplay.load.box = document.createElement('div');\n    infoDisplay.load.box.className = 'pnlm-load-box';\n    infoDisplay.load.boxp = document.createElement('p');\n    infoDisplay.load.box.appendChild(infoDisplay.load.boxp);\n    infoDisplay.load.lbox = document.createElement('div');\n    infoDisplay.load.lbox.className = 'pnlm-lbox';\n    infoDisplay.load.lbox.innerHTML = '<div class=\"pnlm-loading\"></div>';\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbox);\n    infoDisplay.load.lbar = document.createElement('div');\n    infoDisplay.load.lbar.className = 'pnlm-lbar';\n    infoDisplay.load.lbarFill = document.createElement('div');\n    infoDisplay.load.lbarFill.className = 'pnlm-lbar-fill';\n    infoDisplay.load.lbar.appendChild(infoDisplay.load.lbarFill);\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbar);\n    infoDisplay.load.msg = document.createElement('p');\n    infoDisplay.load.msg.className = 'pnlm-lmsg';\n    infoDisplay.load.box.appendChild(infoDisplay.load.msg);\n    uiContainer.appendChild(infoDisplay.load.box);\n\n    // Error message\n    infoDisplay.errorMsg = document.createElement('div');\n    infoDisplay.errorMsg.className = 'pnlm-error-msg pnlm-info-box';\n    uiContainer.appendChild(infoDisplay.errorMsg);\n\n    // Create controls\n    var controls = {};\n    controls.container = document.createElement('div');\n    controls.container.className = 'pnlm-controls-container';\n    uiContainer.appendChild(controls.container);\n\n    // Load button\n    controls.load = document.createElement('div');\n    controls.load.className = 'pnlm-load-button';\n    controls.load.addEventListener('click', function() {\n      processOptions();\n      load();\n    });\n    uiContainer.appendChild(controls.load);\n\n    // Zoom controls\n    controls.zoom = document.createElement('div');\n    controls.zoom.className = 'pnlm-zoom-controls pnlm-controls';\n    controls.zoomIn = document.createElement('div');\n    controls.zoomIn.className = 'pnlm-zoom-in pnlm-sprite pnlm-control';\n    controls.zoomIn.addEventListener('click', zoomIn);\n    controls.zoom.appendChild(controls.zoomIn);\n    controls.zoomOut = document.createElement('div');\n    controls.zoomOut.className = 'pnlm-zoom-out pnlm-sprite pnlm-control';\n    controls.zoomOut.addEventListener('click', zoomOut);\n    controls.zoom.appendChild(controls.zoomOut);\n    controls.container.appendChild(controls.zoom);\n\n    // Fullscreen toggle\n    controls.fullscreen = document.createElement('div');\n    controls.fullscreen.addEventListener('click', toggleFullscreen);\n    controls.fullscreen.className = 'pnlm-fullscreen-toggle-button pnlm-sprite pnlm-fullscreen-toggle-button-inactive pnlm-controls pnlm-control';\n    if (document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled)\n      {controls.container.appendChild(controls.fullscreen);}\n\n    // Device orientation toggle\n    controls.orientation = document.createElement('div');\n    controls.orientation.addEventListener('click', function(e) {\n      if (orientation)\n        {stopOrientation();}\n      else\n        {startOrientation();}\n    });\n    controls.orientation.addEventListener('mousedown', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('touchstart', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('pointerdown', function(e) {e.stopPropagation();});\n    controls.orientation.className = 'pnlm-orientation-button pnlm-orientation-button-inactive pnlm-sprite pnlm-controls pnlm-control';\n    var orientationSupport, startOrientationIfSupported = false;\n    function deviceOrientationTest(e) {\n      window.removeEventListener('deviceorientation', deviceOrientationTest);\n      if (e && e.alpha !== null && e.beta !== null && e.gamma !== null) {\n        controls.container.appendChild(controls.orientation);\n        orientationSupport = true;\n        if (startOrientationIfSupported)\n          {startOrientation();}\n      } else {\n        orientationSupport = false;\n      }\n    }\n    if (window.DeviceOrientationEvent) {\n      window.addEventListener('deviceorientation', deviceOrientationTest);\n    } else {\n      orientationSupport = false;\n    }\n\n    // Compass\n    var compass = document.createElement('div');\n    compass.className = 'pnlm-compass pnlm-controls pnlm-control';\n    uiContainer.appendChild(compass);\n\n    // Load and process configuration\n    if (initialConfig.firstScene) {\n    // Activate first scene if specified in URL\n      mergeConfig(initialConfig.firstScene);\n    } else if (initialConfig.default && initialConfig.default.firstScene) {\n    // Activate first scene if specified in file\n      mergeConfig(initialConfig.default.firstScene);\n    } else {\n      mergeConfig(null);\n    }\n    processOptions(true);\n\n    /**\n * Initializes viewer.\n * @private\n */\n    function init() {\n    // Display an error for IE 9 as it doesn't work but also doesn't otherwise\n    // show an error (older versions don't work at all)\n    // Based on: http://stackoverflow.com/a/10965203\n      var div = document.createElement(\"div\");\n      div.innerHTML = \"<!--[if lte IE 9]><i></i><![endif]-->\";\n      if (div.getElementsByTagName(\"i\").length == 1) {\n        anError();\n        return;\n      }\n\n      origHfov = config.hfov;\n      origPitch = config.pitch;\n\n      var i, p;\n    \n      if (config.type == 'cubemap') {\n        panoImage = [];\n        for (i = 0; i < 6; i++) {\n          panoImage.push(new Image());\n          panoImage[i].crossOrigin = config.crossOrigin;\n        }\n        infoDisplay.load.lbox.style.display = 'block';\n        infoDisplay.load.lbar.style.display = 'none';\n      } else if (config.type == 'multires') {\n        var c = JSON.parse(JSON.stringify(config.multiRes));    // Deep copy\n        // Avoid \"undefined\" in path, check (optional) multiRes.basePath, too\n        // Use only multiRes.basePath if it's an absolute URL\n        if (config.basePath && config.multiRes.basePath &&\n            !(/^(?:[a-z]+:)?\\/\\//i.test(config.multiRes.basePath))) {\n          c.basePath = config.basePath + config.multiRes.basePath;\n        } else if (config.multiRes.basePath) {\n          c.basePath = config.multiRes.basePath;\n        } else if (config.basePath) {\n          c.basePath = config.basePath;\n        }\n        panoImage = c;\n      } else {\n        if (config.dynamic === true) {\n          panoImage = config.panorama;\n        } else {\n          if (config.panorama === undefined) {\n            anError(config.strings.noPanoramaError);\n            return;\n          }\n          panoImage = new Image();\n        }\n      }\n\n      // Configure image loading\n      if (config.type == 'cubemap') {\n        // Quick loading counter for synchronous loading\n        var itemsToLoad = 6;\n        \n        var onLoad = function() {\n          itemsToLoad--;\n          if (itemsToLoad === 0) {\n            onImageLoad();\n          }\n        };\n        \n        var onError = function(e) {\n          var a = document.createElement('a');\n          a.href = e.target.src;\n          a.textContent = a.href;\n          anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n        };\n        \n        for (i = 0; i < panoImage.length; i++) {\n          p = config.cubeMap[i];\n          if (p == \"null\") { // support partial cubemap image with explicitly empty faces\n            console.log('Will use background instead of missing cubemap face ' + i);\n            onLoad();\n          } else {\n            if (config.basePath && !absoluteURL(p)) {\n              p = config.basePath + p;\n            }\n            panoImage[i].onload = onLoad;\n            panoImage[i].onerror = onError;\n            panoImage[i].src = sanitizeURL(p);\n          }\n        }\n      } else if (config.type == 'multires') {\n        onImageLoad();\n      } else {\n        p = '';\n        if (config.basePath) {\n          p = config.basePath;\n        }\n        \n        if (config.dynamic !== true) {\n          // Still image\n          p = absoluteURL(config.panorama) ? config.panorama : p + config.panorama;\n            \n          panoImage.onload = function() {\n            window.URL.revokeObjectURL(this.src);  // Clean up\n            onImageLoad();\n          };\n            \n          var xhr = new XMLHttpRequest();\n          xhr.onloadend = function() {\n            if (xhr.status != 200) {\n              // Display error if image can't be loaded\n              var a = document.createElement('a');\n              a.href = p;\n              a.textContent = a.href;\n              anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n            }\n            var img = this.response;\n            parseGPanoXMP(img);\n            infoDisplay.load.msg.innerHTML = '';\n          };\n          xhr.onprogress = function(e) {\n            if (e.lengthComputable) {\n              // Display progress\n              var percent = e.loaded / e.total * 100;\n              infoDisplay.load.lbarFill.style.width = percent + '%';\n              var unit, numerator, denominator;\n              if (e.total > 1e6) {\n                unit = 'MB';\n                numerator = (e.loaded / 1e6).toFixed(2);\n                denominator = (e.total / 1e6).toFixed(2);\n              } else if (e.total > 1e3) {\n                unit = 'kB';\n                numerator = (e.loaded / 1e3).toFixed(1);\n                denominator = (e.total / 1e3).toFixed(1);\n              } else {\n                unit = 'B';\n                numerator = e.loaded;\n                denominator = e.total;\n              }\n              infoDisplay.load.msg.innerHTML = numerator + ' / ' + denominator + ' ' + unit;\n            } else {\n              // Display loading spinner\n              infoDisplay.load.lbox.style.display = 'block';\n              infoDisplay.load.lbar.style.display = 'none';\n            }\n          };\n          try {\n            xhr.open('GET', p, true);\n          } catch (e) {\n            // Malformed URL\n            anError(config.strings.malformedURLError);\n          }\n          xhr.responseType = 'blob';\n          xhr.setRequestHeader('Accept', 'image/*,*/*;q=0.9');\n          xhr.withCredentials = config.crossOrigin === 'use-credentials';\n          xhr.send();\n        }\n      }\n    \n      if (config.draggable)\n        {uiContainer.classList.add('pnlm-grab');}\n      uiContainer.classList.remove('pnlm-grabbing');\n    }\n\n    /**\n * Test if URL is absolute or relative.\n * @private\n * @param {string} url - URL to test\n * @returns {boolean} True if absolute, else false\n */\n    function absoluteURL(url) {\n    // From http://stackoverflow.com/a/19709846\n      return new RegExp('^(?:[a-z]+:)?//', 'i').test(url) || url[0] == '/' || url.slice(0, 5) == 'blob:';\n    };\n\n    /**\n * Create renderer and initialize event listeners once image is loaded.\n * @private\n */\n    function onImageLoad() {\n      if (!renderer)\n        {renderer = new libpannellum.renderer(renderContainer);}\n\n      // Only add event listeners once\n      if (!listenersAdded) {\n        listenersAdded = true;\n        dragFix.addEventListener('mousedown', onDocumentMouseDown, false);\n        document.addEventListener('mousemove', onDocumentMouseMove, false);\n        document.addEventListener('mouseup', onDocumentMouseUp, false);\n        if (config.mouseZoom) {\n          uiContainer.addEventListener('mousewheel', onDocumentMouseWheel, false);\n          uiContainer.addEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        }\n        if (config.doubleClickZoom) {\n          dragFix.addEventListener('dblclick', onDocumentDoubleClick, false);\n        }\n        uiContainer.addEventListener('mozfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('msfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('fullscreenchange', onFullScreenChange, false);\n        window.addEventListener('resize', onDocumentResize, false);\n        window.addEventListener('orientationchange', onDocumentResize, false);\n        if (!config.disableKeyboardCtrl) {\n          container.addEventListener('keydown', onDocumentKeyPress, false);\n          container.addEventListener('keyup', onDocumentKeyUp, false);\n          container.addEventListener('blur', clearKeys, false);\n        }\n        document.addEventListener('mouseleave', onDocumentMouseUp, false);\n        if (document.documentElement.style.pointerAction === '' &&\n            document.documentElement.style.touchAction === '') {\n          dragFix.addEventListener('pointerdown', onDocumentPointerDown, false);\n          dragFix.addEventListener('pointermove', onDocumentPointerMove, false);\n          dragFix.addEventListener('pointerup', onDocumentPointerUp, false);\n          dragFix.addEventListener('pointerleave', onDocumentPointerUp, false);\n        } else {\n          dragFix.addEventListener('touchstart', onDocumentTouchStart, false);\n          dragFix.addEventListener('touchmove', onDocumentTouchMove, false);\n          dragFix.addEventListener('touchend', onDocumentTouchEnd, false);\n        }\n\n        // Deal with MS pointer events\n        if (window.navigator.pointerEnabled)\n          {container.style.touchAction = 'none';}\n      }\n\n      renderInit();\n      setHfov(config.hfov); // possibly adapt hfov after configuration and canvas is complete; prevents empty space on top or bottom by zomming out too much\n      setTimeout(function(){isTimedOut = true;}, 500);\n    }\n\n    /**\n * Parses Google Photo Sphere XMP Metadata.\n * https://developers.google.com/photo-sphere/metadata/\n * @private\n * @param {Image} image - Image to read XMP metadata from.\n */\n    function parseGPanoXMP(image) {\n      var reader = new FileReader();\n      reader.addEventListener('loadend', function() {\n        var img = reader.result;\n\n        // This awful browser specific test exists because iOS 8 does not work\n        // with non-progressive encoded JPEGs.\n        if (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/)) {\n          var flagIndex = img.indexOf('\\xff\\xc2');\n          if (flagIndex < 0 || flagIndex > 65536)\n            {anError(config.strings.iOS8WebGLError);}\n        }\n\n        var start = img.indexOf('<x:xmpmeta');\n        if (start > -1 && config.ignoreGPanoXMP !== true) {\n          var xmpData = img.substring(start, img.indexOf('</x:xmpmeta>') + 12);\n            \n          // Extract the requested tag from the XMP data\n          var getTag = function(tag) {\n            var result;\n            if (xmpData.indexOf(tag + '=\"') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '=\"') + tag.length + 2);\n              result = result.substring(0, result.indexOf('\"'));\n            } else if (xmpData.indexOf(tag + '>') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '>') + tag.length + 1);\n              result = result.substring(0, result.indexOf('<'));\n            }\n            if (result !== undefined) {\n              return Number(result);\n            }\n            return null;\n          };\n            \n            // Relevant XMP data\n          var xmp = {\n            fullWidth: getTag('GPano:FullPanoWidthPixels'),\n            croppedWidth: getTag('GPano:CroppedAreaImageWidthPixels'),\n            fullHeight: getTag('GPano:FullPanoHeightPixels'),\n            croppedHeight: getTag('GPano:CroppedAreaImageHeightPixels'),\n            topPixels: getTag('GPano:CroppedAreaTopPixels'),\n            heading: getTag('GPano:PoseHeadingDegrees'),\n            horizonPitch: getTag('GPano:PosePitchDegrees'),\n            horizonRoll: getTag('GPano:PoseRollDegrees')\n          };\n            \n          if (xmp.fullWidth !== null && xmp.croppedWidth !== null &&\n                xmp.fullHeight !== null && xmp.croppedHeight !== null &&\n                xmp.topPixels !== null) {\n                \n            // Set up viewer using GPano XMP data\n            if (specifiedPhotoSphereExcludes.indexOf('haov') < 0)\n              {config.haov = xmp.croppedWidth / xmp.fullWidth * 360;}\n            if (specifiedPhotoSphereExcludes.indexOf('vaov') < 0)\n              {config.vaov = xmp.croppedHeight / xmp.fullHeight * 180;}\n            if (specifiedPhotoSphereExcludes.indexOf('vOffset') < 0)\n              {config.vOffset = ((xmp.topPixels + xmp.croppedHeight / 2) / xmp.fullHeight - 0.5) * -180;}\n            if (xmp.heading !== null && specifiedPhotoSphereExcludes.indexOf('northOffset') < 0) {\n              // TODO: make sure this works correctly for partial panoramas\n              config.northOffset = xmp.heading;\n              if (config.compass !== false) {\n                config.compass = true;\n              }\n            }\n            if (xmp.horizonPitch !== null && xmp.horizonRoll !== null) {\n              if (specifiedPhotoSphereExcludes.indexOf('horizonPitch') < 0)\n                {config.horizonPitch = xmp.horizonPitch;}\n              if (specifiedPhotoSphereExcludes.indexOf('horizonRoll') < 0)\n                {config.horizonRoll = xmp.horizonRoll;}\n            }\n                \n            // TODO: add support for initial view settings\n          }\n        }\n        \n        // Load panorama\n        panoImage.src = window.URL.createObjectURL(image);\n      });\n      if (reader.readAsBinaryString !== undefined)\n        {reader.readAsBinaryString(image);}\n      else\n        {reader.readAsText(image);}\n    }\n\n    /**\n * Displays an error message.\n * @private\n * @param {string} errorMsg - Error message to display. If not specified, a\n *      generic WebGL error is displayed.\n */\n    function anError(errorMsg) {\n      if (errorMsg === undefined)\n        {errorMsg = config.strings.genericWebGLError;}\n      infoDisplay.errorMsg.innerHTML = '<p>' + errorMsg + '</p>';\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'none';\n      infoDisplay.errorMsg.style.display = 'table';\n      error = true;\n      renderContainer.style.display = 'none';\n      fireEvent('error', errorMsg);\n    }\n\n    /**\n * Hides error message display.\n * @private\n */\n    function clearError() {\n      if (error) {\n        infoDisplay.load.box.style.display = 'none';\n        infoDisplay.errorMsg.style.display = 'none';\n        error = false;\n        fireEvent('errorcleared');\n      }\n    }\n\n    /**\n * Displays about message.\n * @private\n * @param {MouseEvent} event - Right click location\n */\n    function aboutMessage(event) {\n      var pos = mousePosition(event);\n      aboutMsg.style.left = pos.x + 'px';\n      aboutMsg.style.top = pos.y + 'px';\n      clearTimeout(aboutMessage.t1);\n      clearTimeout(aboutMessage.t2);\n      aboutMsg.style.display = 'block';\n      aboutMsg.style.opacity = 1;\n      aboutMessage.t1 = setTimeout(function() {aboutMsg.style.opacity = 0;}, 2000);\n      aboutMessage.t2 = setTimeout(function() {aboutMsg.style.display = 'none';}, 2500);\n      event.preventDefault();\n    }\n\n    /**\n * Calculate mouse position relative to top left of viewer container.\n * @private\n * @param {MouseEvent} event - Mouse event to use in calculation\n * @returns {Object} Calculated X and Y coordinates\n */\n    function mousePosition(event) {\n      var bounds = container.getBoundingClientRect();\n      var pos = {};\n      pos.x = event.clientX - bounds.left;\n      pos.y = event.clientY - bounds.top;\n      return pos;\n    }\n\n    /**\n * Event handler for mouse clicks. Initializes panning. Prints center and click\n * location coordinates when hot spot debugging is enabled.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentMouseDown(event) {\n    // Override default action\n      event.preventDefault();\n      // But not all of it\n      container.focus();\n    \n      // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n    \n      // Calculate mouse position relative to top left of viewer container\n      var pos = mousePosition(event);\n\n      // Log pitch / yaw of mouse click when debugging / placing hot spots\n      if (config.hotSpotDebug) {\n        var coords = mouseEventToCoords(event);\n        console.log('Pitch: ' + coords[0] + ', Yaw: ' + coords[1] + ', Center Pitch: ' +\n            config.pitch + ', Center Yaw: ' + config.yaw + ', HFOV: ' + config.hfov);\n      }\n    \n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownPointerX = pos.x;\n      onPointerDownPointerY = pos.y;\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n    \n      uiContainer.classList.add('pnlm-grabbing');\n      uiContainer.classList.remove('pnlm-grab');\n    \n      fireEvent('mousedown', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for double clicks. Zooms in at clicked location\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentDoubleClick(event) {\n      if (config.minHfov === config.hfov) {\n        _this.setHfov(origHfov, 1000);\n      } else {\n        var coords = mouseEventToCoords(event);\n        _this.lookAt(coords[0], coords[1], config.minHfov, 1000);\n      }\n    }\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    function mouseEventToCoords(event) {\n      var pos = mousePosition(event);\n      var canvas = renderer.getCanvas();\n      var canvasWidth = canvas.clientWidth,\n        canvasHeight = canvas.clientHeight;\n      var x = pos.x / canvasWidth * 2 - 1;\n      var y = (1 - pos.y / canvasHeight * 2) * canvasHeight / canvasWidth;\n      var focal = 1 / Math.tan(config.hfov * Math.PI / 360);\n      var s = Math.sin(config.pitch * Math.PI / 180);\n      var c = Math.cos(config.pitch * Math.PI / 180);\n      var a = focal * c - y * s;\n      var root = Math.sqrt(x*x + a*a);\n      var pitch = Math.atan((y * c + focal * s) / root) * 180 / Math.PI;\n      var yaw = Math.atan2(x / root, a / root) * 180 / Math.PI + config.yaw;\n      if (yaw < -180)\n        {yaw += 360;}\n      if (yaw > 180)\n        {yaw -= 360;}\n      return [pitch, yaw];\n    }\n\n    /**\n * Event handler for mouse moves. Pans center of view.\n * @private\n * @param {MouseEvent} event - Document mouse move event.\n */\n    function onDocumentMouseMove(event) {\n      if (isUserInteracting && loaded) {\n        latestInteraction = Date.now();\n        var canvas = renderer.getCanvas();\n        var canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var pos = mousePosition(event);\n        //TODO: This still isn't quite right\n        var yaw = ((Math.atan(onPointerDownPointerX / canvasWidth * 2 - 1) - Math.atan(pos.x / canvasWidth * 2 - 1)) * 180 / Math.PI * config.hfov / 90) + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n        \n        var vfov = 2 * Math.atan(Math.tan(config.hfov/360*Math.PI) * canvasHeight / canvasWidth) * 180 / Math.PI;\n        \n        var pitch = ((Math.atan(pos.y / canvasHeight * 2 - 1) - Math.atan(onPointerDownPointerY / canvasHeight * 2 - 1)) * 180 / Math.PI * vfov / 90) + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for mouse up events. Stops panning.\n * @private\n */\n    function onDocumentMouseUp(event) {\n      if (!isUserInteracting) {\n        return;\n      }\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 15) {\n        // Prevents jump when user rapidly moves mouse, stops, and then\n        // releases the mouse button\n        speed.pitch = speed.yaw = 0;\n      }\n      uiContainer.classList.add('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n      latestInteraction = Date.now();\n\n      fireEvent('mouseup', event);\n    }\n\n    /**\n * Event handler for touches. Initializes panning if one touch or zooming if\n * two touches.\n * @private\n * @param {TouchEvent} event - Document touch start event.\n */\n    function onDocumentTouchStart(event) {\n    // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      // Calculate touch position relative to top left of viewer container\n      var pos0 = mousePosition(event.targetTouches[0]);\n\n      onPointerDownPointerX = pos0.x;\n      onPointerDownPointerY = pos0.y;\n    \n      if (event.targetTouches.length == 2) {\n        // Down pointer is the center of the two fingers\n        var pos1 = mousePosition(event.targetTouches[1]);\n        onPointerDownPointerX += (pos1.x - pos0.x) * 0.5;\n        onPointerDownPointerY += (pos1.y - pos0.y) * 0.5;\n        onPointerDownPointerDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                             (pos0.y - pos1.y) * (pos0.y - pos1.y));\n      }\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n\n      fireEvent('touchstart', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for touch movements. Pans center of view if one touch or\n * adjusts zoom if two touches.\n * @private\n * @param {TouchEvent} event - Document touch move event.\n */\n    function onDocumentTouchMove(event) {\n      if (!config.draggable) {\n        return;\n      }\n\n      // Override default action\n      event.preventDefault();\n      if (loaded) {\n        latestInteraction = Date.now();\n      }\n      if (isUserInteracting && loaded) {\n        var pos0 = mousePosition(event.targetTouches[0]);\n        var clientX = pos0.x;\n        var clientY = pos0.y;\n        \n        if (event.targetTouches.length == 2 && onPointerDownPointerDist != -1) {\n          var pos1 = mousePosition(event.targetTouches[1]);\n          clientX += (pos1.x - pos0.x) * 0.5;\n          clientY += (pos1.y - pos0.y) * 0.5;\n          var clientDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                       (pos0.y - pos1.y) * (pos0.y - pos1.y));\n          setHfov(config.hfov + (onPointerDownPointerDist - clientDist) * 0.1);\n          onPointerDownPointerDist = clientDist;\n        }\n\n        // The smaller the config.hfov value (the more zoomed-in the user is), the faster\n        // yaw/pitch are perceived to change on one-finger touchmove (panning) events and vice versa.\n        // To improve usability at both small and large zoom levels (config.hfov values)\n        // we introduce a dynamic pan speed coefficient.\n        //\n        // Currently this seems to *roughly* keep initial drag/pan start position close to\n        // the user's finger while panning regardless of zoom level / config.hfov value.\n        var touchmovePanSpeedCoeff = (config.hfov / 360) * config.touchPanSpeedCoeffFactor;\n\n        var yaw = (onPointerDownPointerX - clientX) * touchmovePanSpeedCoeff + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n\n        var pitch = (clientY - onPointerDownPointerY) * touchmovePanSpeedCoeff + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for end of touches. Stops panning and/or zooming.\n * @private\n */\n    function onDocumentTouchEnd() {\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 150) {\n        speed.pitch = speed.yaw = 0;\n      }\n      onPointerDownPointerDist = -1;\n      latestInteraction = Date.now();\n\n      fireEvent('touchend', event);\n    }\n\n    var pointerIDs = [],\n      pointerCoordinates = [];\n    /**\n * Event handler for touch starts in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer down event.\n */\n    function onDocumentPointerDown(event) {\n      if (event.pointerType == 'touch') {\n        pointerIDs.push(event.pointerId);\n        pointerCoordinates.push({ clientX: event.clientX, clientY: event.clientY });\n        event.targetTouches = pointerCoordinates;\n        onDocumentTouchStart(event);\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for touch moves in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer move event.\n */\n    function onDocumentPointerMove(event) {\n      if (event.pointerType == 'touch') {\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i]) {\n            pointerCoordinates[i].clientX = event.clientX;\n            pointerCoordinates[i].clientY = event.clientY;\n            event.targetTouches = pointerCoordinates;\n            onDocumentTouchMove(event);\n            event.preventDefault();\n            return;\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for touch ends in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer up event.\n */\n    function onDocumentPointerUp(event) {\n      if (event.pointerType == 'touch') {\n        var defined = false;\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i])\n            {pointerIDs[i] = undefined;}\n          if (pointerIDs[i])\n            {defined = true;}\n        }\n        if (!defined) {\n          pointerIDs = [];\n          pointerCoordinates = [];\n          onDocumentTouchEnd();\n        }\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for mouse wheel. Changes zoom.\n * @private\n * @param {WheelEvent} event - Document mouse wheel event.\n */\n    function onDocumentMouseWheel(event) {\n    // Only do something if the panorama is loaded and mouse wheel zoom is enabled\n      if (!loaded || (config.mouseZoom == 'fullscreenonly' && !fullscreenActive)) {\n        return;\n      }\n\n      event.preventDefault();\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      if (event.wheelDeltaY) {\n        // WebKit\n        setHfov(config.hfov - event.wheelDeltaY * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        // Opera / Explorer 9\n        setHfov(config.hfov - event.wheelDelta * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.detail) {\n        // Firefox\n        setHfov(config.hfov + event.detail * 1.5);\n        speed.hfov = event.detail > 0 ? 1 : -1;\n      }\n    \n      animateInit();\n    }\n\n    /**\n * Event handler for key presses. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key press event.\n */\n    function onDocumentKeyPress(event) {\n    // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      stopOrientation();\n      config.roll = 0;\n\n      // Record key pressed\n      var keynumber = event.which || event.keycode;\n\n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // If escape key is pressed\n      if (keynumber == 27) {\n        // If in fullscreen mode\n        if (fullscreenActive) {\n          toggleFullscreen();\n        }\n      } else {\n        // Change key\n        changeKey(keynumber, true);\n      }\n    }\n\n    /**\n * Clears list of currently pressed keys.\n * @private\n */\n    function clearKeys() {\n      for (var i = 0; i < 10; i++) {\n        keysDown[i] = false;\n      }\n    }\n\n    /**\n * Event handler for key releases. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key up event.\n */\n    function onDocumentKeyUp(event) {\n    // Record key pressed\n      var keynumber = event.which || event.keycode;\n    \n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // Change key\n      changeKey(keynumber, false);\n    }\n\n    /**\n * Updates list of currently pressed keys.\n * @private\n * @param {number} keynumber - Key number.\n * @param {boolean} value - Whether or not key is pressed.\n */\n    function changeKey(keynumber, value) {\n      var keyChanged = false;\n      switch (keynumber) {\n        // If minus key is released\n        case 109: case 189: case 17: case 173:\n          if (keysDown[0] != value) { keyChanged = true; }\n          keysDown[0] = value; break;\n        \n        // If plus key is released\n        case 107: case 187: case 16: case 61:\n          if (keysDown[1] != value) { keyChanged = true; }\n          keysDown[1] = value; break;\n        \n        // If up arrow is released\n        case 38:\n          if (keysDown[2] != value) { keyChanged = true; }\n          keysDown[2] = value; break;\n        \n        // If \"w\" is released\n        case 87:\n          if (keysDown[6] != value) { keyChanged = true; }\n          keysDown[6] = value; break;\n        \n        // If down arrow is released\n        case 40:\n          if (keysDown[3] != value) { keyChanged = true; }\n          keysDown[3] = value; break;\n        \n        // If \"s\" is released\n        case 83:\n          if (keysDown[7] != value) { keyChanged = true; }\n          keysDown[7] = value; break;\n        \n        // If left arrow is released\n        case 37:\n          if (keysDown[4] != value) { keyChanged = true; }\n          keysDown[4] = value; break;\n        \n        // If \"a\" is released\n        case 65:\n          if (keysDown[8] != value) { keyChanged = true; }\n          keysDown[8] = value; break;\n        \n        // If right arrow is released\n        case 39:\n          if (keysDown[5] != value) { keyChanged = true; }\n          keysDown[5] = value; break;\n        \n        // If \"d\" is released\n        case 68:\n          if (keysDown[9] != value) { keyChanged = true; }\n          keysDown[9] = value;\n      }\n    \n      if (keyChanged && value) {\n        if (typeof performance !== 'undefined' && performance.now()) {\n          prevTime = performance.now();\n        } else {\n          prevTime = Date.now();\n        }\n        animateInit();\n      }\n    }\n\n    /**\n * Pans and/or zooms panorama based on currently pressed keys. Also handles\n * panorama \"inertia\" and auto rotation.\n * @private\n */\n    function keyRepeat() {\n    // Only do something if the panorama is loaded\n      if (!loaded) {\n        return;\n      }\n\n      var isKeyDown = false;\n\n      var prevPitch = config.pitch;\n      var prevYaw = config.yaw;\n      var prevZoom = config.hfov;\n    \n      var newTime;\n      if (typeof performance !== 'undefined' && performance.now()) {\n        newTime = performance.now();\n      } else {\n        newTime = Date.now();\n      }\n      if (prevTime === undefined) {\n        prevTime = newTime;\n      }\n      var diff = (newTime - prevTime) * config.hfov / 1700;\n      diff = Math.min(diff, 1.0);\n    \n      // If minus key is down\n      if (keysDown[0] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 + 0.5) * diff);\n        isKeyDown = true;\n      }\n    \n      // If plus key is down\n      if (keysDown[1] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 - 0.2) * diff);\n        isKeyDown = true;\n      }\n    \n      // If up arrow or \"w\" is down\n      if (keysDown[2] || keysDown[6]) {\n        // Pan up\n        config.pitch += (speed.pitch * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If down arrow or \"s\" is down\n      if (keysDown[3] || keysDown[7]) {\n        // Pan down\n        config.pitch += (speed.pitch * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If left arrow or \"a\" is down\n      if (keysDown[4] || keysDown[8]) {\n        // Pan left\n        config.yaw += (speed.yaw * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If right arrow or \"d\" is down\n      if (keysDown[5] || keysDown[9]) {\n        // Pan right\n        config.yaw += (speed.yaw * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n\n      if (isKeyDown)\n        {latestInteraction = Date.now();}\n\n      // If auto-rotate\n      var inactivityInterval = Date.now() - latestInteraction;\n      if (config.autoRotate) {\n        // Pan\n        if (newTime - prevTime > 0.001) {\n          var timeDiff = (newTime - prevTime) / 1000;\n          var yawDiff = (speed.yaw / timeDiff * diff - config.autoRotate * 0.2) * timeDiff;\n          yawDiff = (-config.autoRotate > 0 ? 1 : -1) * Math.min(Math.abs(config.autoRotate * timeDiff), Math.abs(yawDiff));\n          config.yaw += yawDiff;\n        }\n        \n        // Deal with stopping auto rotation after a set delay\n        if (config.autoRotateStopDelay) {\n          config.autoRotateStopDelay -= newTime - prevTime;\n          if (config.autoRotateStopDelay <= 0) {\n            config.autoRotateStopDelay = false;\n            autoRotateSpeed = config.autoRotate;\n            config.autoRotate = 0;\n          }\n        }\n      }\n\n      // Animated moves\n      if (animatedMove.pitch) {\n        animateMove('pitch');\n        prevPitch = config.pitch;\n      }\n      if (animatedMove.yaw) {\n        animateMove('yaw');\n        prevYaw = config.yaw;\n      }\n      if (animatedMove.hfov) {\n        animateMove('hfov');\n        prevZoom = config.hfov;\n      }\n\n      // \"Inertia\"\n      if (diff > 0 && !config.autoRotate) {\n        // \"Friction\"\n        var friction = 0.85;\n        \n        // Yaw\n        if (!keysDown[4] && !keysDown[5] && !keysDown[8] && !keysDown[9] && !animatedMove.yaw) {\n          config.yaw += speed.yaw * diff * friction;\n        }\n        // Pitch\n        if (!keysDown[2] && !keysDown[3] && !keysDown[6] && !keysDown[7] && !animatedMove.pitch) {\n          config.pitch += speed.pitch * diff * friction;\n        }\n        // Zoom\n        if (!keysDown[0] && !keysDown[1] && !animatedMove.hfov) {\n          setHfov(config.hfov + speed.hfov * diff * friction);\n        }\n      }\n\n      prevTime = newTime;\n      if (diff > 0) {\n        speed.yaw = speed.yaw * 0.8 + (config.yaw - prevYaw) / diff * 0.2;\n        speed.pitch = speed.pitch * 0.8 + (config.pitch - prevPitch) / diff * 0.2;\n        speed.hfov = speed.hfov * 0.8 + (config.hfov - prevZoom) / diff * 0.2;\n        \n        // Limit speed\n        var maxSpeed = config.autoRotate ? Math.abs(config.autoRotate) : 5;\n        speed.yaw = Math.min(maxSpeed, Math.max(speed.yaw, -maxSpeed));\n        speed.pitch = Math.min(maxSpeed, Math.max(speed.pitch, -maxSpeed));\n        speed.hfov = Math.min(maxSpeed, Math.max(speed.hfov, -maxSpeed));\n      }\n    \n      // Stop movement if opposite controls are pressed\n      if (keysDown[0] && keysDown[1]) {\n        speed.hfov = 0;\n      }\n      if ((keysDown[2] || keysDown[6]) && (keysDown[3] || keysDown[7])) {\n        speed.pitch = 0;\n      }\n      if ((keysDown[4] || keysDown[8]) && (keysDown[5] || keysDown[9])) {\n        speed.yaw = 0;\n      }\n    }\n\n    /**\n * Animates moves.\n * @param {string} axis - Axis to animate\n * @private\n */\n    function animateMove(axis) {\n      var t = animatedMove[axis];\n      var normTime = Math.min(1, Math.max((Date.now() - t.startTime) / 1000 / (t.duration / 1000), 0));\n      var result = t.startPosition + config.animationTimingFunction(normTime) * (t.endPosition - t.startPosition);\n      if ((t.endPosition > t.startPosition && result >= t.endPosition) ||\n        (t.endPosition < t.startPosition && result <= t.endPosition) ||\n        t.endPosition === t.startPosition) {\n        result = t.endPosition;\n        speed[axis] = 0;\n        var callback = animatedMove[axis].callback,\n          callbackArgs = animatedMove[axis].callbackArgs;\n        delete animatedMove[axis];\n        if (typeof callback === 'function')\n          {callback(callbackArgs);}\n      }\n      config[axis] = result;\n    }\n\n    /**\n * @param {number} t - Normalized time in animation\n * @return {number} Position in animation\n * @private\n */\n    function timingFunction(t) {\n    // easeInOutQuad from https://gist.github.com/gre/1650294\n      return t < 0.5 ? 2*t*t : -1+(4-2*t)*t;\n    }\n\n    /**\n * Event handler for document resizes. Updates viewer size and rerenders view.\n * @private\n */\n    function onDocumentResize() {\n    // Resize panorama renderer (moved to onFullScreenChange)\n    //renderer.resize();\n    //animateInit();\n\n    // Kludge to deal with WebKit regression: https://bugs.webkit.org/show_bug.cgi?id=93525\n      onFullScreenChange();\n    }\n\n    /**\n * Initializes animation.\n * @private\n */\n    function animateInit() {\n      if (animating) {\n        return;\n      }\n      animating = true;\n      animate();\n    }\n\n    /**\n * Animates view, using requestAnimationFrame to trigger rendering.\n * @private\n */\n    function animate() {\n      render();\n      if (autoRotateStart)\n        {clearTimeout(autoRotateStart);}\n      if (isUserInteracting || orientation === true) {\n        requestAnimationFrame(animate);\n      } else if (keysDown[0] || keysDown[1] || keysDown[2] || keysDown[3] ||\n        keysDown[4] || keysDown[5] || keysDown[6] || keysDown[7] ||\n        keysDown[8] || keysDown[9] || config.autoRotate ||\n        animatedMove.pitch || animatedMove.yaw || animatedMove.hfov ||\n        Math.abs(speed.yaw) > 0.01 || Math.abs(speed.pitch) > 0.01 ||\n        Math.abs(speed.hfov) > 0.01) {\n\n        keyRepeat();\n        if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed &&\n            Date.now() - latestInteraction > config.autoRotateInactivityDelay &&\n            !config.autoRotate) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n        }\n        requestAnimationFrame(animate);\n      } else if (renderer && (renderer.isLoading() || (config.dynamic === true && update))) {\n        requestAnimationFrame(animate);\n      } else {\n        animating = false;\n        prevTime = undefined;\n        var autoRotateStartTime = config.autoRotateInactivityDelay -\n            (Date.now() - latestInteraction);\n        if (autoRotateStartTime > 0) {\n          autoRotateStart = setTimeout(function() {\n            config.autoRotate = autoRotateSpeed;\n            _this.lookAt(origPitch, undefined, origHfov, 3000);\n            animateInit();\n          }, autoRotateStartTime);\n        } else if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n          animateInit();\n        }\n      }\n    }\n\n    /**\n * Renders panorama view.\n * @private\n */\n    function render() {\n      var tmpyaw;\n\n      if (loaded) {\n        if (config.yaw > 180) {\n          config.yaw -= 360;\n        } else if (config.yaw < -180) {\n          config.yaw += 360;\n        }\n\n        // Keep a tmp value of yaw for autoRotate comparison later\n        tmpyaw = config.yaw;\n\n        // Optionally avoid showing background (empty space) on left or right by adapting min/max yaw\n        var hoffcut = 0,\n          voffcut = 0;\n        if (config.avoidShowingBackground) {\n          var canvas = renderer.getCanvas(),\n            hfov2 = config.hfov / 2,\n            vfov2 = Math.atan2(Math.tan(hfov2 / 180 * Math.PI), (canvas.width / canvas.height)) * 180 / Math.PI,\n            transposed = config.vaov > config.haov;\n          if (transposed) {\n            voffcut = vfov2 * (1 - Math.min(Math.cos((config.pitch - hfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + hfov2) / 180 * Math.PI)));\n          } else {\n            hoffcut = hfov2 * (1 - Math.min(Math.cos((config.pitch - vfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + vfov2) / 180 * Math.PI)));\n          }\n        }\n\n        // Ensure the yaw is within min and max allowed\n        var yawRange = config.maxYaw - config.minYaw,\n          minYaw = -180,\n          maxYaw = 180;\n        if (yawRange < 360) {\n          minYaw = config.minYaw + config.hfov / 2 + hoffcut;\n          maxYaw = config.maxYaw - config.hfov / 2 - hoffcut;\n          if (yawRange < config.hfov) {\n            // Lock yaw to average of min and max yaw when both can be seen at once\n            minYaw = maxYaw = (minYaw + maxYaw) / 2;\n          }\n          config.yaw = Math.max(minYaw, Math.min(maxYaw, config.yaw));\n        }\n        \n        // Check if we autoRotate in a limited by min and max yaw\n        // If so reverse direction\n        if (config.autoRotate !== false && tmpyaw != config.yaw &&\n            prevTime !== undefined) { // this condition prevents changing the direction initially\n          config.autoRotate *= -1;\n        }\n\n        // Ensure the calculated pitch is within min and max allowed\n        var canvas = renderer.getCanvas();\n        var vfov = 2 * Math.atan(Math.tan(config.hfov / 180 * Math.PI * 0.5) /\n            (canvas.width / canvas.height)) / Math.PI * 180;\n        var minPitch = config.minPitch + vfov / 2,\n          maxPitch = config.maxPitch - vfov / 2;\n        var pitchRange = config.maxPitch - config.minPitch;\n        if (pitchRange < vfov) {\n          // Lock pitch to average of min and max pitch when both can be seen at once\n          minPitch = maxPitch = (minPitch + maxPitch) / 2;\n        }\n        if (isNaN(minPitch))\n          {minPitch = -90;}\n        if (isNaN(maxPitch))\n          {maxPitch = 90;}\n        config.pitch = Math.max(minPitch, Math.min(maxPitch, config.pitch));\n        \n        renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { roll: config.roll * Math.PI / 180 });\n        \n        renderHotSpots();\n        \n        // Update compass\n        if (config.compass) {\n          compass.style.transform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n          compass.style.webkitTransform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n        }\n        \n        if (config.onRender) {\n          config.onRender();\n        }\n      }\n    }\n\n    /**\n * Creates a new quaternion.\n * @private\n * @constructor\n * @param {Number} w - W value\n * @param {Number} x - X value\n * @param {Number} y - Y value\n * @param {Number} z - Z value\n */\n    function Quaternion(w, x, y, z) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    }\n\n    /**\n * Multiplies quaternions.\n * @private\n * @param {Quaternion} q - Quaternion to multiply\n * @returns {Quaternion} Result of multiplication\n */\n    Quaternion.prototype.multiply = function(q) {\n      return new Quaternion(this.w*q.w - this.x*q.x - this.y*q.y - this.z*q.z,\n        this.x*q.w + this.w*q.x + this.y*q.z - this.z*q.y,\n        this.y*q.w + this.w*q.y + this.z*q.x - this.x*q.z,\n        this.z*q.w + this.w*q.z + this.x*q.y - this.y*q.x);\n    };\n\n    /**\n * Converts quaternion to Euler angles.\n * @private\n * @returns {Number[]} [phi angle, theta angle, psi angle]\n */\n    Quaternion.prototype.toEulerAngles = function() {\n      var phi = Math.atan2(2 * (this.w * this.x + this.y * this.z),\n          1 - 2 * (this.x * this.x + this.y * this.y)),\n        theta = Math.asin(2 * (this.w * this.y - this.z * this.x)),\n        psi = Math.atan2(2 * (this.w * this.z + this.x * this.y),\n          1 - 2 * (this.y * this.y + this.z * this.z));\n      return [phi, theta, psi];\n    };\n\n    /**\n * Converts device orientation API Tait-Bryan angles to a quaternion.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function taitBryanToQuaternion(alpha, beta, gamma) {\n      var r = [beta ? beta * Math.PI / 180 / 2 : 0,\n        gamma ? gamma * Math.PI / 180 / 2 : 0,\n        alpha ? alpha * Math.PI / 180 / 2 : 0];\n      var c = [Math.cos(r[0]), Math.cos(r[1]), Math.cos(r[2])],\n        s = [Math.sin(r[0]), Math.sin(r[1]), Math.sin(r[2])];\n\n      return new Quaternion(c[0]*c[1]*c[2] - s[0]*s[1]*s[2],\n        s[0]*c[1]*c[2] - c[0]*s[1]*s[2],\n        c[0]*s[1]*c[2] + s[0]*c[1]*s[2],\n        c[0]*c[1]*s[2] + s[0]*s[1]*c[2]);\n    }\n\n    /**\n * Computes current device orientation quaternion from device orientation API\n * Tait-Bryan angles.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function computeQuaternion(alpha, beta, gamma) {\n    // Convert Tait-Bryan angles to quaternion\n      var quaternion = taitBryanToQuaternion(alpha, beta, gamma);\n      // Apply world transform\n      quaternion = quaternion.multiply(new Quaternion(Math.sqrt(0.5), -Math.sqrt(0.5), 0, 0));\n      // Apply screen transform\n      var angle = window.orientation ? -window.orientation * Math.PI / 180 / 2 : 0;\n      return quaternion.multiply(new Quaternion(Math.cos(angle), 0, -Math.sin(angle), 0));\n    }\n\n    /**\n * Event handler for device orientation API. Controls pointing.\n * @private\n * @param {DeviceOrientationEvent} event - Device orientation event.\n */\n    function orientationListener(e) {\n      var q = computeQuaternion(e.alpha, e.beta, e.gamma).toEulerAngles();\n      if (typeof(orientation) === 'number' && orientation < 10) {\n        // This kludge is necessary because iOS sometimes provides a few stale\n        // device orientation events when the listener is removed and then\n        // readded. Thus, we skip the first 10 events to prevent this from\n        // causing problems.\n        orientation += 1;\n      } else if (orientation === 10) {\n        // Record starting yaw to prevent jumping\n        orientationYawOffset = q[2] / Math.PI * 180 + config.yaw;\n        orientation = true;\n        requestAnimationFrame(animate);\n      } else {\n        config.pitch = q[0] / Math.PI * 180;\n        config.roll = -q[1] / Math.PI * 180;\n        config.yaw = -q[2] / Math.PI * 180 + orientationYawOffset;\n      }\n    }\n\n    /**\n * Initializes renderer.\n * @private\n */\n    function renderInit() {\n      try {\n        var params = {};\n        if (config.horizonPitch !== undefined)\n          {params.horizonPitch = config.horizonPitch * Math.PI / 180;}\n        if (config.horizonRoll !== undefined)\n          {params.horizonRoll = config.horizonRoll * Math.PI / 180;}\n        if (config.backgroundColor !== undefined)\n          {params.backgroundColor = config.backgroundColor;}\n        renderer.init(panoImage, config.type, config.dynamic, config.haov * Math.PI / 180, config.vaov * Math.PI / 180, config.vOffset * Math.PI / 180, renderInitCallback, params);\n        if (config.dynamic !== true) {\n          // Allow image to be garbage collected\n          panoImage = undefined;\n        }\n      } catch (event) {\n        // Panorama not loaded\n        \n        // Display error if there is a bad texture\n        if (event.type == 'webgl error' || event.type == 'no webgl') {\n          anError();\n        } else if (event.type == 'webgl size error') {\n          anError(config.strings.textureSizeError.replace('%s', event.width).replace('%s', event.maxWidth));\n        } else {\n          anError(config.strings.unknownError);\n          throw event;\n        }\n      }\n    }\n\n    /**\n * Triggered when render initialization finishes. Handles fading between\n * scenes as well as showing the compass and hotspots and hiding the loading\n * display.\n * @private\n */\n    function renderInitCallback() {\n    // Fade if specified\n      if (config.sceneFadeDuration && renderer.fadeImg !== undefined) {\n        renderer.fadeImg.style.opacity = 0;\n        // Remove image\n        var fadeImg = renderer.fadeImg;\n        delete renderer.fadeImg;\n        setTimeout(function() {\n          renderContainer.removeChild(fadeImg);\n          fireEvent('scenechangefadedone');\n        }, config.sceneFadeDuration);\n      }\n    \n      // Show compass if applicable\n      if (config.compass) {\n        compass.style.display = 'inline';\n      } else {\n        compass.style.display = 'none';\n      }\n    \n      // Show hotspots\n      createHotSpots();\n    \n      // Hide loading display\n      infoDisplay.load.box.style.display = 'none';\n      if (preview !== undefined) {\n        renderContainer.removeChild(preview);\n        preview = undefined;\n      }\n      loaded = true;\n\n      fireEvent('load');\n    \n      animateInit();\n    }\n\n    /**\n * Creates hot spot element for the current scene.\n * @private\n * @param {Object} hs - The configuration for the hotspot\n */\n    function createHotSpot(hs) {\n    // Make sure hot spot pitch and yaw are numbers\n      hs.pitch = Number(hs.pitch) || 0;\n      hs.yaw = Number(hs.yaw) || 0;\n\n      var div = document.createElement('div');\n      div.className = 'pnlm-hotspot-base';\n      if (hs.cssClass)\n        {div.className += ' ' + hs.cssClass;}\n      else\n        {div.className += ' pnlm-hotspot pnlm-sprite pnlm-' + escapeHTML(hs.type);}\n\n      var span = document.createElement('span');\n      if (hs.text)\n        {span.innerHTML = escapeHTML(hs.text);}\n\n      var a;\n      if (hs.video) {\n        var video = document.createElement('video'),\n          p = hs.video;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        video.src = sanitizeURL(p);\n        video.controls = true;\n        video.style.width = hs.width + 'px';\n        renderContainer.appendChild(div);\n        span.appendChild(video);\n      } else if (hs.image) {\n        var p = hs.image;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL ? hs.URL : p);\n        a.target = '_blank';\n        span.appendChild(a);\n        var image = document.createElement('img');\n        image.src = sanitizeURL(p);\n        image.style.width = hs.width + 'px';\n        image.style.paddingTop = '5px';\n        renderContainer.appendChild(div);\n        a.appendChild(image);\n        span.style.maxWidth = 'initial';\n      } else if (hs.URL) {\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL);\n        a.target = '_blank';\n        renderContainer.appendChild(a);\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n        a.appendChild(div);\n      } else {\n        if (hs.sceneId) {\n          div.onclick = div.ontouchend = function() {\n            if (!div.clicked) {\n              div.clicked = true;\n              loadScene(hs.sceneId, hs.targetPitch, hs.targetYaw, hs.targetHfov);\n            }\n            return false;\n          };\n          div.className += ' pnlm-pointer';\n          span.className += ' pnlm-pointer';\n        }\n        renderContainer.appendChild(div);\n      }\n\n      if (hs.createTooltipFunc) {\n        hs.createTooltipFunc(div, hs.createTooltipArgs);\n      } else if (hs.text || hs.video || hs.image) {\n        div.classList.add('pnlm-tooltip');\n        div.appendChild(span);\n        span.style.width = span.scrollWidth - 20 + 'px';\n        span.style.marginLeft = -(span.scrollWidth - div.offsetWidth) / 2 + 'px';\n        span.style.marginTop = -span.scrollHeight - 12 + 'px';\n      }\n      if (hs.clickHandlerFunc) {\n        div.addEventListener('click', function(e) {\n          hs.clickHandlerFunc(e, hs.clickHandlerArgs);\n        }, 'false');\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n      }\n      hs.div = div;\n    };\n\n    /**\n * Creates hot spot elements for the current scene.\n * @private\n */\n    function createHotSpots() {\n      if (hotspotsCreated) {return;}\n\n      if (!config.hotSpots) {\n        config.hotSpots = [];\n      } else {\n        // Sort by pitch so tooltip is never obscured by another hot spot\n        config.hotSpots = config.hotSpots.sort(function(a, b) {\n          return a.pitch < b.pitch;\n        });\n        config.hotSpots.forEach(createHotSpot);\n      }\n      hotspotsCreated = true;\n      renderHotSpots();\n    }\n\n    /**\n * Destroys currently created hot spot elements.\n * @private\n */\n    function destroyHotSpots() {\n      var hs = config.hotSpots;\n      hotspotsCreated = false;\n      delete config.hotSpots;\n      if (hs) {\n        for (var i = 0; i < hs.length; i++) {\n          var current = hs[i].div;\n          while (current.parentNode != renderContainer) {\n            current = current.parentNode;\n          }\n          renderContainer.removeChild(current);\n          delete hs[i].div;\n        }\n      }\n    }\n\n    /**\n * Renders hot spot, updating its position and visibility.\n * @private\n */\n    function renderHotSpot(hs) {\n      var hsPitchSin = Math.sin(hs.pitch * Math.PI / 180),\n        hsPitchCos = Math.cos(hs.pitch * Math.PI / 180),\n        configPitchSin = Math.sin(config.pitch * Math.PI / 180),\n        configPitchCos = Math.cos(config.pitch * Math.PI / 180),\n        yawCos = Math.cos((-hs.yaw + config.yaw) * Math.PI / 180);\n      var z = hsPitchSin * configPitchSin + hsPitchCos * yawCos * configPitchCos;\n      if ((hs.yaw <= 90 && hs.yaw > -90 && z <= 0) ||\n      ((hs.yaw > 90 || hs.yaw <= -90) && z <= 0)) {\n        hs.div.style.visibility = 'hidden';\n      } else {\n        var yawSin = Math.sin((-hs.yaw + config.yaw) * Math.PI / 180),\n          hfovTan = Math.tan(config.hfov * Math.PI / 360);\n        hs.div.style.visibility = 'visible';\n        // Subpixel rendering doesn't work in Firefox\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=739176\n        var canvas = renderer.getCanvas(),\n          canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var coord = [-canvasWidth / hfovTan * yawSin * hsPitchCos / z / 2,\n          -canvasWidth / hfovTan * (hsPitchSin * configPitchCos -\n            hsPitchCos * yawCos * configPitchSin) / z / 2];\n        // Apply roll\n        var rollSin = Math.sin(config.roll * Math.PI / 180),\n          rollCos = Math.cos(config.roll * Math.PI / 180);\n        coord = [coord[0] * rollCos - coord[1] * rollSin,\n          coord[0] * rollSin + coord[1] * rollCos];\n        // Apply transform\n        coord[0] += (canvasWidth - hs.div.offsetWidth) / 2;\n        coord[1] += (canvasHeight - hs.div.offsetHeight) / 2;\n        var transform = 'translate(' + coord[0] + 'px, ' + coord[1] +\n            'px) translateZ(9999px) rotate(' + config.roll + 'deg)';\n        hs.div.style.webkitTransform = transform;\n        hs.div.style.MozTransform = transform;\n        hs.div.style.transform = transform;\n      }\n    }\n\n    /**\n * Renders hot spots, updating their positions and visibility.\n * @private\n */\n    function renderHotSpots() {\n      config.hotSpots.forEach(renderHotSpot);\n    }\n\n    /**\n * Merges a scene configuration into the current configuration.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n */\n    function mergeConfig(sceneId) {\n      config = {};\n      var k, s;\n      var photoSphereExcludes = ['haov', 'vaov', 'vOffset', 'northOffset', 'horizonPitch', 'horizonRoll'];\n      specifiedPhotoSphereExcludes = [];\n    \n      // Merge default config\n      for (k in defaultConfig) {\n        if (defaultConfig.hasOwnProperty(k)) {\n          config[k] = defaultConfig[k];\n        }\n      }\n    \n      // Merge default scene config\n      for (k in initialConfig.default) {\n        if (initialConfig.default.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.default.strings) {\n              if (initialConfig.default.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.default.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig.default[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    \n      // Merge current scene config\n      if ((sceneId !== null) && (sceneId !== '') && (initialConfig.scenes) && (initialConfig.scenes[sceneId])) {\n        var scene = initialConfig.scenes[sceneId];\n        for (k in scene) {\n          if (scene.hasOwnProperty(k)) {\n            if (k == 'strings') {\n              for (s in scene.strings) {\n                if (scene.strings.hasOwnProperty(s)) {\n                  config.strings[s] = escapeHTML(scene.strings[s]);\n                }\n              }\n            } else {\n              config[k] = scene[k];\n              if (photoSphereExcludes.indexOf(k) >= 0) {\n                specifiedPhotoSphereExcludes.push(k);\n              }\n            }\n          }\n        }\n        config.scene = sceneId;\n      }\n    \n      // Merge initial config\n      for (k in initialConfig) {\n        if (initialConfig.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.strings) {\n              if (initialConfig.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n * Processes configuration options.\n * @param {boolean} [isPreview] - Whether or not the preview is being displayed\n * @private\n */\n    function processOptions(isPreview) {\n      isPreview = isPreview ? isPreview : false;\n\n      // Process preview first so it always loads before the browser hits its\n      // maximum number of connections to a server as can happen with cubic\n      // panoramas\n      if (isPreview && 'preview' in config) {\n        var p = config.preview;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        preview = document.createElement('div');\n        preview.className = 'pnlm-preview-img';\n        preview.style.backgroundImage = \"url('\" + sanitizeURLForCss(p) + \"')\";\n        renderContainer.appendChild(preview);\n      }\n\n      // Handle different preview values\n      var title = config.title,\n        author = config.author;\n      if (isPreview) {\n        if ('previewTitle' in config)\n          {config.title = config.previewTitle;}\n        if ('previewAuthor' in config)\n          {config.author = config.previewAuthor;}\n      }\n\n      // Reset title / author display\n      if (!config.hasOwnProperty('title'))\n        {infoDisplay.title.innerHTML = '';}\n      if (!config.hasOwnProperty('author'))\n        {infoDisplay.author.innerHTML = '';}\n      if (!config.hasOwnProperty('title') && !config.hasOwnProperty('author'))\n        {infoDisplay.container.style.display = 'none';}\n\n      // Fill in load button label and loading box text\n      controls.load.innerHTML = '<p>' + config.strings.loadButtonLabel + '</p>';\n      infoDisplay.load.boxp.innerHTML = config.strings.loadingLabel;\n\n      // Process other options\n      for (var key in config) {\n        if (config.hasOwnProperty(key)) {\n          switch (key) {\n            case 'title':\n              infoDisplay.title.innerHTML = escapeHTML(config[key]);\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'author':\n              infoDisplay.author.innerHTML = config.strings.bylineLabel.replace('%s', escapeHTML(config[key]));\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'fallback':\n              var link = document.createElement('a');\n              link.href = sanitizeURL(config[key]);\n              link.target = '_blank';\n              link.textContent = 'Click here to view this panorama in an alternative viewer.';\n              var message = document.createElement('p');\n              message.textContent = 'Your browser does not support WebGL.';\n              message.appendChild(document.createElement('br'));\n              message.appendChild(link);\n              infoDisplay.errorMsg.innerHTML = ''; // Removes all children nodes\n              infoDisplay.errorMsg.appendChild(message);\n              break;\n            \n            case 'hfov':\n              setHfov(Number(config[key]));\n              break;\n            \n            case 'autoLoad':\n              if (config[key] === true && renderer === undefined) {\n                // Show loading box\n                infoDisplay.load.box.style.display = 'inline';\n                // Hide load button\n                controls.load.style.display = 'none';\n                // Initialize\n                init();\n              }\n              break;\n            \n            case 'showZoomCtrl':\n              if (config[key] && config.showControls != false) {\n                // Show zoom controls\n                controls.zoom.style.display = 'block';\n              } else {\n                // Hide zoom controls\n                controls.zoom.style.display = 'none';\n              }\n              break;\n\n            case 'showFullscreenCtrl':\n              if (config[key] && config.showControls != false && ('fullscreen' in document || 'mozFullScreen' in document ||\n                    'webkitIsFullScreen' in document || 'msFullscreenElement' in document)) {\n                    \n                // Show fullscreen control\n                controls.fullscreen.style.display = 'block';\n              } else {\n                // Hide fullscreen control\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'hotSpotDebug':\n              if (config[key])\n                {hotSpotDebugIndicator.style.display = 'block';}\n              else\n                {hotSpotDebugIndicator.style.display = 'none';}\n              break;\n\n            case 'showControls':\n              if (!config[key]) {\n                controls.orientation.style.display = 'none';\n                controls.zoom.style.display = 'none';\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'orientationOnByDefault':\n              if (config[key]) {\n                if (orientationSupport === undefined)\n                  {startOrientationIfSupported = true;}\n                else if (orientationSupport === true)\n                  {startOrientation();}\n              }\n              break;\n          }\n        }\n      }\n\n      if (isPreview) {\n        // Restore original values if changed for preview\n        if (title)\n          {config.title = title;}\n        else\n          {delete config.title;}\n        if (author)\n          {config.author = author;}\n        else\n          {delete config.author;}\n      }\n    }\n\n    /**\n * Toggles fullscreen mode.\n * @private\n */\n    function toggleFullscreen() {\n      if (loaded && !error) {\n        if (!fullscreenActive) {\n          try {\n            if (container.requestFullscreen) {\n              container.requestFullscreen();\n            } else if (container.mozRequestFullScreen) {\n              container.mozRequestFullScreen();\n            } else if (container.msRequestFullscreen) {\n              container.msRequestFullscreen();\n            } else {\n              container.webkitRequestFullScreen();\n            }\n          } catch (event) {\n            // Fullscreen doesn't work\n          }\n        } else {\n          if (document.exitFullscreen) {\n            document.exitFullscreen();\n          } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n          } else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n          } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for fullscreen changes.\n * @private\n */\n    function onFullScreenChange() {\n      let isFullScreen = (window.innerWidth == screen.width && window.innerHeight == screen.height);\n      if (document.fullscreen || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement || isFullScreen) {\n        controls.fullscreen.classList.add('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = true;\n      } else {\n        controls.fullscreen.classList.remove('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = false;\n      }\n\n      // Resize renderer (deal with browser quirks and fixes #155)\n      renderer.resize();\n      setHfov(config.hfov);\n      animateInit();\n    }\n\n    /**\n * Increases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomIn() {\n      if (loaded) {\n        setHfov(config.hfov - 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Decreases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomOut() {\n      if (loaded) {\n        setHfov(config.hfov + 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Clamps horzontal field of view to viewer's limits.\n * @private\n * @param {number} hfov - Input horizontal field of view (in degrees)\n * @return {number} - Clamped horizontal field of view (in degrees)\n */\n    function constrainHfov(hfov) {\n    // Keep field of view within bounds\n      var minHfov = config.minHfov;\n      if (config.type == 'multires' && renderer) {\n        minHfov = Math.min(minHfov, renderer.getCanvas().width / (config.multiRes.cubeResolution / 90 * 0.9));\n      }\n      if (minHfov > config.maxHfov) {\n        // Don't change view if bounds don't make sense\n        console.log('HFOV bounds do not make sense (minHfov > maxHfov).');\n        return config.hfov;\n      }\n      var newHfov = config.hfov;\n      if (hfov < minHfov) {\n        newHfov = minHfov;\n      } else if (hfov > config.maxHfov) {\n        newHfov = config.maxHfov;\n      } else {\n        newHfov = hfov;\n      }\n      // Optionally avoid showing background (empty space) on top or bottom by adapting newHfov\n      if (config.avoidShowingBackground && renderer) {\n        var canvas = renderer.getCanvas();\n        newHfov = Math.min(newHfov,\n          Math.atan(Math.tan((config.maxPitch - config.minPitch) / 360 * Math.PI) /\n                                     canvas.height * canvas.width)\n                               * 360 / Math.PI);\n      }\n      return newHfov;\n    }\n\n    /**\n * Sets viewer's horizontal field of view.\n * @private\n * @param {number} hfov - Desired horizontal field of view in degrees.\n */\n    function setHfov(hfov) {\n      config.hfov = constrainHfov(hfov);\n    }\n\n    /**\n * Stops auto rotation and animated moves.\n * @private\n */\n    function stopAnimation() {\n      animatedMove = {};\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n    }\n\n    /**\n * Loads panorama.\n * @private\n */\n    function load() {\n    // Since WebGL error handling is very general, first we clear any error box\n    // since it is a new scene and the error from previous maybe because of lacking\n    // memory etc and not because of a lack of WebGL support etc\n      clearError();\n      loaded = false;\n\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'inline';\n      init();\n    }\n\n    /**\n * Loads scene.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n * @param {number} targetPitch - Pitch viewer should be centered on once scene loads.\n * @param {number} targetYaw - Yaw viewer should be centered on once scene loads.\n * @param {number} targetHfov - HFOV viewer should use once scene loads.\n * @param {boolean} [fadeDone] - If `true`, fade setup is skipped.\n */\n    function loadScene(sceneId, targetPitch, targetYaw, targetHfov, fadeDone) {\n      loaded = false;\n      animatedMove = {};\n    \n      // Set up fade if specified\n      var fadeImg, workingPitch, workingYaw, workingHfov;\n      if (config.sceneFadeDuration && !fadeDone) {\n        var data = renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { returnImage: true });\n        if (data !== undefined) {\n          fadeImg = new Image();\n          fadeImg.className = 'pnlm-fade-img';\n          fadeImg.style.transition = 'opacity ' + (config.sceneFadeDuration / 1000) + 's';\n          fadeImg.style.width = '100%';\n          fadeImg.style.height = '100%';\n          fadeImg.onload = function() {\n            loadScene(sceneId, targetPitch, targetYaw, targetHfov, true);\n          };\n          fadeImg.src = data;\n          renderContainer.appendChild(fadeImg);\n          renderer.fadeImg = fadeImg;\n          return;\n        }\n      }\n    \n      // Set new pointing\n      if (targetPitch === 'same') {\n        workingPitch = config.pitch;\n      } else {\n        workingPitch = targetPitch;\n      }\n      if (targetYaw === 'same') {\n        workingYaw = config.yaw;\n      } else if (targetYaw === 'sameAzimuth') {\n        workingYaw = config.yaw + (config.northOffset || 0) - (initialConfig.scenes[sceneId].northOffset || 0);\n      } else {\n        workingYaw = targetYaw;\n      }\n      if (targetHfov === 'same') {\n        workingHfov = config.hfov;\n      } else {\n        workingHfov = targetHfov;\n      }\n    \n      // Destroy hot spots from previous scene\n      destroyHotSpots();\n    \n      // Create the new config for the scene\n      mergeConfig(sceneId);\n\n      // Stop motion\n      speed.yaw = speed.pitch = speed.hfov = 0;\n\n      // Reload scene\n      processOptions();\n      if (workingPitch !== undefined) {\n        config.pitch = workingPitch;\n      }\n      if (workingYaw !== undefined) {\n        config.yaw = workingYaw;\n      }\n      if (workingHfov !== undefined) {\n        config.hfov = workingHfov;\n      }\n      fireEvent('scenechange', sceneId);\n      load();\n    }\n\n    /**\n * Stop using device orientation.\n * @private\n */\n    function stopOrientation() {\n      window.removeEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.remove('pnlm-orientation-button-active');\n      orientation = false;\n    }\n\n    /**\n * Start using device orientation.\n * @private\n */\n    function startOrientation() {\n      orientation = 1;\n      window.addEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.add('pnlm-orientation-button-active');\n    }\n\n    /**\n * Escapes HTML string (to mitigate possible DOM XSS attacks).\n * @private\n * @param {string} s - String to escape\n * @returns {string} Escaped string\n */\n    function escapeHTML(s) {\n      if (!initialConfig.escapeHTML)\n        {return String(s).split('\\n').join('<br>');}\n      return String(s).split(/&/g).join('&amp;')\n        .split('\"').join('&quot;')\n        .split(\"'\").join('&#39;')\n        .split('<').join('&lt;')\n        .split('>').join('&gt;')\n        .split('/').join('&#x2f;')\n        .split('\\n').join('<br>');  // Allow line breaks\n    }\n\n    /**\n * Removes possibility of XSS attacks with URLs.\n * The URL cannot be of protocol 'javascript'.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURL(url) {\n      if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\n        return 'about:blank';\n      }\n      return url;\n    }\n\n    /**\n * Removes possibility of XSS atacks with URLs for CSS.\n * The URL will be sanitized with `sanitizeURL()` and single quotes\n * and double quotes escaped.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURLForCss(url) {\n      return sanitizeURL(url)\n        .replace(/\"/g, '%22')\n        .replace(/'/g, '%27');\n    }\n\n    /**\n * Checks whether or not a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} `true` if a panorama is loaded, else `false`\n */\n    this.isLoaded = function() {\n      return Boolean(loaded);\n    };\n\n    /**\n * Returns the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Pitch in degrees\n */\n    this.getPitch = function() {\n      return config.pitch;\n    };\n\n    /**\n * Sets the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Pitch in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setPitch = function(pitch, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.pitch = {\n          'startTime': Date.now(),\n          'startPosition': config.pitch,\n          'endPosition': pitch,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.pitch = pitch;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum pitch, maximum pitch]\n */\n    this.getPitchBounds = function() {\n      return [config.minPitch, config.maxPitch];\n    };\n\n    /**\n * Set the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum pitch, maximum pitch]\n * @returns {Viewer} `this`\n */\n    this.setPitchBounds = function(bounds) {\n      config.minPitch = Math.max(-90, Math.min(bounds[0], 90));\n      config.maxPitch = Math.max(-90, Math.min(bounds[1], 90));\n      return this;\n    };\n\n    /**\n * Returns the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Yaw in degrees\n */\n    this.getYaw = function() {\n      return config.yaw;\n    };\n\n    /**\n * Sets the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} yaw - Yaw in degrees [-180, 180]\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setYaw = function(yaw, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      yaw = ((yaw + 180) % 360) - 180; // Keep in bounds\n      if (animated) {\n        // Animate in shortest direction\n        if (config.yaw - yaw > 180)\n          {yaw += 360}\n        else if (yaw - config.yaw > 180)\n          {yaw -= 360}\n\n        animatedMove.yaw = {\n          'startTime': Date.now(),\n          'startPosition': config.yaw,\n          'endPosition': yaw,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.yaw = yaw;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [yaw pitch, maximum yaw]\n */\n    this.getYawBounds = function() {\n      return [config.minYaw, config.maxYaw];\n    };\n\n    /**\n * Set the minimum and maximum allowed yaws (in degrees [-180, 180]).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum yaw, maximum yaw]\n * @returns {Viewer} `this`\n */\n    this.setYawBounds = function(bounds) {\n      config.minYaw = Math.max(-180, Math.min(bounds[0], 180));\n      config.maxYaw = Math.max(-180, Math.min(bounds[1], 180));\n      return this;\n    };\n\n    /**\n * Returns the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizontal field of view in degrees\n */\n    this.getHfov = function() {\n      return config.hfov;\n    };\n\n    /**\n * Sets the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @param {number} hfov - Horizontal field of view in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setHfov = function(hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.hfov = {\n          'startTime': Date.now(),\n          'startPosition': config.hfov,\n          'endPosition': constrainHfov(hfov),\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        setHfov(hfov);\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed horizontal fields of view\n * (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum hfov, maximum hfov]\n */\n    this.getHfovBounds = function() {\n      return [config.minHfov, config.maxHfov];\n    };\n\n    /**\n * Set the minimum and maximum allowed horizontal fields of view (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum hfov, maximum hfov]\n * @returns {Viewer} `this`\n */\n    this.setHfovBounds = function(bounds) {\n      config.minHfov = Math.max(0, bounds[0]);\n      config.maxHfov = Math.max(0, bounds[1]);\n      return this;\n    };\n\n    /**\n * Set a new view. Any parameters not specified remain the same.\n * @memberof Viewer\n * @instance\n * @param {number} [pitch] - Target pitch\n * @param {number} [yaw] - Target yaw\n * @param {number} [hfov] - Target hfov\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.lookAt = function(pitch, yaw, hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (pitch !== undefined) {\n        this.setPitch(pitch, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (yaw !== undefined) {\n        this.setYaw(yaw, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (hfov !== undefined)\n        {this.setHfov(hfov, animated, callback, callbackArgs);}\n      return this;\n    };\n\n    /**\n * Returns the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @returns {number} North offset in degrees\n */\n    this.getNorthOffset = function() {\n      return config.northOffset;\n    };\n\n    /**\n * Sets the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @param {number} heading - North offset in degrees\n * @returns {Viewer} `this`\n */\n    this.setNorthOffset = function(heading) {\n      config.northOffset = Math.min(360, Math.max(0, heading));\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon roll in degrees\n */\n    this.getHorizonRoll = function() {\n      return config.horizonRoll;\n    };\n\n    /**\n * Sets the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @param {number} roll - Horizon roll in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonRoll = function(roll) {\n      config.horizonRoll = Math.min(90, Math.max(-90, roll));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon pitch in degrees\n */\n    this.getHorizonPitch = function() {\n      return config.horizonPitch;\n    };\n\n    /**\n * Sets the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Horizon pitch in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonPitch = function(pitch) {\n      config.horizonPitch = Math.min(90, Math.max(-90, pitch));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Start auto rotation.\n * @memberof Viewer\n * @instance\n * @param {number} [speed] - Auto rotation speed / direction. If not specified, previous value is used.\n * @returns {Viewer} `this`\n */\n    this.startAutoRotate = function(speed) {\n      speed = speed || autoRotateSpeed || 1;\n      config.autoRotate = speed;\n      _this.lookAt(origPitch, undefined, origHfov, 3000);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Stop auto rotation.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.stopAutoRotate = function() {\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n      config.autoRotateInactivityDelay = -1;\n      return this;\n    };\n\n    /**\n * Returns the panorama renderer.\n * @memberof Viewer\n * @instance\n * @returns {Renderer}\n */\n    this.getRenderer = function() {\n      return renderer;\n    };\n\n    /**\n * Sets update flag for dynamic content.\n * @memberof Viewer\n * @instance\n * @param {boolean} bool - Whether or not viewer should update even when still\n * @returns {Viewer} `this`\n */\n    this.setUpdate = function(bool) {\n      update = bool === true;\n      if (renderer === undefined)\n        {onImageLoad();}\n      else\n        {animateInit();}\n      return this;\n    };\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @memberof Viewer\n * @instance\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    this.mouseEventToCoords = function(event) {\n      return mouseEventToCoords(event);\n    };\n\n    /**\n * Change scene being viewed.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - Identifier of scene to switch to.\n * @param {number} [pitch] - Pitch to use with new scene\n * @param {number} [yaw] - Yaw to use with new scene\n * @param {number} [hfov] - HFOV to use with new scene\n * @returns {Viewer} `this`\n */\n    this.loadScene = function(sceneId, pitch, yaw, hfov) {\n      if (loaded !== false)\n        {loadScene(sceneId, pitch, yaw, hfov);}\n      return this;\n    };\n\n    /**\n * Get ID of current scene.\n * @memberof Viewer\n * @instance\n * @returns {string} ID of current scene\n */\n    this.getScene = function() {\n      return config.scene;\n    };\n\n    /**\n * Add a new scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the new scene\n * @param {string} config - The configuration of the new scene\n * @returns {Viewer} `this`\n */\n    this.addScene = function(sceneId, config) {\n      initialConfig.scenes[sceneId] = config;\n      return this;\n    };\n\n    /**\n * Remove a scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the scene\n * @returns {boolean} False if the scene is the current scene or if the scene doesn't exists, else true\n */\n    this.removeScene = function(sceneId) {\n      if (config.scene === sceneId || !initialConfig.scenes.hasOwnProperty(sceneId))\n        {return false;}\n      delete initialConfig.scenes[sceneId];\n      return true;\n    };\n\n    /**\n * Toggle fullscreen.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.toggleFullscreen = function() {\n      toggleFullscreen();\n      return this;\n    };\n\n    /**\n * Get configuration of current scene.\n * @memberof Viewer\n * @instance\n * @returns {Object} Configuration of current scene\n */\n    this.getConfig = function() {\n      return config;\n    };\n\n    /**\n * Get viewer's container element.\n * @memberof Viewer\n * @instance\n * @returns {HTMLElement} Container `div` element\n */\n    this.getContainer = function() {\n      return container;\n    };\n\n    /**\n * Add a new hot spot.\n * @memberof Viewer\n * @instance\n * @param {Object} hs - The configuration for the hot spot\n * @param {string} [sceneId] - Adds hot spot to specified scene if provided, else to current scene\n * @returns {Viewer} `this`\n * @throws Throws an error if the scene ID is provided but invalid\n */\n    this.addHotSpot = function(hs, sceneId) {\n      if (sceneId === undefined && config.scene === undefined) {\n        // Not a tour\n        config.hotSpots.push(hs);\n      } else {\n        // Tour\n        var id = sceneId !== undefined ? sceneId : config.scene;\n        if (initialConfig.scenes.hasOwnProperty(id)) {\n          if (!initialConfig.scenes[id].hasOwnProperty('hotSpots')) {\n            initialConfig.scenes[id].hotSpots = []; // Create hot spots array if needed\n            if (id == config.scene)\n              {config.hotSpots = initialConfig.scenes[id].hotSpots;}    // Link to current config\n          }\n          initialConfig.scenes[id].hotSpots.push(hs); // Add hot spot to config\n        } else {\n          throw 'Invalid scene ID!';\n        }\n      }\n      if (sceneId === undefined || config.scene == sceneId) {\n        // Add to current scene\n        createHotSpot(hs);\n        if (loaded)\n          {renderHotSpot(hs);}\n      }\n      return this;\n    };\n\n    /**\n * Remove a hot spot.\n * @memberof Viewer\n * @instance\n * @param {string} hotSpotId - The ID of the hot spot\n * @param {string} [sceneId] - Removes hot spot from specified scene if provided, else from current scene\n * @returns {boolean} True if deletion is successful, else false\n */\n    this.removeHotSpot = function(hotSpotId, sceneId) {\n      if (sceneId === undefined || config.scene == sceneId) {\n        if (!config.hotSpots)\n          {return false;}\n        for (var i = 0; i < config.hotSpots.length; i++) {\n          if (config.hotSpots[i].hasOwnProperty('id') &&\n                config.hotSpots[i].id === hotSpotId) {\n            // Delete hot spot DOM elements\n            var current = config.hotSpots[i].div;\n            while (current.parentNode != renderContainer)\n              {current = current.parentNode;}\n            renderContainer.removeChild(current);\n            delete config.hotSpots[i].div;\n            // Remove hot spot from configuration\n            config.hotSpots.splice(i, 1);\n            return true;\n          }\n        }\n      } else {\n        if (initialConfig.scenes.hasOwnProperty(sceneId)) {\n          if (!initialConfig.scenes[sceneId].hasOwnProperty('hotSpots'))\n            {return false;}\n          for (var i = 0; i < initialConfig.scenes[sceneId].hotSpots.length; i++) {\n            if (initialConfig.scenes[sceneId].hotSpots[i].hasOwnProperty('id') &&\n                    initialConfig.scenes[sceneId].hotSpots[i].id === hotSpotId) {\n              // Remove hot spot from configuration\n              initialConfig.scenes[sceneId].hotSpots.splice(i, 1);\n              return true;\n            }\n          }\n        } else {\n          return false;\n        }\n      }\n    };\n\n    /**\n * This method should be called if the viewer's container is resized.\n * @memberof Viewer\n * @instance\n */\n    this.resize = function() {\n      if (renderer)\n        {onDocumentResize();}\n    };\n\n    /**\n * Check if a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if a panorama is loaded, else false\n */\n    this.isLoaded = function() {\n      return loaded;\n    };\n\n    /**\n * Check if device orientation control is supported.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if supported, else false\n */\n    this.isOrientationSupported = function() {\n      return orientationSupport || false;\n    };\n\n    /**\n * Stop using device orientation.\n * @memberof Viewer\n * @instance\n */\n    this.stopOrientation = function() {\n      stopOrientation();\n    };\n\n    /**\n * Start using device orientation (does nothing if not supported).\n * @memberof Viewer\n * @instance\n */\n    this.startOrientation = function() {\n      if (orientationSupport)\n        {startOrientation();}\n    };\n\n    /**\n * Check if device orientation control is currently activated.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if active, else false\n */\n    this.isOrientationActive = function() {\n      return Boolean(orientation);\n    };\n\n    /**\n * Subscribe listener to specified event.\n * @memberof Viewer\n * @instance\n * @param {string} type - Type of event to subscribe to.\n * @param {Function} listener - Listener function to subscribe to event.\n * @returns {Viewer} `this`\n */\n    this.on = function(type, listener) {\n      externalEventListeners[type] = externalEventListeners[type] || [];\n      externalEventListeners[type].push(listener);\n      return this;\n    };\n\n    /**\n * Remove an event listener (or listeners).\n * @memberof Viewer\n * @param {string} [type] - Type of event to remove listeners from. If not specified, all listeners are removed.\n * @param {Function} [listener] - Listener function to remove. If not specified, all listeners of specified type are removed.\n * @returns {Viewer} `this`\n */\n    this.off = function(type, listener) {\n      if (!type) {\n        // Remove all listeners if type isn't specified\n        externalEventListeners = {};\n        return this;\n      }\n      if (listener) {\n        var i = externalEventListeners[type].indexOf(listener);\n        if (i >= 0) {\n          // Remove listener if found\n          externalEventListeners[type].splice(i, 1);\n        }\n        if (externalEventListeners[type].length == 0) {\n          // Remove category if empty\n          delete externalEventListeners[type];\n        }\n      } else {\n        // Remove category of listeners if listener isn't specified\n        delete externalEventListeners[type];\n      }\n      return this;\n    };\n\n    /**\n * Fire listeners attached to specified event.\n * @private\n * @param {string} [type] - Type of event to fire listeners for.\n */\n    function fireEvent(type) {\n      if (type in externalEventListeners) {\n        // Reverse iteration is useful, if event listener is removed inside its definition\n        for (var i = externalEventListeners[type].length; i > 0; i--) {\n          externalEventListeners[type][externalEventListeners[type].length - i].apply(null, [].slice.call(arguments, 1));\n        }\n      }\n    }\n\n    /**\n * Destructor.\n * @instance\n * @memberof Viewer\n */\n    this.destroy = function() {\n      if (renderer)\n        {renderer.destroy()};\n      if (listenersAdded) {\n        dragFix.removeEventListener('mousedown', onDocumentMouseDown, false);\n        dragFix.removeEventListener('dblclick', onDocumentDoubleClick, false);\n        document.removeEventListener('mousemove', onDocumentMouseMove, false);\n        document.removeEventListener('mouseup', onDocumentMouseUp, false);\n        container.removeEventListener('mousewheel', onDocumentMouseWheel, false);\n        container.removeEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        container.removeEventListener('mozfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('msfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('fullscreenchange', onFullScreenChange, false);\n        window.removeEventListener('resize', onDocumentResize, false);\n        window.removeEventListener('orientationchange', onDocumentResize, false);\n        container.removeEventListener('keydown', onDocumentKeyPress, false);\n        container.removeEventListener('keyup', onDocumentKeyUp, false);\n        container.removeEventListener('blur', clearKeys, false);\n        document.removeEventListener('mouseleave', onDocumentMouseUp, false);\n        dragFix.removeEventListener('touchstart', onDocumentTouchStart, false);\n        dragFix.removeEventListener('touchmove', onDocumentTouchMove, false);\n        dragFix.removeEventListener('touchend', onDocumentTouchEnd, false);\n        dragFix.removeEventListener('pointerdown', onDocumentPointerDown, false);\n        dragFix.removeEventListener('pointermove', onDocumentPointerMove, false);\n        dragFix.removeEventListener('pointerup', onDocumentPointerUp, false);\n        dragFix.removeEventListener('pointerleave', onDocumentPointerUp, false);\n      }\n      container.innerHTML = '';\n      container.classList.remove('pnlm-container');\n      uiContainer.classList.remove('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n    };\n\n  }\n\n  return {\n    viewer: function(container, config) {\n      return new Viewer(container, config);\n    }\n  };\n\n})(window, document);\n","/**\n * Provides requestAnimationFrame in a cross browser way.\n * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n */\n\nif ( !window.requestAnimationFrame ) {\n\n    window.requestAnimationFrame = ( function() {\n\n        return window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {\n\n            window.setTimeout( callback, 1000 / 60 );\n\n        };\n\n    } )();\n\n}\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar ES = require('es-abstract/es5');\nvar replace = bind.call(Function.call, String.prototype.replace);\n\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n\nmodule.exports = function trim() {\n\tvar S = ES.ToString(ES.CheckObjectCoercible(this));\n\treturn replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};\n","'use strict';\n\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor\n\t? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())\n\t: function () { throw new TypeError(); };\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar generator; // = function * () {};\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'$ %Array%': Array,\n\t'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n\t'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'$ %ArrayPrototype%': Array.prototype,\n\t'$ %ArrayProto_entries%': Array.prototype.entries,\n\t'$ %ArrayProto_forEach%': Array.prototype.forEach,\n\t'$ %ArrayProto_keys%': Array.prototype.keys,\n\t'$ %ArrayProto_values%': Array.prototype.values,\n\t'$ %AsyncFromSyncIteratorPrototype%': undefined,\n\t'$ %AsyncFunction%': asyncFunction,\n\t'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n\t'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n\t'$ %AsyncGeneratorFunction%': asyncGenFunction,\n\t'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n\t'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n\t'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'$ %Boolean%': Boolean,\n\t'$ %BooleanPrototype%': Boolean.prototype,\n\t'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n\t'$ %Date%': Date,\n\t'$ %DatePrototype%': Date.prototype,\n\t'$ %decodeURI%': decodeURI,\n\t'$ %decodeURIComponent%': decodeURIComponent,\n\t'$ %encodeURI%': encodeURI,\n\t'$ %encodeURIComponent%': encodeURIComponent,\n\t'$ %Error%': Error,\n\t'$ %ErrorPrototype%': Error.prototype,\n\t'$ %eval%': eval, // eslint-disable-line no-eval\n\t'$ %EvalError%': EvalError,\n\t'$ %EvalErrorPrototype%': EvalError.prototype,\n\t'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n\t'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n\t'$ %Function%': Function,\n\t'$ %FunctionPrototype%': Function.prototype,\n\t'$ %Generator%': generator ? getProto(generator()) : undefined,\n\t'$ %GeneratorFunction%': generatorFunction,\n\t'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n\t'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n\t'$ %isFinite%': isFinite,\n\t'$ %isNaN%': isNaN,\n\t'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'$ %JSON%': JSON,\n\t'$ %JSONParse%': JSON.parse,\n\t'$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n\t'$ %Math%': Math,\n\t'$ %Number%': Number,\n\t'$ %NumberPrototype%': Number.prototype,\n\t'$ %Object%': Object,\n\t'$ %ObjectPrototype%': Object.prototype,\n\t'$ %ObjProto_toString%': Object.prototype.toString,\n\t'$ %ObjProto_valueOf%': Object.prototype.valueOf,\n\t'$ %parseFloat%': parseFloat,\n\t'$ %parseInt%': parseInt,\n\t'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n\t'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n\t'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n\t'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n\t'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n\t'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'$ %RangeError%': RangeError,\n\t'$ %RangeErrorPrototype%': RangeError.prototype,\n\t'$ %ReferenceError%': ReferenceError,\n\t'$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n\t'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'$ %RegExp%': RegExp,\n\t'$ %RegExpPrototype%': RegExp.prototype,\n\t'$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n\t'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n\t'$ %String%': String,\n\t'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'$ %StringPrototype%': String.prototype,\n\t'$ %Symbol%': hasSymbols ? Symbol : undefined,\n\t'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n\t'$ %SyntaxError%': SyntaxError,\n\t'$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n\t'$ %ThrowTypeError%': ThrowTypeError,\n\t'$ %TypedArray%': TypedArray,\n\t'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n\t'$ %TypeError%': TypeError,\n\t'$ %TypeErrorPrototype%': TypeError.prototype,\n\t'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n\t'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n\t'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n\t'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n\t'$ %URIError%': URIError,\n\t'$ %URIErrorPrototype%': URIError.prototype,\n\t'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n\t'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\t'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar key = '$ ' + name;\n\tif (!(key in INTRINSICS)) {\n\t\tthrow new SyntaxError('intrinsic ' + name + ' does not exist!');\n\t}\n\n\t// istanbul ignore if // hopefully this is impossible to test :-)\n\tif (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n\t\tthrow new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t}\n\treturn INTRINSICS[key];\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = '\\u200b';\n\nmodule.exports = function getPolyfill() {\n\tif (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n\t\treturn String.prototype.trim;\n\t}\n\treturn implementation;\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n","'use strict';\n\nvar bind = require('function-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\n\ndefine(boundTrim, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundTrim;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has');\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) { return 0; }\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn $String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) { // 0 === -0, but they are not identical.\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || typeof x === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\tif (this.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new $TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t}\n};\n\nmodule.exports = ES5;\n","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) { // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n  console.log(predicate(ES, value), value);\n};\n","module.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n","var $isNaN = Number.isNaN || function (a) { return a !== a; };\n\nmodule.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\n","module.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n","module.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\n};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable');\n\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function (O) {\n\t\tvar actualHint;\n\t\tif (arguments.length > 1) {\n\t\t\tactualHint = arguments[1];\n\t\t} else {\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\n\t\t}\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tif (arguments.length > 1) {\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\n};\n","module.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });\n\treturn polyfill;\n};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n","/*! @name mpd-parser @version 0.7.0 @license Apache-2.0 */\nimport window$1 from 'global/window';\n\nvar version = \"0.7.0\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments;\n\n      // first segment of subsequent periods signal a discontinuity\n      playlist.segments[0].discontinuity = true;\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + \" (\" + role + \")\";\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  module.exports = URLToolkit;\n})(commonjsGlobal);\n/* jshint ignore:end */\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range;\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    range: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return {\n      attributes: attributes\n    };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n","var toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n","module.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n","// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n","var coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nvar sumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n// Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\nvar prefixWithSilence = function(\n  track,\n  frames,\n  audioAppendStartTs,\n  videoBaseMediaDecodeTime\n) {\n  var\n    baseMediaDecodeTimeTs,\n    frameDuration = 0,\n    audioGapDuration = 0,\n    audioFillFrameCount = 0,\n    audioFillDuration = 0,\n    silentFrame,\n    i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs =\n    clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n  // determine frame clock duration based on sample rate, round up to avoid overfills\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration =\n      baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n    // number of full frames in the audio gap\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  }\n\n  // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -=\n    Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n};\n\n// If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\nvar trimAdtsFramesByEarliestDts = function(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  }\n\n  // We will need to recalculate the earliest segment Dts\n  track.minSegmentDts = Infinity;\n\n  return adtsFrames.filter(function(currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    }\n    // Otherwise, discard it\n    return false;\n  });\n};\n\n// generate the track's raw mdat data from an array of frames\nvar generateSampleTable = function(frames) {\n  var\n    i,\n    currentFrame,\n    samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n    });\n  }\n  return samples;\n};\n\n// generate the track's sample table from an array of frames\nvar concatenateFrameData = function(frames) {\n  var\n    i,\n    currentFrame,\n    dataOffset = 0,\n    data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};\n","var highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n","var\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n","var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n","/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n","'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n","'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\nvar aacUtils = require('./utils');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if (((everything[byteIndex] & 0xff) === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n","var _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport propTypes from \"prop-types\";\nimport React, { PureComponent } from \"react\";\nimport \"../pannellum/css/pannellum.css\";\nimport \"../pannellum/css/style-textInfo.css\";\n\nimport \"../pannellum/js/libpannellum.js\";\nimport \"../pannellum/js/pannellum.js\";\nimport \"../pannellum/js/RequestAnimationFrame\";\n\nvar Pannellum = (_temp = _class = function (_PureComponent) {\n  _inherits(Pannellum, _PureComponent);\n\n  function Pannellum(props) {\n    _classCallCheck(this, Pannellum);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.renderImage = function (state) {\n      var children = _this.props.children;\n      // make the array of sub components, even if its one, it become array of one\n\n      var hotspots = [].concat(children);\n      var hotspotArray = [];\n      if (Array.isArray(hotspots)) {\n        hotspots.map(function (hotspot) {\n          switch (hotspot.props.type) {\n            case \"info\":\n              return hotspotArray.push({\n                id: Math.random().toString(36).substr(2, 9),\n                type: hotspot.props.type,\n                pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n                yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n                text: hotspot.props.text ? hotspot.props.text : \"\",\n                URL: hotspot.props.URL ? hotspot.props.URL : \"\"\n              });\n            case \"custom\":\n              return hotspotArray.push({\n                id: Math.random().toString(36).substr(2, 9),\n                pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n                yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n                cssClass: hotspot.props.cssClass ? hotspot.props.cssClass : \"tooltipcss\",\n                createTooltipFunc: hotspot.props.tooltip ? hotspot.props.tooltip : _this.hotspotTooltip,\n                createTooltipArgs: hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n                clickHandlerFunc: hotspot.props.handleClick ? hotspot.props.handleClick : _this.handleClickHotspot,\n                clickHandlerArgs: hotspot.props.handleClickArg ? hotspot.props.handleClickArg : { name: \"test\" }\n              });\n            default:\n              return [];\n          }\n        });\n      }\n\n      var jsonConfig = {\n        type: \"equirectangular\",\n        panorama: _this.props.image,\n        haov: _this.props.haov,\n        vaov: _this.props.vaov,\n        vOffset: _this.props.vOffset,\n        yaw: _this.props.yaw,\n        pitch: _this.props.pitch,\n        hfov: _this.props.hfov,\n        minHfov: _this.props.minHfov,\n        maxHfov: _this.props.maxHfov,\n        minPitch: _this.props.minPitch,\n        maxPitch: _this.props.maxPitch,\n        minYaw: _this.props.minYaw,\n        maxYaw: _this.props.maxYaw,\n        autoRotate: _this.props.autoRotate,\n        compass: _this.props.compass,\n        preview: _this.props.preview,\n        previewTitle: _this.props.previewTitle,\n        previewAuthor: _this.props.previewAuthor,\n        author: _this.props.author,\n        title: _this.props.title,\n        autoLoad: _this.props.autoLoad,\n        orientationOnByDefault: _this.props.orientationOnByDefault,\n        showZoomCtrl: _this.props.showZoomCtrl,\n        keyboardZoom: _this.props.keyboardZoom,\n        mouseZoom: _this.props.mouseZoom,\n        draggable: _this.props.draggable,\n        disableKeyboardCtrl: _this.props.disableKeyboardCtrl,\n        showFullscreenCtrl: _this.props.showFullscreenCtrl,\n        showControls: _this.props.showControls,\n        hotSpotDebug: _this.props.hotspotDebug,\n        hotSpots: hotspotArray,\n        onRender: _this.props.onRender\n      };\n\n      Object.keys(jsonConfig).forEach(function (key) {\n        return jsonConfig[key] === \"\" && delete jsonConfig[key];\n      });\n      // this.setState({ jsonConfig });\n\n      if (state === \"update\") {\n        _this.panorama.destroy();\n      }\n      _this.panorama = pannellum.viewer(_this.props.id ? _this.props.id : _this.state.id, jsonConfig);\n\n      _this.panorama.on(\"load\", _this.props.onLoad);\n      _this.panorama.on(\"scenechange\", _this.props.onScenechange);\n      _this.panorama.on(\"scenechangefadedone\", _this.props.onScenechangefadedone);\n      _this.panorama.on(\"error\", _this.props.onError);\n      _this.panorama.on(\"errorcleared\", _this.props.onErrorcleared);\n      _this.panorama.on(\"mousedown\", _this.props.onMousedown);\n      _this.panorama.on(\"mouseup\", _this.props.onMouseup);\n      _this.panorama.on(\"touchstart\", _this.props.onTouchstart);\n      _this.panorama.on(\"touchend\", _this.props.onTouchend);\n    };\n\n    _this.componentDidMount = function () {\n      _this.renderImage(\"mount\");\n    };\n\n    _this.handleClickHotspot = function (e, args) {\n      console.log(\"hotspot clicked\", args.name);\n    };\n\n    _this.hotspotTooltip = function (hotSpotDiv, args) {\n      hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n      var hDiv = document.createElement(\"div\");\n      hDiv.classList.add(\"hotspot\");\n      var outDiv = document.createElement(\"div\");\n      outDiv.classList.add(\"out\");\n      var inDiv = document.createElement(\"div\");\n      inDiv.classList.add(\"in\");\n      var imageDiv = document.createElement(\"div\");\n      imageDiv.classList.add(\"image\");\n      hotSpotDiv.appendChild(hDiv);\n      hDiv.appendChild(inDiv);\n      hDiv.appendChild(outDiv);\n    };\n\n    _this.getViewer = function () {\n      return _this.panorama;\n    };\n\n    _this.forceRender = function () {\n      _this.renderImage(\"update\");\n    };\n\n    _this.state = {\n      id: Math.random().toString(36).substr(2, 9)\n    };\n    return _this;\n  }\n\n  Pannellum.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.image !== this.props.image || prevProps.width !== this.props.width || prevProps.height !== this.props.height || prevProps.compass !== this.props.compass || prevProps.title !== this.props.title || prevProps.author !== this.props.author || prevProps.preview !== this.props.preview || prevProps.previewTitle !== this.props.previewTitle || prevProps.previewAuthor !== this.props.previewAuthor || prevProps.showZoomCtrl !== this.props.showZoomCtrl || prevProps.showFullscreenCtrl !== this.props.showFullscreenCtrl || prevProps.showControls !== this.props.showControls || prevProps.children.length !== this.props.children.length) {\n      this.renderImage(\"update\");\n    }\n    if (prevProps.maxYaw !== this.props.maxYaw || prevProps.minYaw !== this.props.minYaw || prevProps.maxPitch !== this.props.maxPitch || prevProps.minPitch !== this.props.minPitch || prevProps.maxHfov !== this.props.maxHfov || prevProps.minHfov !== this.props.minHfov) {\n      this.panorama.setYawBounds([this.props.minYaw, this.props.maxYaw]);\n      this.panorama.setPitchBounds([this.props.minPitch, this.props.maxPitch]);\n      this.panorama.setHfovBounds([this.props.minHfov, this.props.maxHfov]);\n    }\n    if (prevProps.yaw !== this.props.yaw) {\n      this.panorama.setYaw(this.props.yaw);\n    }\n    if (prevProps.pitch !== this.props.pitch) {\n      this.panorama.setPitch(this.props.pitch);\n    }\n    if (prevProps.hfov !== this.props.hfov) {\n      this.panorama.setHfov(this.props.hfov);\n    }\n  };\n\n  Pannellum.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        width = _props.width,\n        height = _props.height;\n\n    var divStyle = {\n      width: width,\n      height: height\n    };\n    return React.createElement(\"div\", {\n      id: this.props.id ? this.props.id : this.state.id,\n      style: divStyle,\n      ref: function ref(node) {\n        return _this2.imageNode = node;\n      }\n    });\n  };\n\n  return Pannellum;\n}(PureComponent), _class.defaultProps = {\n  children: [],\n  width: \"100%\",\n  height: \"400px\",\n  image: \"\",\n  haov: 360,\n  vaov: 180,\n  vOffset: 0,\n  yaw: 0,\n  pitch: 0,\n  hfov: 100,\n  minHfov: 50,\n  maxHfov: 150,\n  minPitch: -90,\n  maxPitch: 90,\n  minYaw: -180,\n  maxYaw: 180,\n  autoRotate: 0,\n  compass: false,\n  preview: \"\",\n  previewTitle: \"\",\n  previewAuthor: \"\",\n  title: \"\",\n  author: \"\",\n  autoLoad: false,\n  orientationOnByDefault: false,\n  showZoomCtrl: true,\n  keyboardZoom: true,\n  mouseZoom: true,\n  draggable: true,\n  disableKeyboardCtrl: false,\n  showFullscreenCtrl: true,\n  showControls: true,\n  onLoad: function onLoad() {},\n  onScenechange: function onScenechange() {},\n  onScenechangefadedone: function onScenechangefadedone() {},\n  onError: function onError() {},\n  onErrorcleared: function onErrorcleared() {},\n  onMousedown: function onMousedown() {},\n  onMouseup: function onMouseup() {},\n  onTouchstart: function onTouchstart() {},\n  onTouchend: function onTouchend() {},\n  hotspotDebug: false,\n  onRender: null\n}, _temp);\nPannellum.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),\n  id: propTypes.string,\n  width: propTypes.string,\n  height: propTypes.string,\n  image: propTypes.string,\n  haov: propTypes.number,\n  vaov: propTypes.number,\n  vOffset: propTypes.number,\n  yaw: propTypes.number,\n  pitch: propTypes.number,\n  hfov: propTypes.number,\n  minHfov: propTypes.number,\n  maxHfov: propTypes.number,\n  minPitch: propTypes.number,\n  maxPitch: propTypes.number,\n  minYaw: propTypes.number,\n  maxYaw: propTypes.number,\n  autoRotate: propTypes.number,\n  compass: propTypes.bool,\n  preview: propTypes.string,\n  previewTitle: propTypes.string,\n  previewAuthor: propTypes.string,\n  title: propTypes.string,\n  author: propTypes.string,\n  autoLoad: propTypes.bool,\n  orientationOnByDefault: propTypes.bool,\n  showZoomCtrl: propTypes.bool,\n  keyboardZoom: propTypes.bool,\n  mouseZoom: propTypes.bool,\n  draggable: propTypes.bool,\n  disableKeyboardCtrl: propTypes.bool,\n  showFullscreenCtrl: propTypes.bool,\n  showControls: propTypes.bool,\n  onLoad: propTypes.func,\n  onScenechange: propTypes.func,\n  onScenechangefadedone: propTypes.func,\n  onError: propTypes.func,\n  onErrorcleared: propTypes.func,\n  onMousedown: propTypes.func,\n  onMouseup: propTypes.func,\n  onTouchstart: propTypes.func,\n  onTouchend: propTypes.func,\n  hotspotDebug: propTypes.bool,\n  tooltip: propTypes.func,\n  tooltipArg: propTypes.object,\n  handleClick: propTypes.func,\n  handleClickArg: propTypes.object,\n  cssClass: propTypes.string,\n  onRender: propTypes.func\n} : {};\n\nPannellum.Hotspot = function () {};\nPannellum.Hotspot = function () {};\nexport default Pannellum;","/*! @name m3u8-parser @version 4.3.0 @license Apache-2.0 */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implementation that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream =\n/*#__PURE__*/\nfunction () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i;\n    var length;\n    var args;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                length = _attributes$BYTERANGE[0],\n                offset = _attributes$BYTERANGE[1];\n\n            event.byterange = {};\n\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  };\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_assertThisInitialized(_this));\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n","/**\n * @license\n * Video.js 7.5.4 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.5.4\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + new Date().getTime();\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map.delete(type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP.delete(_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    log.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a keydown event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (this.player_) {\n      this.player_.handleKeyPress(event);\n    }\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = new Date().getTime(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi;\nvar prefixedAPI = false; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  prefixedAPI = browserApi[0] === specApi[0];\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      this.close();\n    }\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      } // Hide controls and note if they were enabled.\n\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        };\n\n        loadHandler = function loadHandler() {\n          track.tech_.off('vttjserror', errorHandler);\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.one('vttjsloaded', loadHandler);\n        track.tech_.one('vttjserror', errorHandler);\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_assertThisInitialized(_this)));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_assertThisInitialized(_this))\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl$$1(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `Component`s element.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  }\n  /**\n   * Disable this `Component`s element.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  }\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n  ;\n\n  _proto.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Support Space or Enter key operation to fire a click event\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  }\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    } // call handleFocus manually to get hotkeys working\n\n\n    this.player_.handleFocus({});\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    this.clearDisplay(); // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for a button.\n    if (!(keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter'))) {\n      // Pass keypress handling up for unsupported keys\n      _ClickableComponent.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise); // call handleFocus manually to get hotkeys working\n\n      this.player_.handleFocus({});\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {} // Override the default `Button` behavior, and don't pass the keypress event\n  //  up to the player because this button is part of a `ModalDialog`, which\n  //  doesn't pass keypresses to the player either.\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n  ;\n\n  _proto.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      this.stepForward();\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  }\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n  ;\n\n  _proto.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keypress handling up for unused keys\n      _ClickableComponent.prototype.handleKeyPress.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    } // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n\n    var kinds = (referenceTrack.kinds || [referenceTrack.kind]).filter(Boolean);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_);\n    this.one(this.player_, 'play', this.handlePlay); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.fullWindowOnEscKey);\n    _this.boundHandleKeyPress_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleKeyPress); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name$$1) {\n        if (typeof _this[name$$1] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name$$1 + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_assertThisInitialized(_this)), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name$$1) {\n        _this[name$$1](options.plugins[name$$1]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_assertThisInitialized(_this)); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('focus', _this.handleFocus);\n\n    _this.on('blur', _this.handleBlur);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, FullscreenApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n    off(document, 'keydown', this.boundHandleKeyPress_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise.catch(restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise.catch(muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this6.techGet('currentSrc');\n\n            _this6.lastSource_.tech = techSrc;\n\n            _this6.updateSourceCaches_(techSrc);\n          }\n\n          _this6.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(document[fsApi.fullscreenElement] === this.el() || this.el().matches(':' + fsApi.fullscreen)); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, fsApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (!prefixedAPI) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * This gets called when a `Player` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n  ;\n\n  _proto.handleFocus = function handleFocus(event) {\n    // call off first to make sure we don't keep adding keydown handlers\n    off(document, 'keydown', this.boundHandleKeyPress_);\n    on(document, 'keydown', this.boundHandleKeyPress_);\n  }\n  /**\n   * Called when a `Player` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', this.boundHandleKeyPress_);\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (this.options_.userActions && this.options_.userActions.hotkeys && this.options_.userActions.hotkeys !== false) {\n      if (typeof this.options_.userActions.hotkeys === 'function') {\n        this.options_.userActions.hotkeys.call(this, event);\n      } else {\n        this.handleHotkeys(event);\n      }\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[FullscreenApi.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits$1 = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits$1(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n\n    setTextContent(style$1, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name$$1 + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name$$1, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = xhr;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.9.3\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been\n      // specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream; // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2016 Brightcove\n     * All rights reserved.\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n              return ' ' + ('00' + byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun,\n      parseSidx: parse$$1.sidx\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type if updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      } // TODO: check for sidx here\n      // Continue asynchronously if there is no sidx\n      // wait one tick to allow haveMaster to run first on a child loader\n\n\n      this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n        startingState: startingState,\n        playlist: playlist\n      }), 0);\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist;\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this2 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this2.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this3 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this3.request = null;\n\n        if (error) {\n          _this3.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this3.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this3.state === 'HAVE_NOTHING') {\n            _this3.started = false;\n          }\n\n          return _this3.trigger('error');\n        }\n\n        _this3.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this3.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this3.masterLoaded_ = Date.now();\n        }\n\n        _this3.srcUrl = resolveManifestRedirect(_this3.handleManifestRedirects, _this3.srcUrl, req);\n\n        _this3.syncClientServerClock_(_this3.onClientServerClockSync_.bind(_this3));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this4 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this4.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this4.clientOffset_ = _this4.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this4.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this4.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this5 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this6 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this6.request = null;\n\n        if (error) {\n          _this6.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this6.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this6.state === 'HAVE_NOTHING') {\n            _this6.started = false;\n          }\n\n          return _this6.trigger('error');\n        }\n\n        _this6.masterXml_ = req.responseText;\n\n        var newMaster = _this6.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this6.master, newMaster);\n\n        if (updatedMaster) {\n          _this6.master = updatedMaster;\n        }\n\n        window$1.setTimeout(function () {\n          _this6.trigger('minimumUpdatePeriod');\n        }, _this6.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this7 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this7.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (!captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler); // this is an encrypted segment\n  // incrementally decrypt the segment\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // Fmp4 CaptionParser\n\n    _this.captionParser_ = new CaptionParser();\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n      this.captionParser_.reset();\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      this.captionParser_.clearAllCaptions();\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        this.captionParser_.clearParsedCaptions();\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        });\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      var probedInfo = {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.9.3\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n","var _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport videojs from 'video.js';\nimport '../pannellum/css/video-js.css';\nimport '../pannellum/css/pannellum.css';\nimport '../pannellum/css/style-textInfo.css';\nimport '../pannellum/js/libpannellum.js';\nimport '../pannellum/js/RequestAnimationFrame';\nimport '../pannellum/js/pannellum.js';\nimport '../pannellum/js/videojs-pannellum-plugin';\n\nvar PannellumVideo = (_temp = _class = function (_Component) {\n  _inherits(PannellumVideo, _Component);\n\n  function PannellumVideo(props) {\n    _classCallCheck(this, PannellumVideo);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.renderVideo = function (state) {\n      var children = _this.props.children;\n      // make the array of sub components, even if its one, it become array of one \n\n      var hotspots = [].concat(children);\n      var hotspotArray = [];\n      if (Array.isArray(hotspots)) {\n        hotspots.map(function (hotspot) {\n          switch (hotspot.props.type) {\n\n            case \"info\":\n              return hotspotArray.push({\n                \"id\": Math.random().toString(36).substr(2, 9),\n                \"type\": hotspot.props.type,\n                \"pitch\": hotspot.props.pitch ? hotspot.props.pitch : 10,\n                \"yaw\": hotspot.props.yaw ? hotspot.props.yaw : 10,\n                \"text\": hotspot.props.text ? hotspot.props.text : \"\",\n                \"URL\": hotspot.props.URL ? hotspot.props.URL : \"\"\n              });\n            case \"custom\":\n              return hotspotArray.push({\n                \"id\": Math.random().toString(36).substr(2, 9),\n                \"pitch\": hotspot.props.pitch ? hotspot.props.pitch : 10,\n                \"yaw\": hotspot.props.yaw ? hotspot.props.yaw : 10,\n                \"cssClass\": hotspot.props.cssClass ? hotspot.props.cssClass : 'tooltipcss',\n                \"createTooltipFunc\": hotspot.props.tooltip ? hotspot.props.tooltip : _this.hotspotTooltip,\n                \"createTooltipArgs\": hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n                \"clickHandlerFunc\": hotspot.props.handleClick ? hotspot.props.handleClick : _this.handleClickHotspot,\n                \"clickHandlerArgs\": hotspot.props.handleClickArg ? hotspot.props.handleClickArg : { name: \"test\" }\n              });\n            default:\n              return [];\n          }\n        });\n      }\n\n      if (state === \"update\") {\n\n        _this.video = videojs(_this.videoNode);\n        var cuurentHS = [].concat(_this.video.pnlmViewer.getConfig().hotSpots);\n        _this.video.pnlmViewer.setYaw(_this.props.yaw);\n        _this.video.pnlmViewer.setPitch(_this.props.pitch);\n        _this.video.pnlmViewer.setHfov(_this.props.hfov);\n        _this.video.pnlmViewer.setHfovBounds([_this.props.minHfov, _this.props.maxHfov]);\n\n        //remove all hotspots\n        cuurentHS.map(function (hs) {\n          return _this.video.pnlmViewer.removeHotSpot(hs.id);\n        });\n        // Adding new hotspots\n        hotspotArray.map(function (hs) {\n          return _this.video.pnlmViewer.addHotSpot(hs);\n        });\n        // setting new video\n        _this.video.src({\n          type: 'video/mp4',\n          src: _this.props.video\n        });\n        return _this.video.play();\n      } else {\n        _this.video = videojs(_this.videoNode, {\n          loop: _this.props.loop,\n          autoplay: _this.props.autoplay,\n          controls: _this.props.controls,\n          muted: _this.props.muted,\n          plugins: {\n            pannellum: {\n              yaw: _this.props.yaw,\n              pitch: _this.props.pitch,\n              hfov: _this.props.hfov,\n              minHfov: _this.props.minHfov,\n              maxHfov: _this.props.maxHfov,\n              minPitch: _this.props.minPitch,\n              maxPitch: _this.props.maxPitch,\n              minYaw: _this.props.minYaw,\n              maxYaw: _this.props.maxYaw,\n              hotSpotDebug: _this.props.hotspotDebug,\n              autoRotate: _this.props.autoRotate,\n              mouseZoom: _this.props.mouseZoom,\n              hotSpots: hotspotArray\n            }\n          }\n        });\n        _this.video.src({ type: 'video/mp4', src: _this.props.video });\n        _this.video.play();\n      }\n    };\n\n    _this.componentDidMount = function () {\n      _this.renderVideo(\"mount\");\n    };\n\n    _this.handleClickHotspot = function (e, args) {\n      console.log(\"hotspot clicked\", args.name);\n    };\n\n    _this.hotspotTooltip = function (hotSpotDiv, args) {\n      hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n      var hDiv = document.createElement('div');\n      hDiv.classList.add('hotspot');\n      var outDiv = document.createElement('div');\n      outDiv.classList.add('out');\n      var inDiv = document.createElement('div');\n      inDiv.classList.add('in');\n      var imageDiv = document.createElement('div');\n      imageDiv.classList.add('image');\n      hotSpotDiv.appendChild(hDiv);\n      hDiv.appendChild(inDiv);\n      hDiv.appendChild(outDiv);\n    };\n\n    _this.getViewer = function () {\n      return _this.video.pnlmViewer;\n    };\n\n    _this.state = {\n      id: Math.random().toString(36).substr(2, 9)\n    };\n    return _this;\n  }\n\n  PannellumVideo.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // videojs(this.videoNode).dispose();\n    // this.videoNode.setAttribute(\"src\", this.props.video );\n    this.renderVideo(\"update\");\n  };\n\n  PannellumVideo.prototype.componentWillUnmount = function componentWillUnmount() {\n    videojs(this.videoNode).dispose();\n  };\n\n  PannellumVideo.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        width = _props.width,\n        height = _props.height,\n        video = _props.video;\n\n    var divStyle = {\n      width: width,\n      height: height\n    };\n    return React.createElement(\n      'div',\n      { 'data-vjs-player': true },\n      React.createElement('video', {\n        id: this.props.id ? this.props.id : this.state.id,\n        className: 'video-js vjs-default-skin vjs-big-play-centered',\n        ref: function ref(node) {\n          return _this2.videoNode = node;\n        },\n        preload: 'none',\n        crossOrigin: 'anonymous',\n        style: divStyle\n      })\n    );\n  };\n\n  return PannellumVideo;\n}(Component), _class.defaultProps = {\n  children: [],\n  width: '100%',\n  height: '400px',\n  video: '',\n  yaw: 0,\n  pitch: 0,\n  hfov: 100,\n  minHfov: 50,\n  maxHfov: 150,\n  minPitch: -90,\n  maxPitch: 90,\n  minYaw: -180,\n  maxYaw: 180,\n  hotspotDebug: false,\n  autoRotate: 0,\n  mouseZoom: true,\n  loop: false,\n  autoplay: true,\n  controls: false,\n  muted: true\n}, _temp);\nPannellumVideo.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.node), propTypes.node]),\n  id: propTypes.string,\n  width: propTypes.string,\n  height: propTypes.string,\n  video: propTypes.string,\n  yaw: propTypes.number,\n  pitch: propTypes.number,\n  hfov: propTypes.number,\n  minHfov: propTypes.number,\n  maxHfov: propTypes.number,\n  minPitch: propTypes.number,\n  maxPitch: propTypes.number,\n  minYaw: propTypes.number,\n  maxYaw: propTypes.number,\n  hotspotDebug: propTypes.bool,\n  autoRotate: propTypes.number,\n  mouseZoom: propTypes.bool,\n  loop: propTypes.bool,\n  autoplay: propTypes.bool,\n  controls: propTypes.bool,\n  muted: propTypes.bool,\n  tooltip: propTypes.func,\n  tooltipArg: propTypes.object,\n  handleClick: propTypes.func,\n  handleClickArg: propTypes.object,\n  cssClass: propTypes.string\n} : {};\n\n\nexport default PannellumVideo;","/*\n * Video.js plugin for Pannellum\n * Copyright (c) 2015-2018 Matthew Petroff\n * MIT License\n */\nimport videojs from 'video.js'\n\n(function(document, videojs, pannellum) {\n    'use strict';\n    \n    videojs.registerPlugin('pannellum', function(config) {\n        // Create Pannellum instance\n        var player = this;\n        var container = player.el();\n        var vid = container.getElementsByTagName('video')[0],\n            pnlmContainer = document.createElement('div');\n        config = config || {};\n        config.type = 'equirectangular';\n        config.dynamic = true;\n        config.showZoomCtrl = false;\n        config.showFullscreenCtrl = false;\n        config.autoLoad = true;\n        config.panorama = vid;\n        pnlmContainer.style.visibility = 'hidden';\n        player.pnlmViewer = pannellum.viewer(pnlmContainer, config);\n        container.insertBefore(pnlmContainer, container.firstChild);\n        vid.style.display = 'none';\n    \n        // Handle update settings\n        player.on('play', function() {\n            if (vid.readyState > 1)\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('canplay', function() {\n            if (!player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('pause', function() {\n            player.pnlmViewer.setUpdate(false);\n        });\n        player.on('loadeddata', function() {\n            pnlmContainer.style.visibility = 'visible';\n        });\n        player.on('seeking', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('seeked', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(false);\n        });\n    });\n    \n    })(document, videojs, pannellum);\n    ","import Pannellum from \"./elements/Pannellum\";\nimport PannellumVideo from \"./elements/PannellumVideo\";\n\nexport { Pannellum, PannellumVideo };"],"sourceRoot":""}