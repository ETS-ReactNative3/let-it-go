{"version":3,"sources":["webpack:///./src/components/typesHelp.js","webpack:///./src/components/filterHelp.js","webpack:///./src/components/paginatedArray.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/utils.js","webpack:///./src/components/helpButton.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/locationHelp.js"],"names":["content","react_default","a","createElement","style","textAlign","className","typesHelp","helpButton","filterHelp","PaginatedArray","props","_this","_React$Component","call","this","pageSize","children","length","pageButtons","i","Math","ceil","push","pages","reduce","acc","currentValue","render","_this2","pageNumber","colSpan","border","map","x","onClick","handlePageChange","id","key","disabled","React","Component","App","paginateKey","state","isLocationAvailable","isLocationLoading","toilets","data","allToilets","nodes","slice","myLat","myLon","sortBy","isFilterHidden","maleChecked","femaleChecked","handicappedChecked","waterCoolerChecked","showerHeadsChecked","hoseChecked","sortByDistance","bind","assertThisInitialized_default","compareDistance","sortByName","getLocation","handleChange","handleClick","handleFilterChange","isShown","handlePageSize","getState","storeState","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","sessionStorage","setState","JSON","parse","getItem","setItem","stringify","event","target","value","parseInt","_this$setState","name","sort","t1","t2","utils","lat","lon","localeCompare","toilet","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","enableHighAccuracy","_this3","iconStyle","fontSize","layout","main","Helmet","float","marginLeft","onChange","type","checked","locationHelp","tableLayout","color","paginatedArray","filter","index","gatsby_browser_entry","to","replace","query","m","module","exports","require","default","latLonToMetres","lat1","lon1","lat2","lon2","dLat","PI","dLon","sin","cos","d","atan2","sqrt","round","appendMetres","distance","Number","isInteger","hasMaleToilet","paranoma","maleYaw","hasFemaleToilet","femaleYaw","hasHandicappedToilet","facilities","handicapped","hasSeperateHandicappedToilet","handicappedYaw","toiletHasHose","hose","toiletHasShowerHeads","showerHeads","toiletHasWaterCooler","waterCoolerYaw","buttonToLinkStyle","size","backgroundColor","cursor","textDecoration","display","margin","padding","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_tippy_js_react__WEBPACK_IMPORTED_MODULE_1__","HelpButton","arrow","trigger","placement","interactive","verticalAlign","src","alt","__webpack_exports__","maxWidth","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","_helpButton__WEBPACK_IMPORTED_MODULE_1__","textShadow","href","rel"],"mappings":"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","file":"component---src-pages-index-js-bbae8e7da7b5e28487c1.js","sourcesContent":["import React from \"react\"\nimport HelpButton from \"./helpButton\"\n\nconst content = (\n  <div style={{ textAlign: \"left\" }}>\n    Legend:\n    <ul>\n      <li>\n        <i className=\"em-svg em-man-raising-hand\" />: Has male toilet\n      </li>\n      <li>\n        <i className=\"em-svg em-woman-raising-hand\" />: Has female toilet\n      </li>\n      <li>\n        <i className=\"em-svg em-wheelchair\" />: Is handicapped accessible\n        (Includes seperate handicapped toilets or those inside toilets as a\n        larger cubicle)\n      </li>\n    </ul>\n  </div>\n)\n\nexport default () => <HelpButton content={content} />\n","import React from \"react\"\nimport HelpButton from \"./helpButton\"\n\nconst content = (\n  <div style={{ textAlign: \"left\" }}>\n    Choosing an option will remove any toilet without the chosen feature from\n    the list. Multiple selections will make criteria more stringent.\n    <br />\n    E.g. Selecting \"Male\" and \"Has Water Cooler\" will only show toilets that\n    has Male toilets and has a water cooler nearby.\n  </div>\n)\n\nexport default () => <HelpButton content={content} />\n","import React from \"react\"\n\nclass PaginatedArray extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.pageSize =\n      this.props.pageSize > this.props.children.length\n        ? this.props.children.length\n        : this.props.pageSize\n\n    // Setting up page number buttons\n    this.pageButtons = []\n    for (\n      let i = 0;\n      i < Math.ceil(this.props.children.length / this.pageSize);\n      i++\n    ) {\n      this.pageButtons.push(i + 1)\n    }\n\n    // Setting up individual pages\n    this.pages = this.props.children.reduce((acc, currentValue, i) => {\n      if (i % this.pageSize === 0) {\n        acc.push([currentValue])\n        return acc\n      } else {\n        acc[acc.length - 1].push(currentValue)\n        return acc\n      }\n    }, [])\n  }\n\n  render() {\n    return (\n      <tbody>\n        {this.pages[this.props.pageNumber - 1]}\n        {this.pageSize < this.props.children.length && (\n          <tr>\n            <td colSpan={2} style={{ border: \"0\", textAlign: \"center\" }}>\n              {this.pageButtons.map((x, i) => (\n                <button\n                  onClick={this.props.handlePageChange}\n                  id={i + 1}\n                  key={i + 1}\n                  disabled={this.props.pageNumber === i + 1}\n                >\n                  {x}\n                </button>\n              ))}\n            </td>\n          </tr>\n        )}\n      </tbody>\n    )\n  }\n}\n\nexport default PaginatedArray\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport TypesHelp from \"../components/typesHelp\"\nimport FilterHelp from \"../components/filterHelp\"\nimport LocationHelp from \"../components/locationHelp\"\nimport PaginatedArray from \"../components/paginatedArray\"\nimport { graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport * as utils from \"../utils/utils\"\nimport { Helmet } from \"react-helmet\"\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.paginateKey = 0\n\n    this.state = {\n      isLocationAvailable: false,\n      isLocationLoading: true,\n      toilets: this.props.data.allToilets.nodes.slice(0),\n      myLat: null,\n      myLon: null,\n      sortBy: `name`,\n      isFilterHidden: true,\n      maleChecked: false,\n      femaleChecked: false,\n      handicappedChecked: false,\n      waterCoolerChecked: false,\n      showerHeadsChecked: false,\n      hoseChecked: false,\n      pageSize: 10,\n      pageNumber: 1,\n    }\n\n    this.sortByDistance = this.sortByDistance.bind(this)\n    this.compareDistance = this.compareDistance.bind(this)\n    this.sortByName = this.sortByName.bind(this)\n    this.getLocation = this.getLocation.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n    this.handleFilterChange = this.handleFilterChange.bind(this)\n    this.isShown = this.isShown.bind(this)\n    this.handlePageSize = this.handlePageSize.bind(this)\n    this.handlePageChange = this.handlePageChange.bind(this)\n\n    this.getState = this.getState.bind(this)\n    this.storeState = this.storeState.bind(this)\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"beforeunload\", this.storeState)\n    this.getState()\n    this.getLocation()\n  }\n\n  componentWillUnmount() {\n    this.storeState()\n    window.removeEventListener(\"beforeunload\", this.storeState)\n  }\n\n  getState() {\n    if (sessionStorage.length > 1) {\n      this.setState({\n        sortBy: JSON.parse(sessionStorage.getItem(\"sortBy\")),\n        maleChecked: JSON.parse(sessionStorage.getItem(\"maleChecked\")),\n        femaleChecked: JSON.parse(sessionStorage.getItem(\"femaleChecked\")),\n        handicappedChecked: JSON.parse(\n          sessionStorage.getItem(\"handicappedChecked\")\n        ),\n        waterCoolerChecked: JSON.parse(\n          sessionStorage.getItem(\"waterCoolerChecked\")\n        ),\n        showerHeadsChecked: JSON.parse(\n          sessionStorage.getItem(\"showerHeadsChecked\")\n        ),\n        hoseChecked: JSON.parse(sessionStorage.getItem(\"hoseChecked\")),\n        pageSize: JSON.parse(sessionStorage.getItem(\"pageSize\")),\n        pageNumber: JSON.parse(sessionStorage.getItem(\"pageNumber\")),\n        isFilterHidden: JSON.parse(sessionStorage.getItem(\"isFilterHidden\")),\n      })\n    }\n  }\n\n  storeState() {\n    sessionStorage.setItem(\"sortBy\", JSON.stringify(this.state.sortBy))\n    sessionStorage.setItem(\n      \"maleChecked\",\n      JSON.stringify(this.state.maleChecked)\n    )\n    sessionStorage.setItem(\n      \"femaleChecked\",\n      JSON.stringify(this.state.femaleChecked)\n    )\n    sessionStorage.setItem(\n      \"handicappedChecked\",\n      JSON.stringify(this.state.handicappedChecked)\n    )\n    sessionStorage.setItem(\n      \"waterCoolerChecked\",\n      JSON.stringify(this.state.waterCoolerChecked)\n    )\n    sessionStorage.setItem(\n      \"showerHeadsChecked\",\n      JSON.stringify(this.state.showerHeadsChecked)\n    )\n    sessionStorage.setItem(\n      \"hoseChecked\",\n      JSON.stringify(this.state.hoseChecked)\n    )\n    sessionStorage.setItem(\"pageSize\", JSON.stringify(this.state.pageSize))\n    sessionStorage.setItem(\"pageNumber\", JSON.stringify(this.state.pageNumber))\n    sessionStorage.setItem(\n      \"isFilterHidden\",\n      JSON.stringify(this.state.isFilterHidden)\n    )\n  }\n\n  handleChange(event) {\n    this.setState({\n      sortBy: event.target.value,\n    })\n\n    if (event.target.value === \"name\") {\n      this.sortByName()\n    } else {\n      this.sortByDistance()\n    }\n  }\n\n  handlePageSize(event) {\n    this.setState({\n      pageSize: parseInt(event.target.value),\n    })\n  }\n\n  // Handles click on filter button\n  handleClick() {\n    this.setState({\n      isFilterHidden: !this.state.isFilterHidden,\n    })\n  }\n\n  handleFilterChange(event) {\n    this.setState({\n      pageNumber: 1,\n      [event.target.name]: !this.state[event.target.name],\n    })\n  }\n\n  sortByDistance() {\n    let toilets = this.state.toilets.slice(0)\n    toilets.sort(this.compareDistance)\n\n    this.setState({\n      toilets: toilets,\n    })\n  }\n\n  compareDistance(t1, t2) {\n    const t1ToMe = utils.latLonToMetres(\n      t1.lat,\n      t1.lon,\n      this.state.myLat,\n      this.state.myLon\n    )\n    const t2ToMe = utils.latLonToMetres(\n      t2.lat,\n      t2.lon,\n      this.state.myLat,\n      this.state.myLon\n    )\n    return t1ToMe - t2ToMe\n  }\n\n  sortByName() {\n    let toilets = this.state.toilets.slice(0)\n    toilets.sort((t1, t2) => t1.name.localeCompare(t2.name))\n\n    this.setState({\n      toilets: toilets,\n    })\n  }\n\n  isShown(toilet) {\n    return (\n      (!this.state.maleChecked || utils.hasMaleToilet(toilet)) &&\n      (!this.state.femaleChecked || utils.hasFemaleToilet(toilet)) &&\n      (!this.state.handicappedChecked || utils.hasHandicappedToilet(toilet)) &&\n      (!this.state.showerHeadsChecked || utils.toiletHasShowerHeads(toilet)) &&\n      (!this.state.hoseChecked || utils.toiletHasHose(toilet)) &&\n      (!this.state.waterCoolerChecked || utils.toiletHasWaterCooler(toilet))\n    )\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        pos => {\n          this.setState({\n            myLat: pos.coords.latitude,\n            myLon: pos.coords.longitude,\n            isLocationAvailable: true,\n            isLocationLoading: false,\n          })\n\n          if (this.state.sortBy === \"distance\") {\n            this.sortByDistance()\n          }\n        },\n        () => {\n          // Geolocation permissions denied\n          this.setState({\n            isLocationAvailable: false,\n            isLocationLoading: false,\n          })\n        },\n        { enableHighAccuracy: true }\n      )\n    } else {\n      // Browser doesn't support Geolocation\n      this.setState({\n        isLocationAvailable: false,\n        isLocationLoading: false,\n      })\n    }\n  }\n\n  handlePageChange(event) {\n    this.setState({ pageNumber: parseInt(event.target.id) })\n  }\n\n  render() {\n    const iconStyle = { fontSize: \"calc(0.6em + 0.5vw)\" }\n\n    return (\n      <Layout main={true}>\n        <Helmet>\n          <title>Let It Go</title>\n        </Helmet>\n        <h1>Let It Go</h1>\n\n        {/* Page size dropdown */}\n        <div style={{ float: \"right\", marginLeft: \"10px\" }}>\n          <label>\n            Show:{\" \"}\n            <select value={this.state.pageSize} onChange={this.handlePageSize}>\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"15\">15</option>\n              <option value=\"20\">20</option>\n              <option value=\"25\">25</option>\n              <option value=\"30\">30</option>\n              <option value=\"35\">35</option>\n              <option value=\"40\">40</option>\n            </select>\n          </label>\n        </div>\n\n        {/* Sorting dropdown */}\n        <div style={{ float: \"right\" }}>\n          <label>\n            Sort by:{\" \"}\n            <select value={this.state.sortBy} onChange={this.handleChange}>\n              <option value=\"name\">Name</option>\n              {this.state.isLocationAvailable && (\n                <option value=\"distance\">Distance</option>\n              )}\n            </select>\n          </label>\n        </div>\n\n        {/* Filtering */}\n        <button onClick={this.handleClick}>\n          {this.state.isFilterHidden ? \"Filter\" : \"Hide\"}\n        </button>\n        {!this.state.isFilterHidden && (\n          <div>\n            <p>\n              Show only\n              <FilterHelp />:\n            </p>\n            <label>\n              <input\n                name=\"maleChecked\"\n                type=\"checkbox\"\n                checked={this.state.maleChecked}\n                onChange={this.handleFilterChange}\n              />\n              Male\n            </label>\n            <br />\n            <label>\n              <input\n                name=\"femaleChecked\"\n                type=\"checkbox\"\n                checked={this.state.femaleChecked}\n                onChange={this.handleFilterChange}\n              />\n              Female\n            </label>\n            <br />\n            <label>\n              <input\n                name=\"handicappedChecked\"\n                type=\"checkbox\"\n                checked={this.state.handicappedChecked}\n                onChange={this.handleFilterChange}\n              />\n              Handicapped accessible\n            </label>\n            <br />\n            <label>\n              <input\n                name=\"showerHeadsChecked\"\n                type=\"checkbox\"\n                checked={this.state.showerHeadsChecked}\n                onChange={this.handleFilterChange}\n              />\n              Has Shower Heads\n            </label>\n            <br />\n            <label>\n              <input\n                name=\"hoseChecked\"\n                type=\"checkbox\"\n                checked={this.state.hoseChecked}\n                onChange={this.handleFilterChange}\n              />\n              Has Hoses\n            </label>\n            <br />\n            <label>\n              <input\n                name=\"waterCoolerChecked\"\n                type=\"checkbox\"\n                checked={this.state.waterCoolerChecked}\n                onChange={this.handleFilterChange}\n              />\n              Has Water Cooler\n            </label>\n            <br />\n          </div>\n        )}\n\n        {/* Location not available/Loading message */}\n        {this.state.isLocationLoading && <p>Location service is loading...</p>}\n        {!this.state.isLocationAvailable && !this.state.isLocationLoading && (\n          <LocationHelp />\n        )}\n\n        {/* Start of table */}\n        <table style={{ tableLayout: \"fixed\" }}>\n          <thead>\n            <tr>\n              <th>\n                Name\n                {this.state.isLocationAvailable && (\n                  <div style={{ color: \"gray\", fontSize: \"80%\" }}>Distance</div>\n                )}\n              </th>\n              <th style={{ textAlign: \"center\" }}>\n                Types\n                <TypesHelp />\n              </th>\n            </tr>\n          </thead>\n          <PaginatedArray\n            key={this.paginateKey++}\n            pageSize={this.state.pageSize}\n            pageNumber={this.state.pageNumber}\n            handlePageChange={this.handlePageChange}\n          >\n            {this.state.toilets.filter(this.isShown).map((toilet, index) => (\n              <tr key={index}>\n                {/* Name */}\n                <td>\n                  <Link to={\"/\" + toilet.name.replace(/\\s/g, \"\")}>\n                    {toilet.name}\n                  </Link>\n                  <br />\n                  {this.state.isLocationAvailable && (\n                    <span style={{ color: \"gray\", fontSize: \"80%\" }}>\n                      {utils.appendMetres(\n                        utils.latLonToMetres(\n                          this.state.myLat,\n                          this.state.myLon,\n                          toilet.lat,\n                          toilet.lon\n                        )\n                      )}\n                    </span>\n                  )}\n                </td>\n                {/* Types */}\n                <td style={{ textAlign: \"center\" }}>\n                  {utils.hasMaleToilet(toilet) && (\n                    <i\n                      className=\"em-svg em-man-raising-hand\"\n                      style={iconStyle}\n                    />\n                  )}\n                  {utils.hasFemaleToilet(toilet) && (\n                    <i\n                      className=\"em-svg em-woman-raising-hand\"\n                      style={iconStyle}\n                    />\n                  )}\n                  {utils.hasHandicappedToilet(toilet) && (\n                    <i className=\"em-svg em-wheelchair\" style={iconStyle} />\n                  )}\n                </td>\n              </tr>\n            ))}\n          </PaginatedArray>\n        </table>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  query {\n    allToilets(sort: { fields: name }) {\n      nodes {\n        name\n        facilities {\n          hose\n          showerHeads\n          handicapped\n        }\n        paranoma {\n          femaleYaw\n          maleYaw\n          handicappedYaw\n          waterCoolerYaw\n        }\n        lat\n        lon\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","function latLonToMetres(lat1, lon1, lat2, lon2) {\n  if (lat1 === null || lat2 === null || lon1 === null || lon2 === null) {\n    return \"Location not available\"\n  }\n  const R = 6371000 // Radius of the earth in m\n  const dLat = (lat2 - lat1) * (Math.PI / 180)\n  const dLon = (lon2 - lon1) * (Math.PI / 180)\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(lat1 * (Math.PI / 180)) *\n      Math.cos(lat2 * (Math.PI / 180)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2)\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n  const d = R * c // Distance in m\n  return Math.round(d)\n}\n\nfunction appendMetres(distance) {\n  return Number.isInteger(distance) ? distance + \"m\" : distance\n}\n\nfunction hasMaleToilet(toilet) {\n  return toilet.paranoma.maleYaw != null\n}\n\nfunction hasFemaleToilet(toilet) {\n  return toilet.paranoma.femaleYaw != null\n}\n\nfunction hasHandicappedToilet(toilet) {\n  return toilet.facilities.handicapped;\n}\n\nfunction hasSeperateHandicappedToilet(toilet) {\n  return toilet.paranoma.handicappedYaw != null\n}\n\nfunction toiletHasHose(toilet) {\n  return toilet.facilities.hose\n}\n\nfunction toiletHasShowerHeads(toilet) {\n  return toilet.facilities.showerHeads\n}\n\nfunction toiletHasWaterCooler(toilet) {\n  return toilet.paranoma.waterCoolerYaw != null\n}\n\nfunction buttonToLinkStyle(color, size) {\n  return {\n    backgroundColor: \"transparent\",\n    border: \"none\",\n    cursor: \"pointer\",\n    textDecoration: \"underline\",\n    display: \"inline\",\n    margin: \"0\",\n    padding: \"0\",\n    color: color,\n    fontSize: size,\n  }\n}\n\nexport {\n  latLonToMetres,\n  hasMaleToilet,\n  hasFemaleToilet,\n  hasHandicappedToilet,\n  hasSeperateHandicappedToilet,\n  toiletHasHose,\n  toiletHasShowerHeads,\n  toiletHasWaterCooler,\n  appendMetres,\n  buttonToLinkStyle\n}\n","import React from \"react\"\nimport Tippy from \"@tippy.js/react\"\n\nconst HelpButton = props => (\n  <Tippy\n    content={props.content}\n    arrow={true}\n    trigger=\"click\"\n    placement=\"bottom\"\n    interactive={true}\n  >\n    <img\n      style={{ verticalAlign: \"middle\" }}\n      src=\"https://material.io/tools/icons/static/icons/baseline-help_outline-24px.svg\"\n      alt=\"\"\n    />\n  </Tippy>\n)\n\nexport default HelpButton\n","import React from \"react\"\n\nexport default (props) => (\n  <div style={{ margin: `3rem auto`, maxWidth: 650, padding: `0 1rem` }}>\n    {props.children}\n  </div>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport HelpButton from \"./helpButton\"\n\nconst content = (\n  <div style={{ textAlign: \"left\" }}>\n    Check that you have:\n    <ul>\n      <li>\n        Enabled your device's GPS settings\n        <ul>\n          <li>\n            <a\n              style={{\n                textShadow: \"none\",\n              }}\n              href=\"https://support.google.com/accounts/answer/3467281\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Android\n            </a>\n          </li>\n          <li>\n            <a\n              style={{ textShadow: \"none\" }}\n              href=\"https://support.apple.com/en-us/HT207092\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              iOS\n            </a>\n          </li>\n          <li>Reload this page after enabling GPS settings</li>\n        </ul>\n      </li>\n      <li>\n        Allowed your browser and this website the neccessary permissions to read\n        your location\n        <ul>\n          <li>Press allow when a similar prompt as below appears</li>\n          <li>If such a prompt does not appear, reload the page</li>\n        </ul>\n      </li>\n    </ul>\n    <img\n      src=\"https://raw.githubusercontent.com/nelsontky/let-it-go/master/assets/misc/locationHelp.png\"\n      alt=\"\"\n    />\n  </div>\n)\n\nexport default () => (\n  <p>\n    Location not detected <HelpButton content={content} />\n  </p>\n)\n"],"sourceRoot":""}