{"version":3,"sources":["webpack:///./src/components/map.js","webpack:///./src/templates/toilet.js","webpack:///./src/components/layout.js"],"names":["Map","props","_React$Component","call","this","componentWillUnmount","clearInterval","timerID","getGeoLocation","_this","navigator","geolocation","getCurrentPosition","position","locationMarker","setPosition","lat","coords","latitude","lng","longitude","accuracyRadius","setCenter","setRadius","accuracy","enableHighAccuracy","componentDidMount","_this2","setInterval","map","window","google","maps","document","getElementById","center","lon","zoom","Marker","icon","Circle","getPosition","radius","fillColor","fillOpacity","strokeWeight","render","react_default","a","createElement","id","style","width","height","React","Component","__webpack_exports__","_ref","data","name","toilets","paranomaUrl","startingYaw","layout","es","image","yaw","vaov","maxPitch","minPitch","autoLoad","Hotspot","type","pitch","text","query","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","children","margin","maxWidth","padding"],"mappings":"qJA0EeA,cAtEb,SAAAA,EAAYC,GAAO,OACjBC,EAAAC,KAAAC,KAAMH,IADWG,yCAInBC,qBAAA,WACEC,cAAcF,KAAKG,YAGrBC,eAAA,WAAiB,IAAAC,EAAAL,KACXM,UAAUC,aACZD,UAAUC,YAAYC,mBACpB,SAAAC,GAEEJ,EAAKK,eAAeC,YAAY,CAC9BC,IAAKH,EAASI,OAAOC,SACrBC,IAAKN,EAASI,OAAOG,YAGvBX,EAAKY,eAAeC,UAAU,CAC5BN,IAAKH,EAASI,OAAOC,SACrBC,IAAKN,EAASI,OAAOG,YAGvBX,EAAKY,eAAeE,UAAUV,EAASI,OAAOO,WAEhD,aAGA,CAAEC,oBAAoB,OAQ5BC,kBAAA,WAAoB,IAAAC,EAAAvB,KAClBA,KAAKG,QAAUqB,YAAY,kBAAMD,EAAKnB,kBAAkB,KAExDJ,KAAKyB,IAAM,IAAIC,OAAOC,OAAOC,KAAKhC,IAAIiC,SAASC,eAAe,OAAQ,CACpEC,OAAQ,CAAEnB,IAAKZ,KAAKH,MAAMe,IAAKG,IAAKf,KAAKH,MAAMmC,KAC/CC,KAAM,KAGR,IAAIP,OAAOC,OAAOC,KAAKM,OAAO,CAC5BzB,SAAU,CAAEG,IAAKZ,KAAKH,MAAMe,IAAKG,IAAKf,KAAKH,MAAMmC,KACjDP,IAAKzB,KAAKyB,MAGZzB,KAAKU,eAAiB,IAAIgB,OAAOC,OAAOC,KAAKM,OAAO,CAClDT,IAAKzB,KAAKyB,IACVU,KAAI,kCACJ1B,SAAU,CAAEG,IAAKZ,KAAKH,MAAMe,IAAKG,IAAKf,KAAKH,MAAMmC,OAGnDhC,KAAKiB,eAAiB,IAAIS,OAAOC,OAAOC,KAAKQ,OAAO,CAClDX,IAAKzB,KAAKyB,IACVM,OAAQ/B,KAAKU,eAAe2B,cAC5BC,OAAQ,EACRC,UAAW,OACXC,YAAa,GACbC,aAAc,OAIlBC,OAAA,WACE,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,MAAMC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,WAnEvCC,IAAMC,wDCGTC,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACVC,EAAOD,EAAKE,QAAQD,KACpB3C,EAAM0C,EAAKE,QAAQ5C,IACnBoB,EAAMsB,EAAKE,QAAQxB,IACnByB,EAAcH,EAAKE,QAAQC,YAC3BC,EAAcJ,EAAKE,QAAQE,YAEjC,OACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAAA,UAAKU,GACLZ,EAAAC,EAAAC,cAACpB,EAAD,CAAKb,IAAKA,EAAKoB,IAAKA,IACpBW,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEZ,MAAM,OACNC,OAAO,QACPY,MAAOJ,EACPK,IAAMJ,EACNK,KAAM,GACNC,SAAU,EACVC,SAAU,EACVC,UAAQ,GAERvB,EAAAC,EAAAC,cAACe,EAAA,EAAUO,QAAX,CACEC,KAAK,OACLC,MAAO,EACPP,IAAMJ,EACNY,KAAMf,KAGVZ,EAAAC,EAAAC,cAAA,mBA5BS,IAiCF0B,EAAK,+CCvClB,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAEepB,EAAA,WAAAC,GAAA,IAAGuB,EAAHvB,EAAGuB,SAAH,OACbF,EAAA9B,EAAAC,cAAA,OAAKE,MAAO,CAAE8B,OAAM,YAAeC,SAAU,IAAKC,QAAO,WACtDH","file":"component---src-templates-toilet-js-f45b15ec9f9f66d0ac9d.js","sourcesContent":["import React from \"react\"\n// https://i.imgur.com/Rw0L7jC.png\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID)\n  }\n\n  getGeoLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          // console.log(\"yay\")\n          this.locationMarker.setPosition({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          })\n\n          this.accuracyRadius.setCenter({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          })\n\n          this.accuracyRadius.setRadius(position.coords.accuracy)\n        },\n        () => {\n          //handleLocationError(true, infoWindow, map.getCenter());\n        },\n        { enableHighAccuracy: true }\n      )\n    } else {\n      // Browser doesn't support Geolocation\n      //handleLocationError(false, infoWindow, map.getCenter());\n    }\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.getGeoLocation(), 1000)\n\n    this.map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      center: { lat: this.props.lat, lng: this.props.lon },\n      zoom: 17,\n    })\n\n    new window.google.maps.Marker({\n      position: { lat: this.props.lat, lng: this.props.lon },\n      map: this.map,\n    })\n\n    this.locationMarker = new window.google.maps.Marker({\n      map: this.map,\n      icon: `https://i.imgur.com/Rw0L7jC.png`,\n      position: { lat: this.props.lat, lng: this.props.lon }\n    })\n\n    this.accuracyRadius = new window.google.maps.Circle({\n      map: this.map,\n      center: this.locationMarker.getPosition(),\n      radius: 0,\n      fillColor: '#00F',\n      fillOpacity: 0.2,\n      strokeWeight: 0\n    })\n  }\n\n  render() {\n    return <div id=\"map\" style={{ width: \"100%\", height: 200 }} />\n  }\n}\n\nexport default Map\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Map from \"../components/map\"\nimport { Pannellum } from \"pannellum-react\";\n\nexport default ({ data }) => {\n  const name = data.toilets.name\n  const lat = data.toilets.lat\n  const lon = data.toilets.lon\n  const paranomaUrl = data.toilets.paranomaUrl\n  const startingYaw = data.toilets.startingYaw\n\n  return (\n    <Layout>\n      <h1>{name}</h1>\n      <Map lat={lat} lon={lon} />\n      <Pannellum\n        width=\"100%\"\n        height=\"200px\"\n        image={paranomaUrl}\n        yaw={ startingYaw }\n        vaov={45}\n        maxPitch={0}\n        minPitch={0}\n        autoLoad\n      >\n        <Pannellum.Hotspot\n          type=\"info\"\n          pitch={0}\n          yaw={ startingYaw }\n          text={name}\n        />\n      </Pannellum>\n      <p>Todo</p>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    toilets(fields: { slug: { eq: $slug } }) {\n      name\n      lat\n      lon\n      paranomaUrl\n      startingYaw\n    }\n  }\n`\n","import React from \"react\"\n\nexport default ({ children }) => (\n  <div style={{ margin: `3rem auto`, maxWidth: 650, padding: `0 1rem` }}>\n    {children}\n  </div>\n)\n"],"sourceRoot":""}